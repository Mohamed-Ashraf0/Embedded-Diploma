
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002a44  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00002a44  00002ad8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  0080006a  0080006a  00002ae2  2**0
                  ALLOC
  3 .stab         00001758  00000000  00000000  00002ae4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008b5  00000000  00000000  0000423c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00004af1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000018f  00000000  00000000  00004c51  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002045  00000000  00000000  00004de0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001101  00000000  00000000  00006e25  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f82  00000000  00000000  00007f26  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  00008ea8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c2  00000000  00000000  00009028  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000088e  00000000  00000000  000092ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00009b78  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 00 08 	jmp	0x1000	; 0x1000 <__vector_1>
       8:	0c 94 2f 08 	jmp	0x105e	; 0x105e <__vector_2>
       c:	0c 94 5b 08 	jmp	0x10b6	; 0x10b6 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e4       	ldi	r30, 0x44	; 68
      68:	fa e2       	ldi	r31, 0x2A	; 42
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 36       	cpi	r26, 0x6A	; 106
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	aa e6       	ldi	r26, 0x6A	; 106
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 37       	cpi	r26, 0x71	; 113
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 8a 08 	call	0x1114	; 0x1114 <main>
      8a:	0c 94 20 15 	jmp	0x2a40	; 0x2a40 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 e9 14 	jmp	0x29d2	; 0x29d2 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 05 15 	jmp	0x2a0a	; 0x2a0a <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 f5 14 	jmp	0x29ea	; 0x29ea <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 11 15 	jmp	0x2a22	; 0x2a22 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 f5 14 	jmp	0x29ea	; 0x29ea <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 11 15 	jmp	0x2a22	; 0x2a22 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 e9 14 	jmp	0x29d2	; 0x29d2 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 05 15 	jmp	0x2a0a	; 0x2a0a <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 f1 14 	jmp	0x29e2	; 0x29e2 <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 0d 15 	jmp	0x2a1a	; 0x2a1a <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 f5 14 	jmp	0x29ea	; 0x29ea <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 11 15 	jmp	0x2a22	; 0x2a22 <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 f5 14 	jmp	0x29ea	; 0x29ea <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 11 15 	jmp	0x2a22	; 0x2a22 <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 f5 14 	jmp	0x29ea	; 0x29ea <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 11 15 	jmp	0x2a22	; 0x2a22 <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 f9 14 	jmp	0x29f2	; 0x29f2 <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 15 15 	jmp	0x2a2a	; 0x2a2a <__epilogue_restores__+0x20>

00000952 <__pack_f>:
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	0f 93       	push	r16
     95a:	1f 93       	push	r17
     95c:	fc 01       	movw	r30, r24
     95e:	e4 80       	ldd	r14, Z+4	; 0x04
     960:	f5 80       	ldd	r15, Z+5	; 0x05
     962:	06 81       	ldd	r16, Z+6	; 0x06
     964:	17 81       	ldd	r17, Z+7	; 0x07
     966:	d1 80       	ldd	r13, Z+1	; 0x01
     968:	80 81       	ld	r24, Z
     96a:	82 30       	cpi	r24, 0x02	; 2
     96c:	48 f4       	brcc	.+18     	; 0x980 <__pack_f+0x2e>
     96e:	80 e0       	ldi	r24, 0x00	; 0
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	a0 e1       	ldi	r26, 0x10	; 16
     974:	b0 e0       	ldi	r27, 0x00	; 0
     976:	e8 2a       	or	r14, r24
     978:	f9 2a       	or	r15, r25
     97a:	0a 2b       	or	r16, r26
     97c:	1b 2b       	or	r17, r27
     97e:	a5 c0       	rjmp	.+330    	; 0xaca <__pack_f+0x178>
     980:	84 30       	cpi	r24, 0x04	; 4
     982:	09 f4       	brne	.+2      	; 0x986 <__pack_f+0x34>
     984:	9f c0       	rjmp	.+318    	; 0xac4 <__pack_f+0x172>
     986:	82 30       	cpi	r24, 0x02	; 2
     988:	21 f4       	brne	.+8      	; 0x992 <__pack_f+0x40>
     98a:	ee 24       	eor	r14, r14
     98c:	ff 24       	eor	r15, r15
     98e:	87 01       	movw	r16, r14
     990:	05 c0       	rjmp	.+10     	; 0x99c <__pack_f+0x4a>
     992:	e1 14       	cp	r14, r1
     994:	f1 04       	cpc	r15, r1
     996:	01 05       	cpc	r16, r1
     998:	11 05       	cpc	r17, r1
     99a:	19 f4       	brne	.+6      	; 0x9a2 <__pack_f+0x50>
     99c:	e0 e0       	ldi	r30, 0x00	; 0
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	96 c0       	rjmp	.+300    	; 0xace <__pack_f+0x17c>
     9a2:	62 81       	ldd	r22, Z+2	; 0x02
     9a4:	73 81       	ldd	r23, Z+3	; 0x03
     9a6:	9f ef       	ldi	r25, 0xFF	; 255
     9a8:	62 38       	cpi	r22, 0x82	; 130
     9aa:	79 07       	cpc	r23, r25
     9ac:	0c f0       	brlt	.+2      	; 0x9b0 <__pack_f+0x5e>
     9ae:	5b c0       	rjmp	.+182    	; 0xa66 <__pack_f+0x114>
     9b0:	22 e8       	ldi	r18, 0x82	; 130
     9b2:	3f ef       	ldi	r19, 0xFF	; 255
     9b4:	26 1b       	sub	r18, r22
     9b6:	37 0b       	sbc	r19, r23
     9b8:	2a 31       	cpi	r18, 0x1A	; 26
     9ba:	31 05       	cpc	r19, r1
     9bc:	2c f0       	brlt	.+10     	; 0x9c8 <__pack_f+0x76>
     9be:	20 e0       	ldi	r18, 0x00	; 0
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	40 e0       	ldi	r20, 0x00	; 0
     9c4:	50 e0       	ldi	r21, 0x00	; 0
     9c6:	2a c0       	rjmp	.+84     	; 0xa1c <__pack_f+0xca>
     9c8:	b8 01       	movw	r22, r16
     9ca:	a7 01       	movw	r20, r14
     9cc:	02 2e       	mov	r0, r18
     9ce:	04 c0       	rjmp	.+8      	; 0x9d8 <__pack_f+0x86>
     9d0:	76 95       	lsr	r23
     9d2:	67 95       	ror	r22
     9d4:	57 95       	ror	r21
     9d6:	47 95       	ror	r20
     9d8:	0a 94       	dec	r0
     9da:	d2 f7       	brpl	.-12     	; 0x9d0 <__pack_f+0x7e>
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	a0 e0       	ldi	r26, 0x00	; 0
     9e2:	b0 e0       	ldi	r27, 0x00	; 0
     9e4:	04 c0       	rjmp	.+8      	; 0x9ee <__pack_f+0x9c>
     9e6:	88 0f       	add	r24, r24
     9e8:	99 1f       	adc	r25, r25
     9ea:	aa 1f       	adc	r26, r26
     9ec:	bb 1f       	adc	r27, r27
     9ee:	2a 95       	dec	r18
     9f0:	d2 f7       	brpl	.-12     	; 0x9e6 <__pack_f+0x94>
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	a1 09       	sbc	r26, r1
     9f6:	b1 09       	sbc	r27, r1
     9f8:	8e 21       	and	r24, r14
     9fa:	9f 21       	and	r25, r15
     9fc:	a0 23       	and	r26, r16
     9fe:	b1 23       	and	r27, r17
     a00:	00 97       	sbiw	r24, 0x00	; 0
     a02:	a1 05       	cpc	r26, r1
     a04:	b1 05       	cpc	r27, r1
     a06:	21 f0       	breq	.+8      	; 0xa10 <__pack_f+0xbe>
     a08:	81 e0       	ldi	r24, 0x01	; 1
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	a0 e0       	ldi	r26, 0x00	; 0
     a0e:	b0 e0       	ldi	r27, 0x00	; 0
     a10:	9a 01       	movw	r18, r20
     a12:	ab 01       	movw	r20, r22
     a14:	28 2b       	or	r18, r24
     a16:	39 2b       	or	r19, r25
     a18:	4a 2b       	or	r20, r26
     a1a:	5b 2b       	or	r21, r27
     a1c:	da 01       	movw	r26, r20
     a1e:	c9 01       	movw	r24, r18
     a20:	8f 77       	andi	r24, 0x7F	; 127
     a22:	90 70       	andi	r25, 0x00	; 0
     a24:	a0 70       	andi	r26, 0x00	; 0
     a26:	b0 70       	andi	r27, 0x00	; 0
     a28:	80 34       	cpi	r24, 0x40	; 64
     a2a:	91 05       	cpc	r25, r1
     a2c:	a1 05       	cpc	r26, r1
     a2e:	b1 05       	cpc	r27, r1
     a30:	39 f4       	brne	.+14     	; 0xa40 <__pack_f+0xee>
     a32:	27 ff       	sbrs	r18, 7
     a34:	09 c0       	rjmp	.+18     	; 0xa48 <__pack_f+0xf6>
     a36:	20 5c       	subi	r18, 0xC0	; 192
     a38:	3f 4f       	sbci	r19, 0xFF	; 255
     a3a:	4f 4f       	sbci	r20, 0xFF	; 255
     a3c:	5f 4f       	sbci	r21, 0xFF	; 255
     a3e:	04 c0       	rjmp	.+8      	; 0xa48 <__pack_f+0xf6>
     a40:	21 5c       	subi	r18, 0xC1	; 193
     a42:	3f 4f       	sbci	r19, 0xFF	; 255
     a44:	4f 4f       	sbci	r20, 0xFF	; 255
     a46:	5f 4f       	sbci	r21, 0xFF	; 255
     a48:	e0 e0       	ldi	r30, 0x00	; 0
     a4a:	f0 e0       	ldi	r31, 0x00	; 0
     a4c:	20 30       	cpi	r18, 0x00	; 0
     a4e:	a0 e0       	ldi	r26, 0x00	; 0
     a50:	3a 07       	cpc	r19, r26
     a52:	a0 e0       	ldi	r26, 0x00	; 0
     a54:	4a 07       	cpc	r20, r26
     a56:	a0 e4       	ldi	r26, 0x40	; 64
     a58:	5a 07       	cpc	r21, r26
     a5a:	10 f0       	brcs	.+4      	; 0xa60 <__pack_f+0x10e>
     a5c:	e1 e0       	ldi	r30, 0x01	; 1
     a5e:	f0 e0       	ldi	r31, 0x00	; 0
     a60:	79 01       	movw	r14, r18
     a62:	8a 01       	movw	r16, r20
     a64:	27 c0       	rjmp	.+78     	; 0xab4 <__pack_f+0x162>
     a66:	60 38       	cpi	r22, 0x80	; 128
     a68:	71 05       	cpc	r23, r1
     a6a:	64 f5       	brge	.+88     	; 0xac4 <__pack_f+0x172>
     a6c:	fb 01       	movw	r30, r22
     a6e:	e1 58       	subi	r30, 0x81	; 129
     a70:	ff 4f       	sbci	r31, 0xFF	; 255
     a72:	d8 01       	movw	r26, r16
     a74:	c7 01       	movw	r24, r14
     a76:	8f 77       	andi	r24, 0x7F	; 127
     a78:	90 70       	andi	r25, 0x00	; 0
     a7a:	a0 70       	andi	r26, 0x00	; 0
     a7c:	b0 70       	andi	r27, 0x00	; 0
     a7e:	80 34       	cpi	r24, 0x40	; 64
     a80:	91 05       	cpc	r25, r1
     a82:	a1 05       	cpc	r26, r1
     a84:	b1 05       	cpc	r27, r1
     a86:	39 f4       	brne	.+14     	; 0xa96 <__pack_f+0x144>
     a88:	e7 fe       	sbrs	r14, 7
     a8a:	0d c0       	rjmp	.+26     	; 0xaa6 <__pack_f+0x154>
     a8c:	80 e4       	ldi	r24, 0x40	; 64
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	a0 e0       	ldi	r26, 0x00	; 0
     a92:	b0 e0       	ldi	r27, 0x00	; 0
     a94:	04 c0       	rjmp	.+8      	; 0xa9e <__pack_f+0x14c>
     a96:	8f e3       	ldi	r24, 0x3F	; 63
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	e8 0e       	add	r14, r24
     aa0:	f9 1e       	adc	r15, r25
     aa2:	0a 1f       	adc	r16, r26
     aa4:	1b 1f       	adc	r17, r27
     aa6:	17 ff       	sbrs	r17, 7
     aa8:	05 c0       	rjmp	.+10     	; 0xab4 <__pack_f+0x162>
     aaa:	16 95       	lsr	r17
     aac:	07 95       	ror	r16
     aae:	f7 94       	ror	r15
     ab0:	e7 94       	ror	r14
     ab2:	31 96       	adiw	r30, 0x01	; 1
     ab4:	87 e0       	ldi	r24, 0x07	; 7
     ab6:	16 95       	lsr	r17
     ab8:	07 95       	ror	r16
     aba:	f7 94       	ror	r15
     abc:	e7 94       	ror	r14
     abe:	8a 95       	dec	r24
     ac0:	d1 f7       	brne	.-12     	; 0xab6 <__pack_f+0x164>
     ac2:	05 c0       	rjmp	.+10     	; 0xace <__pack_f+0x17c>
     ac4:	ee 24       	eor	r14, r14
     ac6:	ff 24       	eor	r15, r15
     ac8:	87 01       	movw	r16, r14
     aca:	ef ef       	ldi	r30, 0xFF	; 255
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	6e 2f       	mov	r22, r30
     ad0:	67 95       	ror	r22
     ad2:	66 27       	eor	r22, r22
     ad4:	67 95       	ror	r22
     ad6:	90 2f       	mov	r25, r16
     ad8:	9f 77       	andi	r25, 0x7F	; 127
     ada:	d7 94       	ror	r13
     adc:	dd 24       	eor	r13, r13
     ade:	d7 94       	ror	r13
     ae0:	8e 2f       	mov	r24, r30
     ae2:	86 95       	lsr	r24
     ae4:	49 2f       	mov	r20, r25
     ae6:	46 2b       	or	r20, r22
     ae8:	58 2f       	mov	r21, r24
     aea:	5d 29       	or	r21, r13
     aec:	b7 01       	movw	r22, r14
     aee:	ca 01       	movw	r24, r20
     af0:	1f 91       	pop	r17
     af2:	0f 91       	pop	r16
     af4:	ff 90       	pop	r15
     af6:	ef 90       	pop	r14
     af8:	df 90       	pop	r13
     afa:	08 95       	ret

00000afc <__unpack_f>:
     afc:	fc 01       	movw	r30, r24
     afe:	db 01       	movw	r26, r22
     b00:	40 81       	ld	r20, Z
     b02:	51 81       	ldd	r21, Z+1	; 0x01
     b04:	22 81       	ldd	r18, Z+2	; 0x02
     b06:	62 2f       	mov	r22, r18
     b08:	6f 77       	andi	r22, 0x7F	; 127
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	22 1f       	adc	r18, r18
     b0e:	22 27       	eor	r18, r18
     b10:	22 1f       	adc	r18, r18
     b12:	93 81       	ldd	r25, Z+3	; 0x03
     b14:	89 2f       	mov	r24, r25
     b16:	88 0f       	add	r24, r24
     b18:	82 2b       	or	r24, r18
     b1a:	28 2f       	mov	r18, r24
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	99 1f       	adc	r25, r25
     b20:	99 27       	eor	r25, r25
     b22:	99 1f       	adc	r25, r25
     b24:	11 96       	adiw	r26, 0x01	; 1
     b26:	9c 93       	st	X, r25
     b28:	11 97       	sbiw	r26, 0x01	; 1
     b2a:	21 15       	cp	r18, r1
     b2c:	31 05       	cpc	r19, r1
     b2e:	a9 f5       	brne	.+106    	; 0xb9a <__unpack_f+0x9e>
     b30:	41 15       	cp	r20, r1
     b32:	51 05       	cpc	r21, r1
     b34:	61 05       	cpc	r22, r1
     b36:	71 05       	cpc	r23, r1
     b38:	11 f4       	brne	.+4      	; 0xb3e <__unpack_f+0x42>
     b3a:	82 e0       	ldi	r24, 0x02	; 2
     b3c:	37 c0       	rjmp	.+110    	; 0xbac <__unpack_f+0xb0>
     b3e:	82 e8       	ldi	r24, 0x82	; 130
     b40:	9f ef       	ldi	r25, 0xFF	; 255
     b42:	13 96       	adiw	r26, 0x03	; 3
     b44:	9c 93       	st	X, r25
     b46:	8e 93       	st	-X, r24
     b48:	12 97       	sbiw	r26, 0x02	; 2
     b4a:	9a 01       	movw	r18, r20
     b4c:	ab 01       	movw	r20, r22
     b4e:	67 e0       	ldi	r22, 0x07	; 7
     b50:	22 0f       	add	r18, r18
     b52:	33 1f       	adc	r19, r19
     b54:	44 1f       	adc	r20, r20
     b56:	55 1f       	adc	r21, r21
     b58:	6a 95       	dec	r22
     b5a:	d1 f7       	brne	.-12     	; 0xb50 <__unpack_f+0x54>
     b5c:	83 e0       	ldi	r24, 0x03	; 3
     b5e:	8c 93       	st	X, r24
     b60:	0d c0       	rjmp	.+26     	; 0xb7c <__unpack_f+0x80>
     b62:	22 0f       	add	r18, r18
     b64:	33 1f       	adc	r19, r19
     b66:	44 1f       	adc	r20, r20
     b68:	55 1f       	adc	r21, r21
     b6a:	12 96       	adiw	r26, 0x02	; 2
     b6c:	8d 91       	ld	r24, X+
     b6e:	9c 91       	ld	r25, X
     b70:	13 97       	sbiw	r26, 0x03	; 3
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	13 96       	adiw	r26, 0x03	; 3
     b76:	9c 93       	st	X, r25
     b78:	8e 93       	st	-X, r24
     b7a:	12 97       	sbiw	r26, 0x02	; 2
     b7c:	20 30       	cpi	r18, 0x00	; 0
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	38 07       	cpc	r19, r24
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	48 07       	cpc	r20, r24
     b86:	80 e4       	ldi	r24, 0x40	; 64
     b88:	58 07       	cpc	r21, r24
     b8a:	58 f3       	brcs	.-42     	; 0xb62 <__unpack_f+0x66>
     b8c:	14 96       	adiw	r26, 0x04	; 4
     b8e:	2d 93       	st	X+, r18
     b90:	3d 93       	st	X+, r19
     b92:	4d 93       	st	X+, r20
     b94:	5c 93       	st	X, r21
     b96:	17 97       	sbiw	r26, 0x07	; 7
     b98:	08 95       	ret
     b9a:	2f 3f       	cpi	r18, 0xFF	; 255
     b9c:	31 05       	cpc	r19, r1
     b9e:	79 f4       	brne	.+30     	; 0xbbe <__unpack_f+0xc2>
     ba0:	41 15       	cp	r20, r1
     ba2:	51 05       	cpc	r21, r1
     ba4:	61 05       	cpc	r22, r1
     ba6:	71 05       	cpc	r23, r1
     ba8:	19 f4       	brne	.+6      	; 0xbb0 <__unpack_f+0xb4>
     baa:	84 e0       	ldi	r24, 0x04	; 4
     bac:	8c 93       	st	X, r24
     bae:	08 95       	ret
     bb0:	64 ff       	sbrs	r22, 4
     bb2:	03 c0       	rjmp	.+6      	; 0xbba <__unpack_f+0xbe>
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	8c 93       	st	X, r24
     bb8:	12 c0       	rjmp	.+36     	; 0xbde <__unpack_f+0xe2>
     bba:	1c 92       	st	X, r1
     bbc:	10 c0       	rjmp	.+32     	; 0xbde <__unpack_f+0xe2>
     bbe:	2f 57       	subi	r18, 0x7F	; 127
     bc0:	30 40       	sbci	r19, 0x00	; 0
     bc2:	13 96       	adiw	r26, 0x03	; 3
     bc4:	3c 93       	st	X, r19
     bc6:	2e 93       	st	-X, r18
     bc8:	12 97       	sbiw	r26, 0x02	; 2
     bca:	83 e0       	ldi	r24, 0x03	; 3
     bcc:	8c 93       	st	X, r24
     bce:	87 e0       	ldi	r24, 0x07	; 7
     bd0:	44 0f       	add	r20, r20
     bd2:	55 1f       	adc	r21, r21
     bd4:	66 1f       	adc	r22, r22
     bd6:	77 1f       	adc	r23, r23
     bd8:	8a 95       	dec	r24
     bda:	d1 f7       	brne	.-12     	; 0xbd0 <__unpack_f+0xd4>
     bdc:	70 64       	ori	r23, 0x40	; 64
     bde:	14 96       	adiw	r26, 0x04	; 4
     be0:	4d 93       	st	X+, r20
     be2:	5d 93       	st	X+, r21
     be4:	6d 93       	st	X+, r22
     be6:	7c 93       	st	X, r23
     be8:	17 97       	sbiw	r26, 0x07	; 7
     bea:	08 95       	ret

00000bec <__fpcmp_parts_f>:
     bec:	1f 93       	push	r17
     bee:	dc 01       	movw	r26, r24
     bf0:	fb 01       	movw	r30, r22
     bf2:	9c 91       	ld	r25, X
     bf4:	92 30       	cpi	r25, 0x02	; 2
     bf6:	08 f4       	brcc	.+2      	; 0xbfa <__fpcmp_parts_f+0xe>
     bf8:	47 c0       	rjmp	.+142    	; 0xc88 <__fpcmp_parts_f+0x9c>
     bfa:	80 81       	ld	r24, Z
     bfc:	82 30       	cpi	r24, 0x02	; 2
     bfe:	08 f4       	brcc	.+2      	; 0xc02 <__fpcmp_parts_f+0x16>
     c00:	43 c0       	rjmp	.+134    	; 0xc88 <__fpcmp_parts_f+0x9c>
     c02:	94 30       	cpi	r25, 0x04	; 4
     c04:	51 f4       	brne	.+20     	; 0xc1a <__fpcmp_parts_f+0x2e>
     c06:	11 96       	adiw	r26, 0x01	; 1
     c08:	1c 91       	ld	r17, X
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	99 f5       	brne	.+102    	; 0xc74 <__fpcmp_parts_f+0x88>
     c0e:	81 81       	ldd	r24, Z+1	; 0x01
     c10:	68 2f       	mov	r22, r24
     c12:	70 e0       	ldi	r23, 0x00	; 0
     c14:	61 1b       	sub	r22, r17
     c16:	71 09       	sbc	r23, r1
     c18:	3f c0       	rjmp	.+126    	; 0xc98 <__fpcmp_parts_f+0xac>
     c1a:	84 30       	cpi	r24, 0x04	; 4
     c1c:	21 f0       	breq	.+8      	; 0xc26 <__fpcmp_parts_f+0x3a>
     c1e:	92 30       	cpi	r25, 0x02	; 2
     c20:	31 f4       	brne	.+12     	; 0xc2e <__fpcmp_parts_f+0x42>
     c22:	82 30       	cpi	r24, 0x02	; 2
     c24:	b9 f1       	breq	.+110    	; 0xc94 <__fpcmp_parts_f+0xa8>
     c26:	81 81       	ldd	r24, Z+1	; 0x01
     c28:	88 23       	and	r24, r24
     c2a:	89 f1       	breq	.+98     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c2c:	2d c0       	rjmp	.+90     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	11 97       	sbiw	r26, 0x01	; 1
     c34:	82 30       	cpi	r24, 0x02	; 2
     c36:	f1 f0       	breq	.+60     	; 0xc74 <__fpcmp_parts_f+0x88>
     c38:	81 81       	ldd	r24, Z+1	; 0x01
     c3a:	18 17       	cp	r17, r24
     c3c:	d9 f4       	brne	.+54     	; 0xc74 <__fpcmp_parts_f+0x88>
     c3e:	12 96       	adiw	r26, 0x02	; 2
     c40:	2d 91       	ld	r18, X+
     c42:	3c 91       	ld	r19, X
     c44:	13 97       	sbiw	r26, 0x03	; 3
     c46:	82 81       	ldd	r24, Z+2	; 0x02
     c48:	93 81       	ldd	r25, Z+3	; 0x03
     c4a:	82 17       	cp	r24, r18
     c4c:	93 07       	cpc	r25, r19
     c4e:	94 f0       	brlt	.+36     	; 0xc74 <__fpcmp_parts_f+0x88>
     c50:	28 17       	cp	r18, r24
     c52:	39 07       	cpc	r19, r25
     c54:	bc f0       	brlt	.+46     	; 0xc84 <__fpcmp_parts_f+0x98>
     c56:	14 96       	adiw	r26, 0x04	; 4
     c58:	8d 91       	ld	r24, X+
     c5a:	9d 91       	ld	r25, X+
     c5c:	0d 90       	ld	r0, X+
     c5e:	bc 91       	ld	r27, X
     c60:	a0 2d       	mov	r26, r0
     c62:	24 81       	ldd	r18, Z+4	; 0x04
     c64:	35 81       	ldd	r19, Z+5	; 0x05
     c66:	46 81       	ldd	r20, Z+6	; 0x06
     c68:	57 81       	ldd	r21, Z+7	; 0x07
     c6a:	28 17       	cp	r18, r24
     c6c:	39 07       	cpc	r19, r25
     c6e:	4a 07       	cpc	r20, r26
     c70:	5b 07       	cpc	r21, r27
     c72:	18 f4       	brcc	.+6      	; 0xc7a <__fpcmp_parts_f+0x8e>
     c74:	11 23       	and	r17, r17
     c76:	41 f0       	breq	.+16     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c78:	0a c0       	rjmp	.+20     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c7a:	82 17       	cp	r24, r18
     c7c:	93 07       	cpc	r25, r19
     c7e:	a4 07       	cpc	r26, r20
     c80:	b5 07       	cpc	r27, r21
     c82:	40 f4       	brcc	.+16     	; 0xc94 <__fpcmp_parts_f+0xa8>
     c84:	11 23       	and	r17, r17
     c86:	19 f0       	breq	.+6      	; 0xc8e <__fpcmp_parts_f+0xa2>
     c88:	61 e0       	ldi	r22, 0x01	; 1
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <__fpcmp_parts_f+0xac>
     c8e:	6f ef       	ldi	r22, 0xFF	; 255
     c90:	7f ef       	ldi	r23, 0xFF	; 255
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <__fpcmp_parts_f+0xac>
     c94:	60 e0       	ldi	r22, 0x00	; 0
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	cb 01       	movw	r24, r22
     c9a:	1f 91       	pop	r17
     c9c:	08 95       	ret

00000c9e <TIMER1_CRC_init>:
unsigned char pause_flag=0;
unsigned char Max_flag=0;
unsigned char Min_flag=0;

void TIMER1_CRC_init(void)
{
     c9e:	df 93       	push	r29
     ca0:	cf 93       	push	r28
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62
	TCNT1=0; //counter start at 0
     ca6:	ec e4       	ldi	r30, 0x4C	; 76
     ca8:	f0 e0       	ldi	r31, 0x00	; 0
     caa:	11 82       	std	Z+1, r1	; 0x01
     cac:	10 82       	st	Z, r1
	TCCR1A|=(1<<FOC1A)|(1<<FOC1B); //non pwm
     cae:	af e4       	ldi	r26, 0x4F	; 79
     cb0:	b0 e0       	ldi	r27, 0x00	; 0
     cb2:	ef e4       	ldi	r30, 0x4F	; 79
     cb4:	f0 e0       	ldi	r31, 0x00	; 0
     cb6:	80 81       	ld	r24, Z
     cb8:	8c 60       	ori	r24, 0x0C	; 12
     cba:	8c 93       	st	X, r24
	TCCR1B|=(1<<WGM12)|(1<<CS12)|(1<<(CS10)); //compare mode - priscaler=1024
     cbc:	ae e4       	ldi	r26, 0x4E	; 78
     cbe:	b0 e0       	ldi	r27, 0x00	; 0
     cc0:	ee e4       	ldi	r30, 0x4E	; 78
     cc2:	f0 e0       	ldi	r31, 0x00	; 0
     cc4:	80 81       	ld	r24, Z
     cc6:	8d 60       	ori	r24, 0x0D	; 13
     cc8:	8c 93       	st	X, r24
	OCR1A=16383;  //1sec=(1024/16MHZ)*16384
     cca:	ea e4       	ldi	r30, 0x4A	; 74
     ccc:	f0 e0       	ldi	r31, 0x00	; 0
     cce:	8f ef       	ldi	r24, 0xFF	; 255
     cd0:	9f e3       	ldi	r25, 0x3F	; 63
     cd2:	91 83       	std	Z+1, r25	; 0x01
     cd4:	80 83       	st	Z, r24
	TIMSK|=(1<<OCIE1A);//enable compare interrupt
     cd6:	a9 e5       	ldi	r26, 0x59	; 89
     cd8:	b0 e0       	ldi	r27, 0x00	; 0
     cda:	e9 e5       	ldi	r30, 0x59	; 89
     cdc:	f0 e0       	ldi	r31, 0x00	; 0
     cde:	80 81       	ld	r24, Z
     ce0:	80 61       	ori	r24, 0x10	; 16
     ce2:	8c 93       	st	X, r24
}
     ce4:	cf 91       	pop	r28
     ce6:	df 91       	pop	r29
     ce8:	08 95       	ret

00000cea <INT0_init>:

void INT0_init(void){
     cea:	df 93       	push	r29
     cec:	cf 93       	push	r28
     cee:	cd b7       	in	r28, 0x3d	; 61
     cf0:	de b7       	in	r29, 0x3e	; 62
	DDRD &= ~(1<<PD2); //PD2 input
     cf2:	a1 e3       	ldi	r26, 0x31	; 49
     cf4:	b0 e0       	ldi	r27, 0x00	; 0
     cf6:	e1 e3       	ldi	r30, 0x31	; 49
     cf8:	f0 e0       	ldi	r31, 0x00	; 0
     cfa:	80 81       	ld	r24, Z
     cfc:	8b 7f       	andi	r24, 0xFB	; 251
     cfe:	8c 93       	st	X, r24
	PORTD |= (1<<PD2); //enable internal resistance
     d00:	a2 e3       	ldi	r26, 0x32	; 50
     d02:	b0 e0       	ldi	r27, 0x00	; 0
     d04:	e2 e3       	ldi	r30, 0x32	; 50
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	80 81       	ld	r24, Z
     d0a:	84 60       	ori	r24, 0x04	; 4
     d0c:	8c 93       	st	X, r24
	GICR|=(1<<INT0);   //enable INT0
     d0e:	ab e5       	ldi	r26, 0x5B	; 91
     d10:	b0 e0       	ldi	r27, 0x00	; 0
     d12:	eb e5       	ldi	r30, 0x5B	; 91
     d14:	f0 e0       	ldi	r31, 0x00	; 0
     d16:	80 81       	ld	r24, Z
     d18:	80 64       	ori	r24, 0x40	; 64
     d1a:	8c 93       	st	X, r24
	MCUCR|=(1<<ISC01); // with falling edge
     d1c:	a5 e5       	ldi	r26, 0x55	; 85
     d1e:	b0 e0       	ldi	r27, 0x00	; 0
     d20:	e5 e5       	ldi	r30, 0x55	; 85
     d22:	f0 e0       	ldi	r31, 0x00	; 0
     d24:	80 81       	ld	r24, Z
     d26:	82 60       	ori	r24, 0x02	; 2
     d28:	8c 93       	st	X, r24
}
     d2a:	cf 91       	pop	r28
     d2c:	df 91       	pop	r29
     d2e:	08 95       	ret

00000d30 <INT1_init>:

void INT1_init(void){
     d30:	df 93       	push	r29
     d32:	cf 93       	push	r28
     d34:	cd b7       	in	r28, 0x3d	; 61
     d36:	de b7       	in	r29, 0x3e	; 62
	DDRD &= ~(1<<PD3); //PD3 input
     d38:	a1 e3       	ldi	r26, 0x31	; 49
     d3a:	b0 e0       	ldi	r27, 0x00	; 0
     d3c:	e1 e3       	ldi	r30, 0x31	; 49
     d3e:	f0 e0       	ldi	r31, 0x00	; 0
     d40:	80 81       	ld	r24, Z
     d42:	87 7f       	andi	r24, 0xF7	; 247
     d44:	8c 93       	st	X, r24
	MCUCR|=(1<<ISC11) | (1<<ISC10); //enable INT1
     d46:	a5 e5       	ldi	r26, 0x55	; 85
     d48:	b0 e0       	ldi	r27, 0x00	; 0
     d4a:	e5 e5       	ldi	r30, 0x55	; 85
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	80 81       	ld	r24, Z
     d50:	8c 60       	ori	r24, 0x0C	; 12
     d52:	8c 93       	st	X, r24
	GICR|=(1<<INT1) ; //with rising edge
     d54:	ab e5       	ldi	r26, 0x5B	; 91
     d56:	b0 e0       	ldi	r27, 0x00	; 0
     d58:	eb e5       	ldi	r30, 0x5B	; 91
     d5a:	f0 e0       	ldi	r31, 0x00	; 0
     d5c:	80 81       	ld	r24, Z
     d5e:	80 68       	ori	r24, 0x80	; 128
     d60:	8c 93       	st	X, r24
}
     d62:	cf 91       	pop	r28
     d64:	df 91       	pop	r29
     d66:	08 95       	ret

00000d68 <INT2_init>:

void INT2_init(void){
     d68:	df 93       	push	r29
     d6a:	cf 93       	push	r28
     d6c:	cd b7       	in	r28, 0x3d	; 61
     d6e:	de b7       	in	r29, 0x3e	; 62
	GICR|=(1<<INT2);  //enable INT2
     d70:	ab e5       	ldi	r26, 0x5B	; 91
     d72:	b0 e0       	ldi	r27, 0x00	; 0
     d74:	eb e5       	ldi	r30, 0x5B	; 91
     d76:	f0 e0       	ldi	r31, 0x00	; 0
     d78:	80 81       	ld	r24, Z
     d7a:	80 62       	ori	r24, 0x20	; 32
     d7c:	8c 93       	st	X, r24
	MCUCSR&=~(1<<ISC2); //with falling edge
     d7e:	a4 e5       	ldi	r26, 0x54	; 84
     d80:	b0 e0       	ldi	r27, 0x00	; 0
     d82:	e4 e5       	ldi	r30, 0x54	; 84
     d84:	f0 e0       	ldi	r31, 0x00	; 0
     d86:	80 81       	ld	r24, Z
     d88:	8f 7b       	andi	r24, 0xBF	; 191
     d8a:	8c 93       	st	X, r24
}
     d8c:	cf 91       	pop	r28
     d8e:	df 91       	pop	r29
     d90:	08 95       	ret

00000d92 <Hourse_Increment>:

void Hourse_Increment(void){
     d92:	df 93       	push	r29
     d94:	cf 93       	push	r28
     d96:	cd b7       	in	r28, 0x3d	; 61
     d98:	de b7       	in	r29, 0x3e	; 62
	if(hour<99) //max 99 hour
     d9a:	80 91 6c 00 	lds	r24, 0x006C
     d9e:	83 36       	cpi	r24, 0x63	; 99
     da0:	70 f4       	brcc	.+28     	; 0xdbe <Hourse_Increment+0x2c>
	{
		hour++;
     da2:	80 91 6c 00 	lds	r24, 0x006C
     da6:	8f 5f       	subi	r24, 0xFF	; 255
     da8:	80 93 6c 00 	sts	0x006C, r24
		Min_flag=0;
     dac:	10 92 70 00 	sts	0x0070, r1
		PORTD&=~(1<<0);//turn off buzzer
     db0:	a2 e3       	ldi	r26, 0x32	; 50
     db2:	b0 e0       	ldi	r27, 0x00	; 0
     db4:	e2 e3       	ldi	r30, 0x32	; 50
     db6:	f0 e0       	ldi	r31, 0x00	; 0
     db8:	80 81       	ld	r24, Z
     dba:	8e 7f       	andi	r24, 0xFE	; 254
     dbc:	8c 93       	st	X, r24
	}
}
     dbe:	cf 91       	pop	r28
     dc0:	df 91       	pop	r29
     dc2:	08 95       	ret

00000dc4 <Hourse_Decrement>:

void Hourse_Decrement(void){
     dc4:	df 93       	push	r29
     dc6:	cf 93       	push	r28
     dc8:	cd b7       	in	r28, 0x3d	; 61
     dca:	de b7       	in	r29, 0x3e	; 62
	if(hour>0) //no time in negative
     dcc:	80 91 6c 00 	lds	r24, 0x006C
     dd0:	88 23       	and	r24, r24
     dd2:	39 f0       	breq	.+14     	; 0xde2 <Hourse_Decrement+0x1e>
	{
		hour--;
     dd4:	80 91 6c 00 	lds	r24, 0x006C
     dd8:	81 50       	subi	r24, 0x01	; 1
     dda:	80 93 6c 00 	sts	0x006C, r24
		Max_flag=0;
     dde:	10 92 6f 00 	sts	0x006F, r1
	}
}
     de2:	cf 91       	pop	r28
     de4:	df 91       	pop	r29
     de6:	08 95       	ret

00000de8 <Minutes_Increment>:

void Minutes_Increment(void){
     de8:	df 93       	push	r29
     dea:	cf 93       	push	r28
     dec:	cd b7       	in	r28, 0x3d	; 61
     dee:	de b7       	in	r29, 0x3e	; 62
	if(min<59) //max 59 min
     df0:	80 91 6b 00 	lds	r24, 0x006B
     df4:	8b 33       	cpi	r24, 0x3B	; 59
     df6:	70 f4       	brcc	.+28     	; 0xe14 <Minutes_Increment+0x2c>
	{
		min++;
     df8:	80 91 6b 00 	lds	r24, 0x006B
     dfc:	8f 5f       	subi	r24, 0xFF	; 255
     dfe:	80 93 6b 00 	sts	0x006B, r24
		Min_flag=0;
     e02:	10 92 70 00 	sts	0x0070, r1
		PORTD&=~(1<<0);//turn off buzzer
     e06:	a2 e3       	ldi	r26, 0x32	; 50
     e08:	b0 e0       	ldi	r27, 0x00	; 0
     e0a:	e2 e3       	ldi	r30, 0x32	; 50
     e0c:	f0 e0       	ldi	r31, 0x00	; 0
     e0e:	80 81       	ld	r24, Z
     e10:	8e 7f       	andi	r24, 0xFE	; 254
     e12:	8c 93       	st	X, r24
	}
}
     e14:	cf 91       	pop	r28
     e16:	df 91       	pop	r29
     e18:	08 95       	ret

00000e1a <Minutes_Decrementt>:

void Minutes_Decrementt(void){
     e1a:	df 93       	push	r29
     e1c:	cf 93       	push	r28
     e1e:	cd b7       	in	r28, 0x3d	; 61
     e20:	de b7       	in	r29, 0x3e	; 62
	if(min>0) //no time in negative
     e22:	80 91 6b 00 	lds	r24, 0x006B
     e26:	88 23       	and	r24, r24
     e28:	39 f0       	breq	.+14     	; 0xe38 <Minutes_Decrementt+0x1e>
	{
		min--;
     e2a:	80 91 6b 00 	lds	r24, 0x006B
     e2e:	81 50       	subi	r24, 0x01	; 1
     e30:	80 93 6b 00 	sts	0x006B, r24
		Max_flag=0;
     e34:	10 92 6f 00 	sts	0x006F, r1
	}
}
     e38:	cf 91       	pop	r28
     e3a:	df 91       	pop	r29
     e3c:	08 95       	ret

00000e3e <Seconds_Increment>:

void Seconds_Increment(void){
     e3e:	df 93       	push	r29
     e40:	cf 93       	push	r28
     e42:	cd b7       	in	r28, 0x3d	; 61
     e44:	de b7       	in	r29, 0x3e	; 62
	if(sec<59) //max 59 sec
     e46:	80 91 6a 00 	lds	r24, 0x006A
     e4a:	8b 33       	cpi	r24, 0x3B	; 59
     e4c:	70 f4       	brcc	.+28     	; 0xe6a <Seconds_Increment+0x2c>
	{
		sec++;
     e4e:	80 91 6a 00 	lds	r24, 0x006A
     e52:	8f 5f       	subi	r24, 0xFF	; 255
     e54:	80 93 6a 00 	sts	0x006A, r24
		Min_flag=0;
     e58:	10 92 70 00 	sts	0x0070, r1
		PORTD&=~(1<<0);//turn off buzzer
     e5c:	a2 e3       	ldi	r26, 0x32	; 50
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	e2 e3       	ldi	r30, 0x32	; 50
     e62:	f0 e0       	ldi	r31, 0x00	; 0
     e64:	80 81       	ld	r24, Z
     e66:	8e 7f       	andi	r24, 0xFE	; 254
     e68:	8c 93       	st	X, r24
	}
}
     e6a:	cf 91       	pop	r28
     e6c:	df 91       	pop	r29
     e6e:	08 95       	ret

00000e70 <Seconds_Decrement>:

void Seconds_Decrement(void){
     e70:	df 93       	push	r29
     e72:	cf 93       	push	r28
     e74:	cd b7       	in	r28, 0x3d	; 61
     e76:	de b7       	in	r29, 0x3e	; 62
	if(sec>0) //no time in negative
     e78:	80 91 6a 00 	lds	r24, 0x006A
     e7c:	88 23       	and	r24, r24
     e7e:	39 f0       	breq	.+14     	; 0xe8e <Seconds_Decrement+0x1e>
	{
		sec--;
     e80:	80 91 6a 00 	lds	r24, 0x006A
     e84:	81 50       	subi	r24, 0x01	; 1
     e86:	80 93 6a 00 	sts	0x006A, r24
		Max_flag=0;
     e8a:	10 92 6f 00 	sts	0x006F, r1
	}
}
     e8e:	cf 91       	pop	r28
     e90:	df 91       	pop	r29
     e92:	08 95       	ret

00000e94 <Count_Toggle>:

void Count_Toggle(void){
     e94:	df 93       	push	r29
     e96:	cf 93       	push	r28
     e98:	0f 92       	push	r0
     e9a:	cd b7       	in	r28, 0x3d	; 61
     e9c:	de b7       	in	r29, 0x3e	; 62
	count=!count;
     e9e:	80 91 68 00 	lds	r24, 0x0068
     ea2:	19 82       	std	Y+1, r1	; 0x01
     ea4:	88 23       	and	r24, r24
     ea6:	11 f4       	brne	.+4      	; 0xeac <Count_Toggle+0x18>
     ea8:	81 e0       	ldi	r24, 0x01	; 1
     eaa:	89 83       	std	Y+1, r24	; 0x01
     eac:	89 81       	ldd	r24, Y+1	; 0x01
     eae:	80 93 68 00 	sts	0x0068, r24
	PORTD ^=(1<<4); //toggle count led
     eb2:	a2 e3       	ldi	r26, 0x32	; 50
     eb4:	b0 e0       	ldi	r27, 0x00	; 0
     eb6:	e2 e3       	ldi	r30, 0x32	; 50
     eb8:	f0 e0       	ldi	r31, 0x00	; 0
     eba:	90 81       	ld	r25, Z
     ebc:	80 e1       	ldi	r24, 0x10	; 16
     ebe:	89 27       	eor	r24, r25
     ec0:	8c 93       	st	X, r24
	PORTD ^=(1<<5);
     ec2:	a2 e3       	ldi	r26, 0x32	; 50
     ec4:	b0 e0       	ldi	r27, 0x00	; 0
     ec6:	e2 e3       	ldi	r30, 0x32	; 50
     ec8:	f0 e0       	ldi	r31, 0x00	; 0
     eca:	90 81       	ld	r25, Z
     ecc:	80 e2       	ldi	r24, 0x20	; 32
     ece:	89 27       	eor	r24, r25
     ed0:	8c 93       	st	X, r24
	Max_flag=0;//reset max and min flag
     ed2:	10 92 6f 00 	sts	0x006F, r1
	Min_flag=0;
     ed6:	10 92 70 00 	sts	0x0070, r1
	PORTD&=~(1<<0);//turn off buzzer
     eda:	a2 e3       	ldi	r26, 0x32	; 50
     edc:	b0 e0       	ldi	r27, 0x00	; 0
     ede:	e2 e3       	ldi	r30, 0x32	; 50
     ee0:	f0 e0       	ldi	r31, 0x00	; 0
     ee2:	80 81       	ld	r24, Z
     ee4:	8e 7f       	andi	r24, 0xFE	; 254
     ee6:	8c 93       	st	X, r24
}
     ee8:	0f 90       	pop	r0
     eea:	cf 91       	pop	r28
     eec:	df 91       	pop	r29
     eee:	08 95       	ret

00000ef0 <__vector_7>:

ISR(TIMER1_COMPA_vect)
{
     ef0:	1f 92       	push	r1
     ef2:	0f 92       	push	r0
     ef4:	0f b6       	in	r0, 0x3f	; 63
     ef6:	0f 92       	push	r0
     ef8:	11 24       	eor	r1, r1
     efa:	8f 93       	push	r24
     efc:	af 93       	push	r26
     efe:	bf 93       	push	r27
     f00:	ef 93       	push	r30
     f02:	ff 93       	push	r31
     f04:	df 93       	push	r29
     f06:	cf 93       	push	r28
     f08:	cd b7       	in	r28, 0x3d	; 61
     f0a:	de b7       	in	r29, 0x3e	; 62
	if(count && !(Max_flag))//count up mode
     f0c:	80 91 68 00 	lds	r24, 0x0068
     f10:	88 23       	and	r24, r24
     f12:	89 f1       	breq	.+98     	; 0xf76 <__vector_7+0x86>
     f14:	80 91 6f 00 	lds	r24, 0x006F
     f18:	88 23       	and	r24, r24
     f1a:	69 f5       	brne	.+90     	; 0xf76 <__vector_7+0x86>
	{
		sec++;
     f1c:	80 91 6a 00 	lds	r24, 0x006A
     f20:	8f 5f       	subi	r24, 0xFF	; 255
     f22:	80 93 6a 00 	sts	0x006A, r24
		if(sec == 60){
     f26:	80 91 6a 00 	lds	r24, 0x006A
     f2a:	8c 33       	cpi	r24, 0x3C	; 60
     f2c:	39 f4       	brne	.+14     	; 0xf3c <__vector_7+0x4c>
			sec = 0;
     f2e:	10 92 6a 00 	sts	0x006A, r1
			min++;
     f32:	80 91 6b 00 	lds	r24, 0x006B
     f36:	8f 5f       	subi	r24, 0xFF	; 255
     f38:	80 93 6b 00 	sts	0x006B, r24
		}
		if(min == 60){
     f3c:	80 91 6b 00 	lds	r24, 0x006B
     f40:	8c 33       	cpi	r24, 0x3C	; 60
     f42:	39 f4       	brne	.+14     	; 0xf52 <__vector_7+0x62>
			min = 0;
     f44:	10 92 6b 00 	sts	0x006B, r1
			hour++;
     f48:	80 91 6c 00 	lds	r24, 0x006C
     f4c:	8f 5f       	subi	r24, 0xFF	; 255
     f4e:	80 93 6c 00 	sts	0x006C, r24
		}
		if(hour == 100){
     f52:	80 91 6c 00 	lds	r24, 0x006C
     f56:	84 36       	cpi	r24, 0x64	; 100
     f58:	09 f0       	breq	.+2      	; 0xf5c <__vector_7+0x6c>
     f5a:	46 c0       	rjmp	.+140    	; 0xfe8 <__vector_7+0xf8>
			hour=99;
     f5c:	83 e6       	ldi	r24, 0x63	; 99
     f5e:	80 93 6c 00 	sts	0x006C, r24
			min=59;
     f62:	8b e3       	ldi	r24, 0x3B	; 59
     f64:	80 93 6b 00 	sts	0x006B, r24
			sec=59;
     f68:	8b e3       	ldi	r24, 0x3B	; 59
     f6a:	80 93 6a 00 	sts	0x006A, r24
			Max_flag=1;
     f6e:	81 e0       	ldi	r24, 0x01	; 1
     f70:	80 93 6f 00 	sts	0x006F, r24
     f74:	39 c0       	rjmp	.+114    	; 0xfe8 <__vector_7+0xf8>
		}
	}
	else{
		if (Min_flag) {
     f76:	80 91 70 00 	lds	r24, 0x0070
     f7a:	88 23       	and	r24, r24
     f7c:	41 f0       	breq	.+16     	; 0xf8e <__vector_7+0x9e>
			PORTD |= (1 << 0);
     f7e:	a2 e3       	ldi	r26, 0x32	; 50
     f80:	b0 e0       	ldi	r27, 0x00	; 0
     f82:	e2 e3       	ldi	r30, 0x32	; 50
     f84:	f0 e0       	ldi	r31, 0x00	; 0
     f86:	80 81       	ld	r24, Z
     f88:	81 60       	ori	r24, 0x01	; 1
     f8a:	8c 93       	st	X, r24
     f8c:	2d c0       	rjmp	.+90     	; 0xfe8 <__vector_7+0xf8>
		} else {
			if (sec > 0) {
     f8e:	80 91 6a 00 	lds	r24, 0x006A
     f92:	88 23       	and	r24, r24
     f94:	31 f0       	breq	.+12     	; 0xfa2 <__vector_7+0xb2>
				sec--;
     f96:	80 91 6a 00 	lds	r24, 0x006A
     f9a:	81 50       	subi	r24, 0x01	; 1
     f9c:	80 93 6a 00 	sts	0x006A, r24
     fa0:	23 c0       	rjmp	.+70     	; 0xfe8 <__vector_7+0xf8>
			} else {
				sec = 59;
     fa2:	8b e3       	ldi	r24, 0x3B	; 59
     fa4:	80 93 6a 00 	sts	0x006A, r24
				if (min > 0) {
     fa8:	80 91 6b 00 	lds	r24, 0x006B
     fac:	88 23       	and	r24, r24
     fae:	31 f0       	breq	.+12     	; 0xfbc <__vector_7+0xcc>
					min--;
     fb0:	80 91 6b 00 	lds	r24, 0x006B
     fb4:	81 50       	subi	r24, 0x01	; 1
     fb6:	80 93 6b 00 	sts	0x006B, r24
     fba:	16 c0       	rjmp	.+44     	; 0xfe8 <__vector_7+0xf8>
				} else {
					min = 59;
     fbc:	8b e3       	ldi	r24, 0x3B	; 59
     fbe:	80 93 6b 00 	sts	0x006B, r24
					if (hour > 0) {
     fc2:	80 91 6c 00 	lds	r24, 0x006C
     fc6:	88 23       	and	r24, r24
     fc8:	31 f0       	breq	.+12     	; 0xfd6 <__vector_7+0xe6>
						hour--;
     fca:	80 91 6c 00 	lds	r24, 0x006C
     fce:	81 50       	subi	r24, 0x01	; 1
     fd0:	80 93 6c 00 	sts	0x006C, r24
     fd4:	09 c0       	rjmp	.+18     	; 0xfe8 <__vector_7+0xf8>
					} else {
						hour = 0;
     fd6:	10 92 6c 00 	sts	0x006C, r1
						min = 0;
     fda:	10 92 6b 00 	sts	0x006B, r1
						sec = 0;
     fde:	10 92 6a 00 	sts	0x006A, r1
						Min_flag = 1;
     fe2:	81 e0       	ldi	r24, 0x01	; 1
     fe4:	80 93 70 00 	sts	0x0070, r24
					}
				}
			}
		}
	}
}
     fe8:	cf 91       	pop	r28
     fea:	df 91       	pop	r29
     fec:	ff 91       	pop	r31
     fee:	ef 91       	pop	r30
     ff0:	bf 91       	pop	r27
     ff2:	af 91       	pop	r26
     ff4:	8f 91       	pop	r24
     ff6:	0f 90       	pop	r0
     ff8:	0f be       	out	0x3f, r0	; 63
     ffa:	0f 90       	pop	r0
     ffc:	1f 90       	pop	r1
     ffe:	18 95       	reti

00001000 <__vector_1>:


ISR(INT0_vect){
    1000:	1f 92       	push	r1
    1002:	0f 92       	push	r0
    1004:	0f b6       	in	r0, 0x3f	; 63
    1006:	0f 92       	push	r0
    1008:	11 24       	eor	r1, r1
    100a:	8f 93       	push	r24
    100c:	af 93       	push	r26
    100e:	bf 93       	push	r27
    1010:	ef 93       	push	r30
    1012:	ff 93       	push	r31
    1014:	df 93       	push	r29
    1016:	cf 93       	push	r28
    1018:	cd b7       	in	r28, 0x3d	; 61
    101a:	de b7       	in	r29, 0x3e	; 62
	sec = 0;  //reset time to zero
    101c:	10 92 6a 00 	sts	0x006A, r1
	min = 0;
    1020:	10 92 6b 00 	sts	0x006B, r1
	hour = 0;
    1024:	10 92 6c 00 	sts	0x006C, r1
	TCNT1=0; //counter to zero
    1028:	ec e4       	ldi	r30, 0x4C	; 76
    102a:	f0 e0       	ldi	r31, 0x00	; 0
    102c:	11 82       	std	Z+1, r1	; 0x01
    102e:	10 82       	st	Z, r1
	Max_flag=0;//reset max and min flag
    1030:	10 92 6f 00 	sts	0x006F, r1
	Min_flag=0;
    1034:	10 92 70 00 	sts	0x0070, r1
	PORTD&=~(1<<0);//turn off buzzer
    1038:	a2 e3       	ldi	r26, 0x32	; 50
    103a:	b0 e0       	ldi	r27, 0x00	; 0
    103c:	e2 e3       	ldi	r30, 0x32	; 50
    103e:	f0 e0       	ldi	r31, 0x00	; 0
    1040:	80 81       	ld	r24, Z
    1042:	8e 7f       	andi	r24, 0xFE	; 254
    1044:	8c 93       	st	X, r24
}
    1046:	cf 91       	pop	r28
    1048:	df 91       	pop	r29
    104a:	ff 91       	pop	r31
    104c:	ef 91       	pop	r30
    104e:	bf 91       	pop	r27
    1050:	af 91       	pop	r26
    1052:	8f 91       	pop	r24
    1054:	0f 90       	pop	r0
    1056:	0f be       	out	0x3f, r0	; 63
    1058:	0f 90       	pop	r0
    105a:	1f 90       	pop	r1
    105c:	18 95       	reti

0000105e <__vector_2>:

ISR(INT1_vect){
    105e:	1f 92       	push	r1
    1060:	0f 92       	push	r0
    1062:	0f b6       	in	r0, 0x3f	; 63
    1064:	0f 92       	push	r0
    1066:	11 24       	eor	r1, r1
    1068:	8f 93       	push	r24
    106a:	9f 93       	push	r25
    106c:	af 93       	push	r26
    106e:	bf 93       	push	r27
    1070:	ef 93       	push	r30
    1072:	ff 93       	push	r31
    1074:	df 93       	push	r29
    1076:	cf 93       	push	r28
    1078:	cd b7       	in	r28, 0x3d	; 61
    107a:	de b7       	in	r29, 0x3e	; 62
	TCNT=TCNT1; //store count value
    107c:	ec e4       	ldi	r30, 0x4C	; 76
    107e:	f0 e0       	ldi	r31, 0x00	; 0
    1080:	80 81       	ld	r24, Z
    1082:	91 81       	ldd	r25, Z+1	; 0x01
    1084:	80 93 6d 00 	sts	0x006D, r24
	TIMSK&=~(1<<OCIE1A); //stop timer interrupt
    1088:	a9 e5       	ldi	r26, 0x59	; 89
    108a:	b0 e0       	ldi	r27, 0x00	; 0
    108c:	e9 e5       	ldi	r30, 0x59	; 89
    108e:	f0 e0       	ldi	r31, 0x00	; 0
    1090:	80 81       	ld	r24, Z
    1092:	8f 7e       	andi	r24, 0xEF	; 239
    1094:	8c 93       	st	X, r24
	pause_flag=1;
    1096:	81 e0       	ldi	r24, 0x01	; 1
    1098:	80 93 6e 00 	sts	0x006E, r24

}
    109c:	cf 91       	pop	r28
    109e:	df 91       	pop	r29
    10a0:	ff 91       	pop	r31
    10a2:	ef 91       	pop	r30
    10a4:	bf 91       	pop	r27
    10a6:	af 91       	pop	r26
    10a8:	9f 91       	pop	r25
    10aa:	8f 91       	pop	r24
    10ac:	0f 90       	pop	r0
    10ae:	0f be       	out	0x3f, r0	; 63
    10b0:	0f 90       	pop	r0
    10b2:	1f 90       	pop	r1
    10b4:	18 95       	reti

000010b6 <__vector_3>:

ISR(INT2_vect){
    10b6:	1f 92       	push	r1
    10b8:	0f 92       	push	r0
    10ba:	0f b6       	in	r0, 0x3f	; 63
    10bc:	0f 92       	push	r0
    10be:	11 24       	eor	r1, r1
    10c0:	8f 93       	push	r24
    10c2:	9f 93       	push	r25
    10c4:	af 93       	push	r26
    10c6:	bf 93       	push	r27
    10c8:	ef 93       	push	r30
    10ca:	ff 93       	push	r31
    10cc:	df 93       	push	r29
    10ce:	cf 93       	push	r28
    10d0:	cd b7       	in	r28, 0x3d	; 61
    10d2:	de b7       	in	r29, 0x3e	; 62
	if(pause_flag)
    10d4:	80 91 6e 00 	lds	r24, 0x006E
    10d8:	88 23       	and	r24, r24
    10da:	79 f0       	breq	.+30     	; 0x10fa <__vector_3+0x44>
	{
		TCNT1=TCNT;  //return counter to stop place
    10dc:	ec e4       	ldi	r30, 0x4C	; 76
    10de:	f0 e0       	ldi	r31, 0x00	; 0
    10e0:	80 91 6d 00 	lds	r24, 0x006D
    10e4:	88 2f       	mov	r24, r24
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	91 83       	std	Z+1, r25	; 0x01
    10ea:	80 83       	st	Z, r24
		TIMSK|=(1<<OCIE1A); //enable timer interrupt
    10ec:	a9 e5       	ldi	r26, 0x59	; 89
    10ee:	b0 e0       	ldi	r27, 0x00	; 0
    10f0:	e9 e5       	ldi	r30, 0x59	; 89
    10f2:	f0 e0       	ldi	r31, 0x00	; 0
    10f4:	80 81       	ld	r24, Z
    10f6:	80 61       	ori	r24, 0x10	; 16
    10f8:	8c 93       	st	X, r24
	}
}
    10fa:	cf 91       	pop	r28
    10fc:	df 91       	pop	r29
    10fe:	ff 91       	pop	r31
    1100:	ef 91       	pop	r30
    1102:	bf 91       	pop	r27
    1104:	af 91       	pop	r26
    1106:	9f 91       	pop	r25
    1108:	8f 91       	pop	r24
    110a:	0f 90       	pop	r0
    110c:	0f be       	out	0x3f, r0	; 63
    110e:	0f 90       	pop	r0
    1110:	1f 90       	pop	r1
    1112:	18 95       	reti

00001114 <main>:


int main()
{
    1114:	0f 93       	push	r16
    1116:	1f 93       	push	r17
    1118:	df 93       	push	r29
    111a:	cf 93       	push	r28
    111c:	cd b7       	in	r28, 0x3d	; 61
    111e:	de b7       	in	r29, 0x3e	; 62
    1120:	c4 5f       	subi	r28, 0xF4	; 244
    1122:	d0 40       	sbci	r29, 0x00	; 0
    1124:	0f b6       	in	r0, 0x3f	; 63
    1126:	f8 94       	cli
    1128:	de bf       	out	0x3e, r29	; 62
    112a:	0f be       	out	0x3f, r0	; 63
    112c:	cd bf       	out	0x3d, r28	; 61
	SREG|=(1<<7);
    112e:	af e5       	ldi	r26, 0x5F	; 95
    1130:	b0 e0       	ldi	r27, 0x00	; 0
    1132:	ef e5       	ldi	r30, 0x5F	; 95
    1134:	f0 e0       	ldi	r31, 0x00	; 0
    1136:	80 81       	ld	r24, Z
    1138:	80 68       	ori	r24, 0x80	; 128
    113a:	8c 93       	st	X, r24
	TIMER1_CRC_init();
    113c:	0e 94 4f 06 	call	0xc9e	; 0xc9e <TIMER1_CRC_init>
	INT0_init();
    1140:	0e 94 75 06 	call	0xcea	; 0xcea <INT0_init>
	INT1_init();
    1144:	0e 94 98 06 	call	0xd30	; 0xd30 <INT1_init>
	INT2_init();
    1148:	0e 94 b4 06 	call	0xd68	; 0xd68 <INT2_init>
	DDRC|= 0x0F;   //PORTC fist 4 bins Output (time)
    114c:	a4 e3       	ldi	r26, 0x34	; 52
    114e:	b0 e0       	ldi	r27, 0x00	; 0
    1150:	e4 e3       	ldi	r30, 0x34	; 52
    1152:	f0 e0       	ldi	r31, 0x00	; 0
    1154:	80 81       	ld	r24, Z
    1156:	8f 60       	ori	r24, 0x0F	; 15
    1158:	8c 93       	st	X, r24
	PORTC&=~(0XF); //time initial equal 0
    115a:	a5 e3       	ldi	r26, 0x35	; 53
    115c:	b0 e0       	ldi	r27, 0x00	; 0
    115e:	e5 e3       	ldi	r30, 0x35	; 53
    1160:	f0 e0       	ldi	r31, 0x00	; 0
    1162:	80 81       	ld	r24, Z
    1164:	80 7f       	andi	r24, 0xF0	; 240
    1166:	8c 93       	st	X, r24
	DDRA|= 0x3F;   //PORTA first 6 bins output(7 segment selector)
    1168:	aa e3       	ldi	r26, 0x3A	; 58
    116a:	b0 e0       	ldi	r27, 0x00	; 0
    116c:	ea e3       	ldi	r30, 0x3A	; 58
    116e:	f0 e0       	ldi	r31, 0x00	; 0
    1170:	80 81       	ld	r24, Z
    1172:	8f 63       	ori	r24, 0x3F	; 63
    1174:	8c 93       	st	X, r24
	DDRB &=0X00;  //all PB bin input
    1176:	e7 e3       	ldi	r30, 0x37	; 55
    1178:	f0 e0       	ldi	r31, 0x00	; 0
    117a:	80 81       	ld	r24, Z
    117c:	e7 e3       	ldi	r30, 0x37	; 55
    117e:	f0 e0       	ldi	r31, 0x00	; 0
    1180:	10 82       	st	Z, r1
	PORTB |=0XFF; //enable all PB internal pull up
    1182:	e8 e3       	ldi	r30, 0x38	; 56
    1184:	f0 e0       	ldi	r31, 0x00	; 0
    1186:	80 81       	ld	r24, Z
    1188:	e8 e3       	ldi	r30, 0x38	; 56
    118a:	f0 e0       	ldi	r31, 0x00	; 0
    118c:	8f ef       	ldi	r24, 0xFF	; 255
    118e:	80 83       	st	Z, r24
	PORTD |=(1<<4);//default count up (red led on)
    1190:	a2 e3       	ldi	r26, 0x32	; 50
    1192:	b0 e0       	ldi	r27, 0x00	; 0
    1194:	e2 e3       	ldi	r30, 0x32	; 50
    1196:	f0 e0       	ldi	r31, 0x00	; 0
    1198:	80 81       	ld	r24, Z
    119a:	80 61       	ori	r24, 0x10	; 16
    119c:	8c 93       	st	X, r24
	PORTD &=~(1<<5);//count down LED off (yellow LED off)
    119e:	a2 e3       	ldi	r26, 0x32	; 50
    11a0:	b0 e0       	ldi	r27, 0x00	; 0
    11a2:	e2 e3       	ldi	r30, 0x32	; 50
    11a4:	f0 e0       	ldi	r31, 0x00	; 0
    11a6:	80 81       	ld	r24, Z
    11a8:	8f 7d       	andi	r24, 0xDF	; 223
    11aa:	8c 93       	st	X, r24
	DDRD |=(1<<0) |(1<<4) | (1<<5); //count up and count down led and buzzaer bins are output
    11ac:	a1 e3       	ldi	r26, 0x31	; 49
    11ae:	b0 e0       	ldi	r27, 0x00	; 0
    11b0:	e1 e3       	ldi	r30, 0x31	; 49
    11b2:	f0 e0       	ldi	r31, 0x00	; 0
    11b4:	80 81       	ld	r24, Z
    11b6:	81 63       	ori	r24, 0x31	; 49
    11b8:	8c 93       	st	X, r24
	while(1)
	{
		PORTA =(PORTA &(0XC0)) | (1<<5);    // enable first 7 segment
    11ba:	ab e3       	ldi	r26, 0x3B	; 59
    11bc:	b0 e0       	ldi	r27, 0x00	; 0
    11be:	eb e3       	ldi	r30, 0x3B	; 59
    11c0:	f0 e0       	ldi	r31, 0x00	; 0
    11c2:	80 81       	ld	r24, Z
    11c4:	80 7c       	andi	r24, 0xC0	; 192
    11c6:	80 62       	ori	r24, 0x20	; 32
    11c8:	8c 93       	st	X, r24
		PORTC = (PORTC &(0XF0)) | sec%10;	 // Display 1st digit of seconds
    11ca:	a5 e3       	ldi	r26, 0x35	; 53
    11cc:	b0 e0       	ldi	r27, 0x00	; 0
    11ce:	e5 e3       	ldi	r30, 0x35	; 53
    11d0:	f0 e0       	ldi	r31, 0x00	; 0
    11d2:	80 81       	ld	r24, Z
    11d4:	28 2f       	mov	r18, r24
    11d6:	20 7f       	andi	r18, 0xF0	; 240
    11d8:	80 91 6a 00 	lds	r24, 0x006A
    11dc:	9a e0       	ldi	r25, 0x0A	; 10
    11de:	69 2f       	mov	r22, r25
    11e0:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__udivmodqi4>
    11e4:	89 2f       	mov	r24, r25
    11e6:	82 2b       	or	r24, r18
    11e8:	8c 93       	st	X, r24
    11ea:	fe 01       	movw	r30, r28
    11ec:	e1 51       	subi	r30, 0x11	; 17
    11ee:	ff 4f       	sbci	r31, 0xFF	; 255
    11f0:	80 e0       	ldi	r24, 0x00	; 0
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	a0 ea       	ldi	r26, 0xA0	; 160
    11f6:	b1 e4       	ldi	r27, 0x41	; 65
    11f8:	80 83       	st	Z, r24
    11fa:	91 83       	std	Z+1, r25	; 0x01
    11fc:	a2 83       	std	Z+2, r26	; 0x02
    11fe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1200:	8e 01       	movw	r16, r28
    1202:	05 51       	subi	r16, 0x15	; 21
    1204:	1f 4f       	sbci	r17, 0xFF	; 255
    1206:	fe 01       	movw	r30, r28
    1208:	e1 51       	subi	r30, 0x11	; 17
    120a:	ff 4f       	sbci	r31, 0xFF	; 255
    120c:	60 81       	ld	r22, Z
    120e:	71 81       	ldd	r23, Z+1	; 0x01
    1210:	82 81       	ldd	r24, Z+2	; 0x02
    1212:	93 81       	ldd	r25, Z+3	; 0x03
    1214:	2b ea       	ldi	r18, 0xAB	; 171
    1216:	3a ea       	ldi	r19, 0xAA	; 170
    1218:	4a ea       	ldi	r20, 0xAA	; 170
    121a:	50 e4       	ldi	r21, 0x40	; 64
    121c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1220:	dc 01       	movw	r26, r24
    1222:	cb 01       	movw	r24, r22
    1224:	f8 01       	movw	r30, r16
    1226:	80 83       	st	Z, r24
    1228:	91 83       	std	Z+1, r25	; 0x01
    122a:	a2 83       	std	Z+2, r26	; 0x02
    122c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    122e:	fe 01       	movw	r30, r28
    1230:	e5 51       	subi	r30, 0x15	; 21
    1232:	ff 4f       	sbci	r31, 0xFF	; 255
    1234:	60 81       	ld	r22, Z
    1236:	71 81       	ldd	r23, Z+1	; 0x01
    1238:	82 81       	ldd	r24, Z+2	; 0x02
    123a:	93 81       	ldd	r25, Z+3	; 0x03
    123c:	20 e0       	ldi	r18, 0x00	; 0
    123e:	30 e0       	ldi	r19, 0x00	; 0
    1240:	40 e8       	ldi	r20, 0x80	; 128
    1242:	5f e3       	ldi	r21, 0x3F	; 63
    1244:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1248:	88 23       	and	r24, r24
    124a:	34 f4       	brge	.+12     	; 0x1258 <main+0x144>
		__ticks = 1;
    124c:	fe 01       	movw	r30, r28
    124e:	e6 51       	subi	r30, 0x16	; 22
    1250:	ff 4f       	sbci	r31, 0xFF	; 255
    1252:	81 e0       	ldi	r24, 0x01	; 1
    1254:	80 83       	st	Z, r24
    1256:	e0 c0       	rjmp	.+448    	; 0x1418 <main+0x304>
	else if (__tmp > 255)
    1258:	fe 01       	movw	r30, r28
    125a:	e5 51       	subi	r30, 0x15	; 21
    125c:	ff 4f       	sbci	r31, 0xFF	; 255
    125e:	60 81       	ld	r22, Z
    1260:	71 81       	ldd	r23, Z+1	; 0x01
    1262:	82 81       	ldd	r24, Z+2	; 0x02
    1264:	93 81       	ldd	r25, Z+3	; 0x03
    1266:	20 e0       	ldi	r18, 0x00	; 0
    1268:	30 e0       	ldi	r19, 0x00	; 0
    126a:	4f e7       	ldi	r20, 0x7F	; 127
    126c:	53 e4       	ldi	r21, 0x43	; 67
    126e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1272:	18 16       	cp	r1, r24
    1274:	0c f0       	brlt	.+2      	; 0x1278 <main+0x164>
    1276:	c0 c0       	rjmp	.+384    	; 0x13f8 <main+0x2e4>
	{
		_delay_ms(__us / 1000.0);
    1278:	fe 01       	movw	r30, r28
    127a:	e1 51       	subi	r30, 0x11	; 17
    127c:	ff 4f       	sbci	r31, 0xFF	; 255
    127e:	60 81       	ld	r22, Z
    1280:	71 81       	ldd	r23, Z+1	; 0x01
    1282:	82 81       	ldd	r24, Z+2	; 0x02
    1284:	93 81       	ldd	r25, Z+3	; 0x03
    1286:	20 e0       	ldi	r18, 0x00	; 0
    1288:	30 e0       	ldi	r19, 0x00	; 0
    128a:	4a e7       	ldi	r20, 0x7A	; 122
    128c:	54 e4       	ldi	r21, 0x44	; 68
    128e:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1292:	dc 01       	movw	r26, r24
    1294:	cb 01       	movw	r24, r22
    1296:	fe 01       	movw	r30, r28
    1298:	ea 51       	subi	r30, 0x1A	; 26
    129a:	ff 4f       	sbci	r31, 0xFF	; 255
    129c:	80 83       	st	Z, r24
    129e:	91 83       	std	Z+1, r25	; 0x01
    12a0:	a2 83       	std	Z+2, r26	; 0x02
    12a2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12a4:	8e 01       	movw	r16, r28
    12a6:	0e 51       	subi	r16, 0x1E	; 30
    12a8:	1f 4f       	sbci	r17, 0xFF	; 255
    12aa:	fe 01       	movw	r30, r28
    12ac:	ea 51       	subi	r30, 0x1A	; 26
    12ae:	ff 4f       	sbci	r31, 0xFF	; 255
    12b0:	60 81       	ld	r22, Z
    12b2:	71 81       	ldd	r23, Z+1	; 0x01
    12b4:	82 81       	ldd	r24, Z+2	; 0x02
    12b6:	93 81       	ldd	r25, Z+3	; 0x03
    12b8:	20 e0       	ldi	r18, 0x00	; 0
    12ba:	30 e0       	ldi	r19, 0x00	; 0
    12bc:	4a e7       	ldi	r20, 0x7A	; 122
    12be:	55 e4       	ldi	r21, 0x45	; 69
    12c0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    12c4:	dc 01       	movw	r26, r24
    12c6:	cb 01       	movw	r24, r22
    12c8:	f8 01       	movw	r30, r16
    12ca:	80 83       	st	Z, r24
    12cc:	91 83       	std	Z+1, r25	; 0x01
    12ce:	a2 83       	std	Z+2, r26	; 0x02
    12d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12d2:	fe 01       	movw	r30, r28
    12d4:	ee 51       	subi	r30, 0x1E	; 30
    12d6:	ff 4f       	sbci	r31, 0xFF	; 255
    12d8:	60 81       	ld	r22, Z
    12da:	71 81       	ldd	r23, Z+1	; 0x01
    12dc:	82 81       	ldd	r24, Z+2	; 0x02
    12de:	93 81       	ldd	r25, Z+3	; 0x03
    12e0:	20 e0       	ldi	r18, 0x00	; 0
    12e2:	30 e0       	ldi	r19, 0x00	; 0
    12e4:	40 e8       	ldi	r20, 0x80	; 128
    12e6:	5f e3       	ldi	r21, 0x3F	; 63
    12e8:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    12ec:	88 23       	and	r24, r24
    12ee:	44 f4       	brge	.+16     	; 0x1300 <main+0x1ec>
		__ticks = 1;
    12f0:	fe 01       	movw	r30, r28
    12f2:	e0 52       	subi	r30, 0x20	; 32
    12f4:	ff 4f       	sbci	r31, 0xFF	; 255
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	91 83       	std	Z+1, r25	; 0x01
    12fc:	80 83       	st	Z, r24
    12fe:	64 c0       	rjmp	.+200    	; 0x13c8 <main+0x2b4>
	else if (__tmp > 65535)
    1300:	fe 01       	movw	r30, r28
    1302:	ee 51       	subi	r30, 0x1E	; 30
    1304:	ff 4f       	sbci	r31, 0xFF	; 255
    1306:	60 81       	ld	r22, Z
    1308:	71 81       	ldd	r23, Z+1	; 0x01
    130a:	82 81       	ldd	r24, Z+2	; 0x02
    130c:	93 81       	ldd	r25, Z+3	; 0x03
    130e:	20 e0       	ldi	r18, 0x00	; 0
    1310:	3f ef       	ldi	r19, 0xFF	; 255
    1312:	4f e7       	ldi	r20, 0x7F	; 127
    1314:	57 e4       	ldi	r21, 0x47	; 71
    1316:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    131a:	18 16       	cp	r1, r24
    131c:	0c f0       	brlt	.+2      	; 0x1320 <main+0x20c>
    131e:	43 c0       	rjmp	.+134    	; 0x13a6 <main+0x292>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1320:	fe 01       	movw	r30, r28
    1322:	ea 51       	subi	r30, 0x1A	; 26
    1324:	ff 4f       	sbci	r31, 0xFF	; 255
    1326:	60 81       	ld	r22, Z
    1328:	71 81       	ldd	r23, Z+1	; 0x01
    132a:	82 81       	ldd	r24, Z+2	; 0x02
    132c:	93 81       	ldd	r25, Z+3	; 0x03
    132e:	20 e0       	ldi	r18, 0x00	; 0
    1330:	30 e0       	ldi	r19, 0x00	; 0
    1332:	40 e2       	ldi	r20, 0x20	; 32
    1334:	51 e4       	ldi	r21, 0x41	; 65
    1336:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    133a:	dc 01       	movw	r26, r24
    133c:	cb 01       	movw	r24, r22
    133e:	8e 01       	movw	r16, r28
    1340:	00 52       	subi	r16, 0x20	; 32
    1342:	1f 4f       	sbci	r17, 0xFF	; 255
    1344:	bc 01       	movw	r22, r24
    1346:	cd 01       	movw	r24, r26
    1348:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    134c:	dc 01       	movw	r26, r24
    134e:	cb 01       	movw	r24, r22
    1350:	f8 01       	movw	r30, r16
    1352:	91 83       	std	Z+1, r25	; 0x01
    1354:	80 83       	st	Z, r24
    1356:	1f c0       	rjmp	.+62     	; 0x1396 <main+0x282>
    1358:	fe 01       	movw	r30, r28
    135a:	e2 52       	subi	r30, 0x22	; 34
    135c:	ff 4f       	sbci	r31, 0xFF	; 255
    135e:	80 e9       	ldi	r24, 0x90	; 144
    1360:	91 e0       	ldi	r25, 0x01	; 1
    1362:	91 83       	std	Z+1, r25	; 0x01
    1364:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1366:	fe 01       	movw	r30, r28
    1368:	e2 52       	subi	r30, 0x22	; 34
    136a:	ff 4f       	sbci	r31, 0xFF	; 255
    136c:	80 81       	ld	r24, Z
    136e:	91 81       	ldd	r25, Z+1	; 0x01
    1370:	01 97       	sbiw	r24, 0x01	; 1
    1372:	f1 f7       	brne	.-4      	; 0x1370 <main+0x25c>
    1374:	fe 01       	movw	r30, r28
    1376:	e2 52       	subi	r30, 0x22	; 34
    1378:	ff 4f       	sbci	r31, 0xFF	; 255
    137a:	91 83       	std	Z+1, r25	; 0x01
    137c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    137e:	de 01       	movw	r26, r28
    1380:	a0 52       	subi	r26, 0x20	; 32
    1382:	bf 4f       	sbci	r27, 0xFF	; 255
    1384:	fe 01       	movw	r30, r28
    1386:	e0 52       	subi	r30, 0x20	; 32
    1388:	ff 4f       	sbci	r31, 0xFF	; 255
    138a:	80 81       	ld	r24, Z
    138c:	91 81       	ldd	r25, Z+1	; 0x01
    138e:	01 97       	sbiw	r24, 0x01	; 1
    1390:	11 96       	adiw	r26, 0x01	; 1
    1392:	9c 93       	st	X, r25
    1394:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1396:	fe 01       	movw	r30, r28
    1398:	e0 52       	subi	r30, 0x20	; 32
    139a:	ff 4f       	sbci	r31, 0xFF	; 255
    139c:	80 81       	ld	r24, Z
    139e:	91 81       	ldd	r25, Z+1	; 0x01
    13a0:	00 97       	sbiw	r24, 0x00	; 0
    13a2:	d1 f6       	brne	.-76     	; 0x1358 <main+0x244>
    13a4:	4b c0       	rjmp	.+150    	; 0x143c <main+0x328>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13a6:	8e 01       	movw	r16, r28
    13a8:	00 52       	subi	r16, 0x20	; 32
    13aa:	1f 4f       	sbci	r17, 0xFF	; 255
    13ac:	fe 01       	movw	r30, r28
    13ae:	ee 51       	subi	r30, 0x1E	; 30
    13b0:	ff 4f       	sbci	r31, 0xFF	; 255
    13b2:	60 81       	ld	r22, Z
    13b4:	71 81       	ldd	r23, Z+1	; 0x01
    13b6:	82 81       	ldd	r24, Z+2	; 0x02
    13b8:	93 81       	ldd	r25, Z+3	; 0x03
    13ba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13be:	dc 01       	movw	r26, r24
    13c0:	cb 01       	movw	r24, r22
    13c2:	f8 01       	movw	r30, r16
    13c4:	91 83       	std	Z+1, r25	; 0x01
    13c6:	80 83       	st	Z, r24
    13c8:	de 01       	movw	r26, r28
    13ca:	a4 52       	subi	r26, 0x24	; 36
    13cc:	bf 4f       	sbci	r27, 0xFF	; 255
    13ce:	fe 01       	movw	r30, r28
    13d0:	e0 52       	subi	r30, 0x20	; 32
    13d2:	ff 4f       	sbci	r31, 0xFF	; 255
    13d4:	80 81       	ld	r24, Z
    13d6:	91 81       	ldd	r25, Z+1	; 0x01
    13d8:	11 96       	adiw	r26, 0x01	; 1
    13da:	9c 93       	st	X, r25
    13dc:	8e 93       	st	-X, r24
    13de:	fe 01       	movw	r30, r28
    13e0:	e4 52       	subi	r30, 0x24	; 36
    13e2:	ff 4f       	sbci	r31, 0xFF	; 255
    13e4:	80 81       	ld	r24, Z
    13e6:	91 81       	ldd	r25, Z+1	; 0x01
    13e8:	01 97       	sbiw	r24, 0x01	; 1
    13ea:	f1 f7       	brne	.-4      	; 0x13e8 <main+0x2d4>
    13ec:	fe 01       	movw	r30, r28
    13ee:	e4 52       	subi	r30, 0x24	; 36
    13f0:	ff 4f       	sbci	r31, 0xFF	; 255
    13f2:	91 83       	std	Z+1, r25	; 0x01
    13f4:	80 83       	st	Z, r24
    13f6:	22 c0       	rjmp	.+68     	; 0x143c <main+0x328>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    13f8:	8e 01       	movw	r16, r28
    13fa:	06 51       	subi	r16, 0x16	; 22
    13fc:	1f 4f       	sbci	r17, 0xFF	; 255
    13fe:	fe 01       	movw	r30, r28
    1400:	e5 51       	subi	r30, 0x15	; 21
    1402:	ff 4f       	sbci	r31, 0xFF	; 255
    1404:	60 81       	ld	r22, Z
    1406:	71 81       	ldd	r23, Z+1	; 0x01
    1408:	82 81       	ldd	r24, Z+2	; 0x02
    140a:	93 81       	ldd	r25, Z+3	; 0x03
    140c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1410:	dc 01       	movw	r26, r24
    1412:	cb 01       	movw	r24, r22
    1414:	f8 01       	movw	r30, r16
    1416:	80 83       	st	Z, r24
    1418:	de 01       	movw	r26, r28
    141a:	a5 52       	subi	r26, 0x25	; 37
    141c:	bf 4f       	sbci	r27, 0xFF	; 255
    141e:	fe 01       	movw	r30, r28
    1420:	e6 51       	subi	r30, 0x16	; 22
    1422:	ff 4f       	sbci	r31, 0xFF	; 255
    1424:	80 81       	ld	r24, Z
    1426:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1428:	fe 01       	movw	r30, r28
    142a:	e5 52       	subi	r30, 0x25	; 37
    142c:	ff 4f       	sbci	r31, 0xFF	; 255
    142e:	80 81       	ld	r24, Z
    1430:	8a 95       	dec	r24
    1432:	f1 f7       	brne	.-4      	; 0x1430 <main+0x31c>
    1434:	fe 01       	movw	r30, r28
    1436:	e5 52       	subi	r30, 0x25	; 37
    1438:	ff 4f       	sbci	r31, 0xFF	; 255
    143a:	80 83       	st	Z, r24
		_delay_us(20);	 // wait for 20 us
		PORTA =(PORTA &(0XC0)) | (1<<4);    // enable second 7 segment
    143c:	ab e3       	ldi	r26, 0x3B	; 59
    143e:	b0 e0       	ldi	r27, 0x00	; 0
    1440:	eb e3       	ldi	r30, 0x3B	; 59
    1442:	f0 e0       	ldi	r31, 0x00	; 0
    1444:	80 81       	ld	r24, Z
    1446:	80 7c       	andi	r24, 0xC0	; 192
    1448:	80 61       	ori	r24, 0x10	; 16
    144a:	8c 93       	st	X, r24
		PORTC = (PORTC &(0XF0)) |sec/10;	 // Display second digit of seconds
    144c:	a5 e3       	ldi	r26, 0x35	; 53
    144e:	b0 e0       	ldi	r27, 0x00	; 0
    1450:	e5 e3       	ldi	r30, 0x35	; 53
    1452:	f0 e0       	ldi	r31, 0x00	; 0
    1454:	80 81       	ld	r24, Z
    1456:	28 2f       	mov	r18, r24
    1458:	20 7f       	andi	r18, 0xF0	; 240
    145a:	80 91 6a 00 	lds	r24, 0x006A
    145e:	9a e0       	ldi	r25, 0x0A	; 10
    1460:	69 2f       	mov	r22, r25
    1462:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__udivmodqi4>
    1466:	82 2b       	or	r24, r18
    1468:	8c 93       	st	X, r24
    146a:	fe 01       	movw	r30, r28
    146c:	e9 52       	subi	r30, 0x29	; 41
    146e:	ff 4f       	sbci	r31, 0xFF	; 255
    1470:	80 e0       	ldi	r24, 0x00	; 0
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	a0 ea       	ldi	r26, 0xA0	; 160
    1476:	b1 e4       	ldi	r27, 0x41	; 65
    1478:	80 83       	st	Z, r24
    147a:	91 83       	std	Z+1, r25	; 0x01
    147c:	a2 83       	std	Z+2, r26	; 0x02
    147e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1480:	8e 01       	movw	r16, r28
    1482:	0d 52       	subi	r16, 0x2D	; 45
    1484:	1f 4f       	sbci	r17, 0xFF	; 255
    1486:	fe 01       	movw	r30, r28
    1488:	e9 52       	subi	r30, 0x29	; 41
    148a:	ff 4f       	sbci	r31, 0xFF	; 255
    148c:	60 81       	ld	r22, Z
    148e:	71 81       	ldd	r23, Z+1	; 0x01
    1490:	82 81       	ldd	r24, Z+2	; 0x02
    1492:	93 81       	ldd	r25, Z+3	; 0x03
    1494:	2b ea       	ldi	r18, 0xAB	; 171
    1496:	3a ea       	ldi	r19, 0xAA	; 170
    1498:	4a ea       	ldi	r20, 0xAA	; 170
    149a:	50 e4       	ldi	r21, 0x40	; 64
    149c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14a0:	dc 01       	movw	r26, r24
    14a2:	cb 01       	movw	r24, r22
    14a4:	f8 01       	movw	r30, r16
    14a6:	80 83       	st	Z, r24
    14a8:	91 83       	std	Z+1, r25	; 0x01
    14aa:	a2 83       	std	Z+2, r26	; 0x02
    14ac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14ae:	fe 01       	movw	r30, r28
    14b0:	ed 52       	subi	r30, 0x2D	; 45
    14b2:	ff 4f       	sbci	r31, 0xFF	; 255
    14b4:	60 81       	ld	r22, Z
    14b6:	71 81       	ldd	r23, Z+1	; 0x01
    14b8:	82 81       	ldd	r24, Z+2	; 0x02
    14ba:	93 81       	ldd	r25, Z+3	; 0x03
    14bc:	20 e0       	ldi	r18, 0x00	; 0
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	40 e8       	ldi	r20, 0x80	; 128
    14c2:	5f e3       	ldi	r21, 0x3F	; 63
    14c4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    14c8:	88 23       	and	r24, r24
    14ca:	34 f4       	brge	.+12     	; 0x14d8 <main+0x3c4>
		__ticks = 1;
    14cc:	fe 01       	movw	r30, r28
    14ce:	ee 52       	subi	r30, 0x2E	; 46
    14d0:	ff 4f       	sbci	r31, 0xFF	; 255
    14d2:	81 e0       	ldi	r24, 0x01	; 1
    14d4:	80 83       	st	Z, r24
    14d6:	e0 c0       	rjmp	.+448    	; 0x1698 <main+0x584>
	else if (__tmp > 255)
    14d8:	fe 01       	movw	r30, r28
    14da:	ed 52       	subi	r30, 0x2D	; 45
    14dc:	ff 4f       	sbci	r31, 0xFF	; 255
    14de:	60 81       	ld	r22, Z
    14e0:	71 81       	ldd	r23, Z+1	; 0x01
    14e2:	82 81       	ldd	r24, Z+2	; 0x02
    14e4:	93 81       	ldd	r25, Z+3	; 0x03
    14e6:	20 e0       	ldi	r18, 0x00	; 0
    14e8:	30 e0       	ldi	r19, 0x00	; 0
    14ea:	4f e7       	ldi	r20, 0x7F	; 127
    14ec:	53 e4       	ldi	r21, 0x43	; 67
    14ee:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    14f2:	18 16       	cp	r1, r24
    14f4:	0c f0       	brlt	.+2      	; 0x14f8 <main+0x3e4>
    14f6:	c0 c0       	rjmp	.+384    	; 0x1678 <main+0x564>
	{
		_delay_ms(__us / 1000.0);
    14f8:	fe 01       	movw	r30, r28
    14fa:	e9 52       	subi	r30, 0x29	; 41
    14fc:	ff 4f       	sbci	r31, 0xFF	; 255
    14fe:	60 81       	ld	r22, Z
    1500:	71 81       	ldd	r23, Z+1	; 0x01
    1502:	82 81       	ldd	r24, Z+2	; 0x02
    1504:	93 81       	ldd	r25, Z+3	; 0x03
    1506:	20 e0       	ldi	r18, 0x00	; 0
    1508:	30 e0       	ldi	r19, 0x00	; 0
    150a:	4a e7       	ldi	r20, 0x7A	; 122
    150c:	54 e4       	ldi	r21, 0x44	; 68
    150e:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1512:	dc 01       	movw	r26, r24
    1514:	cb 01       	movw	r24, r22
    1516:	fe 01       	movw	r30, r28
    1518:	e2 53       	subi	r30, 0x32	; 50
    151a:	ff 4f       	sbci	r31, 0xFF	; 255
    151c:	80 83       	st	Z, r24
    151e:	91 83       	std	Z+1, r25	; 0x01
    1520:	a2 83       	std	Z+2, r26	; 0x02
    1522:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1524:	8e 01       	movw	r16, r28
    1526:	06 53       	subi	r16, 0x36	; 54
    1528:	1f 4f       	sbci	r17, 0xFF	; 255
    152a:	fe 01       	movw	r30, r28
    152c:	e2 53       	subi	r30, 0x32	; 50
    152e:	ff 4f       	sbci	r31, 0xFF	; 255
    1530:	60 81       	ld	r22, Z
    1532:	71 81       	ldd	r23, Z+1	; 0x01
    1534:	82 81       	ldd	r24, Z+2	; 0x02
    1536:	93 81       	ldd	r25, Z+3	; 0x03
    1538:	20 e0       	ldi	r18, 0x00	; 0
    153a:	30 e0       	ldi	r19, 0x00	; 0
    153c:	4a e7       	ldi	r20, 0x7A	; 122
    153e:	55 e4       	ldi	r21, 0x45	; 69
    1540:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1544:	dc 01       	movw	r26, r24
    1546:	cb 01       	movw	r24, r22
    1548:	f8 01       	movw	r30, r16
    154a:	80 83       	st	Z, r24
    154c:	91 83       	std	Z+1, r25	; 0x01
    154e:	a2 83       	std	Z+2, r26	; 0x02
    1550:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1552:	fe 01       	movw	r30, r28
    1554:	e6 53       	subi	r30, 0x36	; 54
    1556:	ff 4f       	sbci	r31, 0xFF	; 255
    1558:	60 81       	ld	r22, Z
    155a:	71 81       	ldd	r23, Z+1	; 0x01
    155c:	82 81       	ldd	r24, Z+2	; 0x02
    155e:	93 81       	ldd	r25, Z+3	; 0x03
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	40 e8       	ldi	r20, 0x80	; 128
    1566:	5f e3       	ldi	r21, 0x3F	; 63
    1568:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    156c:	88 23       	and	r24, r24
    156e:	44 f4       	brge	.+16     	; 0x1580 <main+0x46c>
		__ticks = 1;
    1570:	fe 01       	movw	r30, r28
    1572:	e8 53       	subi	r30, 0x38	; 56
    1574:	ff 4f       	sbci	r31, 0xFF	; 255
    1576:	81 e0       	ldi	r24, 0x01	; 1
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	91 83       	std	Z+1, r25	; 0x01
    157c:	80 83       	st	Z, r24
    157e:	64 c0       	rjmp	.+200    	; 0x1648 <main+0x534>
	else if (__tmp > 65535)
    1580:	fe 01       	movw	r30, r28
    1582:	e6 53       	subi	r30, 0x36	; 54
    1584:	ff 4f       	sbci	r31, 0xFF	; 255
    1586:	60 81       	ld	r22, Z
    1588:	71 81       	ldd	r23, Z+1	; 0x01
    158a:	82 81       	ldd	r24, Z+2	; 0x02
    158c:	93 81       	ldd	r25, Z+3	; 0x03
    158e:	20 e0       	ldi	r18, 0x00	; 0
    1590:	3f ef       	ldi	r19, 0xFF	; 255
    1592:	4f e7       	ldi	r20, 0x7F	; 127
    1594:	57 e4       	ldi	r21, 0x47	; 71
    1596:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    159a:	18 16       	cp	r1, r24
    159c:	0c f0       	brlt	.+2      	; 0x15a0 <main+0x48c>
    159e:	43 c0       	rjmp	.+134    	; 0x1626 <main+0x512>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15a0:	fe 01       	movw	r30, r28
    15a2:	e2 53       	subi	r30, 0x32	; 50
    15a4:	ff 4f       	sbci	r31, 0xFF	; 255
    15a6:	60 81       	ld	r22, Z
    15a8:	71 81       	ldd	r23, Z+1	; 0x01
    15aa:	82 81       	ldd	r24, Z+2	; 0x02
    15ac:	93 81       	ldd	r25, Z+3	; 0x03
    15ae:	20 e0       	ldi	r18, 0x00	; 0
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	40 e2       	ldi	r20, 0x20	; 32
    15b4:	51 e4       	ldi	r21, 0x41	; 65
    15b6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15ba:	dc 01       	movw	r26, r24
    15bc:	cb 01       	movw	r24, r22
    15be:	8e 01       	movw	r16, r28
    15c0:	08 53       	subi	r16, 0x38	; 56
    15c2:	1f 4f       	sbci	r17, 0xFF	; 255
    15c4:	bc 01       	movw	r22, r24
    15c6:	cd 01       	movw	r24, r26
    15c8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15cc:	dc 01       	movw	r26, r24
    15ce:	cb 01       	movw	r24, r22
    15d0:	f8 01       	movw	r30, r16
    15d2:	91 83       	std	Z+1, r25	; 0x01
    15d4:	80 83       	st	Z, r24
    15d6:	1f c0       	rjmp	.+62     	; 0x1616 <main+0x502>
    15d8:	fe 01       	movw	r30, r28
    15da:	ea 53       	subi	r30, 0x3A	; 58
    15dc:	ff 4f       	sbci	r31, 0xFF	; 255
    15de:	80 e9       	ldi	r24, 0x90	; 144
    15e0:	91 e0       	ldi	r25, 0x01	; 1
    15e2:	91 83       	std	Z+1, r25	; 0x01
    15e4:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15e6:	fe 01       	movw	r30, r28
    15e8:	ea 53       	subi	r30, 0x3A	; 58
    15ea:	ff 4f       	sbci	r31, 0xFF	; 255
    15ec:	80 81       	ld	r24, Z
    15ee:	91 81       	ldd	r25, Z+1	; 0x01
    15f0:	01 97       	sbiw	r24, 0x01	; 1
    15f2:	f1 f7       	brne	.-4      	; 0x15f0 <main+0x4dc>
    15f4:	fe 01       	movw	r30, r28
    15f6:	ea 53       	subi	r30, 0x3A	; 58
    15f8:	ff 4f       	sbci	r31, 0xFF	; 255
    15fa:	91 83       	std	Z+1, r25	; 0x01
    15fc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15fe:	de 01       	movw	r26, r28
    1600:	a8 53       	subi	r26, 0x38	; 56
    1602:	bf 4f       	sbci	r27, 0xFF	; 255
    1604:	fe 01       	movw	r30, r28
    1606:	e8 53       	subi	r30, 0x38	; 56
    1608:	ff 4f       	sbci	r31, 0xFF	; 255
    160a:	80 81       	ld	r24, Z
    160c:	91 81       	ldd	r25, Z+1	; 0x01
    160e:	01 97       	sbiw	r24, 0x01	; 1
    1610:	11 96       	adiw	r26, 0x01	; 1
    1612:	9c 93       	st	X, r25
    1614:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1616:	fe 01       	movw	r30, r28
    1618:	e8 53       	subi	r30, 0x38	; 56
    161a:	ff 4f       	sbci	r31, 0xFF	; 255
    161c:	80 81       	ld	r24, Z
    161e:	91 81       	ldd	r25, Z+1	; 0x01
    1620:	00 97       	sbiw	r24, 0x00	; 0
    1622:	d1 f6       	brne	.-76     	; 0x15d8 <main+0x4c4>
    1624:	4b c0       	rjmp	.+150    	; 0x16bc <main+0x5a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1626:	8e 01       	movw	r16, r28
    1628:	08 53       	subi	r16, 0x38	; 56
    162a:	1f 4f       	sbci	r17, 0xFF	; 255
    162c:	fe 01       	movw	r30, r28
    162e:	e6 53       	subi	r30, 0x36	; 54
    1630:	ff 4f       	sbci	r31, 0xFF	; 255
    1632:	60 81       	ld	r22, Z
    1634:	71 81       	ldd	r23, Z+1	; 0x01
    1636:	82 81       	ldd	r24, Z+2	; 0x02
    1638:	93 81       	ldd	r25, Z+3	; 0x03
    163a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    163e:	dc 01       	movw	r26, r24
    1640:	cb 01       	movw	r24, r22
    1642:	f8 01       	movw	r30, r16
    1644:	91 83       	std	Z+1, r25	; 0x01
    1646:	80 83       	st	Z, r24
    1648:	de 01       	movw	r26, r28
    164a:	ac 53       	subi	r26, 0x3C	; 60
    164c:	bf 4f       	sbci	r27, 0xFF	; 255
    164e:	fe 01       	movw	r30, r28
    1650:	e8 53       	subi	r30, 0x38	; 56
    1652:	ff 4f       	sbci	r31, 0xFF	; 255
    1654:	80 81       	ld	r24, Z
    1656:	91 81       	ldd	r25, Z+1	; 0x01
    1658:	11 96       	adiw	r26, 0x01	; 1
    165a:	9c 93       	st	X, r25
    165c:	8e 93       	st	-X, r24
    165e:	fe 01       	movw	r30, r28
    1660:	ec 53       	subi	r30, 0x3C	; 60
    1662:	ff 4f       	sbci	r31, 0xFF	; 255
    1664:	80 81       	ld	r24, Z
    1666:	91 81       	ldd	r25, Z+1	; 0x01
    1668:	01 97       	sbiw	r24, 0x01	; 1
    166a:	f1 f7       	brne	.-4      	; 0x1668 <main+0x554>
    166c:	fe 01       	movw	r30, r28
    166e:	ec 53       	subi	r30, 0x3C	; 60
    1670:	ff 4f       	sbci	r31, 0xFF	; 255
    1672:	91 83       	std	Z+1, r25	; 0x01
    1674:	80 83       	st	Z, r24
    1676:	22 c0       	rjmp	.+68     	; 0x16bc <main+0x5a8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1678:	8e 01       	movw	r16, r28
    167a:	0e 52       	subi	r16, 0x2E	; 46
    167c:	1f 4f       	sbci	r17, 0xFF	; 255
    167e:	fe 01       	movw	r30, r28
    1680:	ed 52       	subi	r30, 0x2D	; 45
    1682:	ff 4f       	sbci	r31, 0xFF	; 255
    1684:	60 81       	ld	r22, Z
    1686:	71 81       	ldd	r23, Z+1	; 0x01
    1688:	82 81       	ldd	r24, Z+2	; 0x02
    168a:	93 81       	ldd	r25, Z+3	; 0x03
    168c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1690:	dc 01       	movw	r26, r24
    1692:	cb 01       	movw	r24, r22
    1694:	f8 01       	movw	r30, r16
    1696:	80 83       	st	Z, r24
    1698:	de 01       	movw	r26, r28
    169a:	ad 53       	subi	r26, 0x3D	; 61
    169c:	bf 4f       	sbci	r27, 0xFF	; 255
    169e:	fe 01       	movw	r30, r28
    16a0:	ee 52       	subi	r30, 0x2E	; 46
    16a2:	ff 4f       	sbci	r31, 0xFF	; 255
    16a4:	80 81       	ld	r24, Z
    16a6:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    16a8:	fe 01       	movw	r30, r28
    16aa:	ed 53       	subi	r30, 0x3D	; 61
    16ac:	ff 4f       	sbci	r31, 0xFF	; 255
    16ae:	80 81       	ld	r24, Z
    16b0:	8a 95       	dec	r24
    16b2:	f1 f7       	brne	.-4      	; 0x16b0 <main+0x59c>
    16b4:	fe 01       	movw	r30, r28
    16b6:	ed 53       	subi	r30, 0x3D	; 61
    16b8:	ff 4f       	sbci	r31, 0xFF	; 255
    16ba:	80 83       	st	Z, r24
		_delay_us(20);	 // wait for 20 us
		PORTA =(PORTA &(0XC0)) | (1<<3);    // enable third 7 segment
    16bc:	ab e3       	ldi	r26, 0x3B	; 59
    16be:	b0 e0       	ldi	r27, 0x00	; 0
    16c0:	eb e3       	ldi	r30, 0x3B	; 59
    16c2:	f0 e0       	ldi	r31, 0x00	; 0
    16c4:	80 81       	ld	r24, Z
    16c6:	80 7c       	andi	r24, 0xC0	; 192
    16c8:	88 60       	ori	r24, 0x08	; 8
    16ca:	8c 93       	st	X, r24
		PORTC = (PORTC &(0XF0)) |min%10;	 // Display third digit of seconds
    16cc:	a5 e3       	ldi	r26, 0x35	; 53
    16ce:	b0 e0       	ldi	r27, 0x00	; 0
    16d0:	e5 e3       	ldi	r30, 0x35	; 53
    16d2:	f0 e0       	ldi	r31, 0x00	; 0
    16d4:	80 81       	ld	r24, Z
    16d6:	28 2f       	mov	r18, r24
    16d8:	20 7f       	andi	r18, 0xF0	; 240
    16da:	80 91 6b 00 	lds	r24, 0x006B
    16de:	9a e0       	ldi	r25, 0x0A	; 10
    16e0:	69 2f       	mov	r22, r25
    16e2:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__udivmodqi4>
    16e6:	89 2f       	mov	r24, r25
    16e8:	82 2b       	or	r24, r18
    16ea:	8c 93       	st	X, r24
    16ec:	fe 01       	movw	r30, r28
    16ee:	e1 54       	subi	r30, 0x41	; 65
    16f0:	ff 4f       	sbci	r31, 0xFF	; 255
    16f2:	80 e0       	ldi	r24, 0x00	; 0
    16f4:	90 e0       	ldi	r25, 0x00	; 0
    16f6:	a0 ea       	ldi	r26, 0xA0	; 160
    16f8:	b1 e4       	ldi	r27, 0x41	; 65
    16fa:	80 83       	st	Z, r24
    16fc:	91 83       	std	Z+1, r25	; 0x01
    16fe:	a2 83       	std	Z+2, r26	; 0x02
    1700:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1702:	8e 01       	movw	r16, r28
    1704:	05 54       	subi	r16, 0x45	; 69
    1706:	1f 4f       	sbci	r17, 0xFF	; 255
    1708:	fe 01       	movw	r30, r28
    170a:	e1 54       	subi	r30, 0x41	; 65
    170c:	ff 4f       	sbci	r31, 0xFF	; 255
    170e:	60 81       	ld	r22, Z
    1710:	71 81       	ldd	r23, Z+1	; 0x01
    1712:	82 81       	ldd	r24, Z+2	; 0x02
    1714:	93 81       	ldd	r25, Z+3	; 0x03
    1716:	2b ea       	ldi	r18, 0xAB	; 171
    1718:	3a ea       	ldi	r19, 0xAA	; 170
    171a:	4a ea       	ldi	r20, 0xAA	; 170
    171c:	50 e4       	ldi	r21, 0x40	; 64
    171e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1722:	dc 01       	movw	r26, r24
    1724:	cb 01       	movw	r24, r22
    1726:	f8 01       	movw	r30, r16
    1728:	80 83       	st	Z, r24
    172a:	91 83       	std	Z+1, r25	; 0x01
    172c:	a2 83       	std	Z+2, r26	; 0x02
    172e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1730:	fe 01       	movw	r30, r28
    1732:	e5 54       	subi	r30, 0x45	; 69
    1734:	ff 4f       	sbci	r31, 0xFF	; 255
    1736:	60 81       	ld	r22, Z
    1738:	71 81       	ldd	r23, Z+1	; 0x01
    173a:	82 81       	ldd	r24, Z+2	; 0x02
    173c:	93 81       	ldd	r25, Z+3	; 0x03
    173e:	20 e0       	ldi	r18, 0x00	; 0
    1740:	30 e0       	ldi	r19, 0x00	; 0
    1742:	40 e8       	ldi	r20, 0x80	; 128
    1744:	5f e3       	ldi	r21, 0x3F	; 63
    1746:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    174a:	88 23       	and	r24, r24
    174c:	34 f4       	brge	.+12     	; 0x175a <main+0x646>
		__ticks = 1;
    174e:	fe 01       	movw	r30, r28
    1750:	e6 54       	subi	r30, 0x46	; 70
    1752:	ff 4f       	sbci	r31, 0xFF	; 255
    1754:	81 e0       	ldi	r24, 0x01	; 1
    1756:	80 83       	st	Z, r24
    1758:	e0 c0       	rjmp	.+448    	; 0x191a <main+0x806>
	else if (__tmp > 255)
    175a:	fe 01       	movw	r30, r28
    175c:	e5 54       	subi	r30, 0x45	; 69
    175e:	ff 4f       	sbci	r31, 0xFF	; 255
    1760:	60 81       	ld	r22, Z
    1762:	71 81       	ldd	r23, Z+1	; 0x01
    1764:	82 81       	ldd	r24, Z+2	; 0x02
    1766:	93 81       	ldd	r25, Z+3	; 0x03
    1768:	20 e0       	ldi	r18, 0x00	; 0
    176a:	30 e0       	ldi	r19, 0x00	; 0
    176c:	4f e7       	ldi	r20, 0x7F	; 127
    176e:	53 e4       	ldi	r21, 0x43	; 67
    1770:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1774:	18 16       	cp	r1, r24
    1776:	0c f0       	brlt	.+2      	; 0x177a <main+0x666>
    1778:	c0 c0       	rjmp	.+384    	; 0x18fa <main+0x7e6>
	{
		_delay_ms(__us / 1000.0);
    177a:	fe 01       	movw	r30, r28
    177c:	e1 54       	subi	r30, 0x41	; 65
    177e:	ff 4f       	sbci	r31, 0xFF	; 255
    1780:	60 81       	ld	r22, Z
    1782:	71 81       	ldd	r23, Z+1	; 0x01
    1784:	82 81       	ldd	r24, Z+2	; 0x02
    1786:	93 81       	ldd	r25, Z+3	; 0x03
    1788:	20 e0       	ldi	r18, 0x00	; 0
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	4a e7       	ldi	r20, 0x7A	; 122
    178e:	54 e4       	ldi	r21, 0x44	; 68
    1790:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1794:	dc 01       	movw	r26, r24
    1796:	cb 01       	movw	r24, r22
    1798:	fe 01       	movw	r30, r28
    179a:	ea 54       	subi	r30, 0x4A	; 74
    179c:	ff 4f       	sbci	r31, 0xFF	; 255
    179e:	80 83       	st	Z, r24
    17a0:	91 83       	std	Z+1, r25	; 0x01
    17a2:	a2 83       	std	Z+2, r26	; 0x02
    17a4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17a6:	8e 01       	movw	r16, r28
    17a8:	0e 54       	subi	r16, 0x4E	; 78
    17aa:	1f 4f       	sbci	r17, 0xFF	; 255
    17ac:	fe 01       	movw	r30, r28
    17ae:	ea 54       	subi	r30, 0x4A	; 74
    17b0:	ff 4f       	sbci	r31, 0xFF	; 255
    17b2:	60 81       	ld	r22, Z
    17b4:	71 81       	ldd	r23, Z+1	; 0x01
    17b6:	82 81       	ldd	r24, Z+2	; 0x02
    17b8:	93 81       	ldd	r25, Z+3	; 0x03
    17ba:	20 e0       	ldi	r18, 0x00	; 0
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	4a e7       	ldi	r20, 0x7A	; 122
    17c0:	55 e4       	ldi	r21, 0x45	; 69
    17c2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17c6:	dc 01       	movw	r26, r24
    17c8:	cb 01       	movw	r24, r22
    17ca:	f8 01       	movw	r30, r16
    17cc:	80 83       	st	Z, r24
    17ce:	91 83       	std	Z+1, r25	; 0x01
    17d0:	a2 83       	std	Z+2, r26	; 0x02
    17d2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17d4:	fe 01       	movw	r30, r28
    17d6:	ee 54       	subi	r30, 0x4E	; 78
    17d8:	ff 4f       	sbci	r31, 0xFF	; 255
    17da:	60 81       	ld	r22, Z
    17dc:	71 81       	ldd	r23, Z+1	; 0x01
    17de:	82 81       	ldd	r24, Z+2	; 0x02
    17e0:	93 81       	ldd	r25, Z+3	; 0x03
    17e2:	20 e0       	ldi	r18, 0x00	; 0
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	40 e8       	ldi	r20, 0x80	; 128
    17e8:	5f e3       	ldi	r21, 0x3F	; 63
    17ea:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    17ee:	88 23       	and	r24, r24
    17f0:	44 f4       	brge	.+16     	; 0x1802 <main+0x6ee>
		__ticks = 1;
    17f2:	fe 01       	movw	r30, r28
    17f4:	e0 55       	subi	r30, 0x50	; 80
    17f6:	ff 4f       	sbci	r31, 0xFF	; 255
    17f8:	81 e0       	ldi	r24, 0x01	; 1
    17fa:	90 e0       	ldi	r25, 0x00	; 0
    17fc:	91 83       	std	Z+1, r25	; 0x01
    17fe:	80 83       	st	Z, r24
    1800:	64 c0       	rjmp	.+200    	; 0x18ca <main+0x7b6>
	else if (__tmp > 65535)
    1802:	fe 01       	movw	r30, r28
    1804:	ee 54       	subi	r30, 0x4E	; 78
    1806:	ff 4f       	sbci	r31, 0xFF	; 255
    1808:	60 81       	ld	r22, Z
    180a:	71 81       	ldd	r23, Z+1	; 0x01
    180c:	82 81       	ldd	r24, Z+2	; 0x02
    180e:	93 81       	ldd	r25, Z+3	; 0x03
    1810:	20 e0       	ldi	r18, 0x00	; 0
    1812:	3f ef       	ldi	r19, 0xFF	; 255
    1814:	4f e7       	ldi	r20, 0x7F	; 127
    1816:	57 e4       	ldi	r21, 0x47	; 71
    1818:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    181c:	18 16       	cp	r1, r24
    181e:	0c f0       	brlt	.+2      	; 0x1822 <main+0x70e>
    1820:	43 c0       	rjmp	.+134    	; 0x18a8 <main+0x794>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1822:	fe 01       	movw	r30, r28
    1824:	ea 54       	subi	r30, 0x4A	; 74
    1826:	ff 4f       	sbci	r31, 0xFF	; 255
    1828:	60 81       	ld	r22, Z
    182a:	71 81       	ldd	r23, Z+1	; 0x01
    182c:	82 81       	ldd	r24, Z+2	; 0x02
    182e:	93 81       	ldd	r25, Z+3	; 0x03
    1830:	20 e0       	ldi	r18, 0x00	; 0
    1832:	30 e0       	ldi	r19, 0x00	; 0
    1834:	40 e2       	ldi	r20, 0x20	; 32
    1836:	51 e4       	ldi	r21, 0x41	; 65
    1838:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    183c:	dc 01       	movw	r26, r24
    183e:	cb 01       	movw	r24, r22
    1840:	8e 01       	movw	r16, r28
    1842:	00 55       	subi	r16, 0x50	; 80
    1844:	1f 4f       	sbci	r17, 0xFF	; 255
    1846:	bc 01       	movw	r22, r24
    1848:	cd 01       	movw	r24, r26
    184a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    184e:	dc 01       	movw	r26, r24
    1850:	cb 01       	movw	r24, r22
    1852:	f8 01       	movw	r30, r16
    1854:	91 83       	std	Z+1, r25	; 0x01
    1856:	80 83       	st	Z, r24
    1858:	1f c0       	rjmp	.+62     	; 0x1898 <main+0x784>
    185a:	fe 01       	movw	r30, r28
    185c:	e2 55       	subi	r30, 0x52	; 82
    185e:	ff 4f       	sbci	r31, 0xFF	; 255
    1860:	80 e9       	ldi	r24, 0x90	; 144
    1862:	91 e0       	ldi	r25, 0x01	; 1
    1864:	91 83       	std	Z+1, r25	; 0x01
    1866:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1868:	fe 01       	movw	r30, r28
    186a:	e2 55       	subi	r30, 0x52	; 82
    186c:	ff 4f       	sbci	r31, 0xFF	; 255
    186e:	80 81       	ld	r24, Z
    1870:	91 81       	ldd	r25, Z+1	; 0x01
    1872:	01 97       	sbiw	r24, 0x01	; 1
    1874:	f1 f7       	brne	.-4      	; 0x1872 <main+0x75e>
    1876:	fe 01       	movw	r30, r28
    1878:	e2 55       	subi	r30, 0x52	; 82
    187a:	ff 4f       	sbci	r31, 0xFF	; 255
    187c:	91 83       	std	Z+1, r25	; 0x01
    187e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1880:	de 01       	movw	r26, r28
    1882:	a0 55       	subi	r26, 0x50	; 80
    1884:	bf 4f       	sbci	r27, 0xFF	; 255
    1886:	fe 01       	movw	r30, r28
    1888:	e0 55       	subi	r30, 0x50	; 80
    188a:	ff 4f       	sbci	r31, 0xFF	; 255
    188c:	80 81       	ld	r24, Z
    188e:	91 81       	ldd	r25, Z+1	; 0x01
    1890:	01 97       	sbiw	r24, 0x01	; 1
    1892:	11 96       	adiw	r26, 0x01	; 1
    1894:	9c 93       	st	X, r25
    1896:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1898:	fe 01       	movw	r30, r28
    189a:	e0 55       	subi	r30, 0x50	; 80
    189c:	ff 4f       	sbci	r31, 0xFF	; 255
    189e:	80 81       	ld	r24, Z
    18a0:	91 81       	ldd	r25, Z+1	; 0x01
    18a2:	00 97       	sbiw	r24, 0x00	; 0
    18a4:	d1 f6       	brne	.-76     	; 0x185a <main+0x746>
    18a6:	4b c0       	rjmp	.+150    	; 0x193e <main+0x82a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18a8:	8e 01       	movw	r16, r28
    18aa:	00 55       	subi	r16, 0x50	; 80
    18ac:	1f 4f       	sbci	r17, 0xFF	; 255
    18ae:	fe 01       	movw	r30, r28
    18b0:	ee 54       	subi	r30, 0x4E	; 78
    18b2:	ff 4f       	sbci	r31, 0xFF	; 255
    18b4:	60 81       	ld	r22, Z
    18b6:	71 81       	ldd	r23, Z+1	; 0x01
    18b8:	82 81       	ldd	r24, Z+2	; 0x02
    18ba:	93 81       	ldd	r25, Z+3	; 0x03
    18bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18c0:	dc 01       	movw	r26, r24
    18c2:	cb 01       	movw	r24, r22
    18c4:	f8 01       	movw	r30, r16
    18c6:	91 83       	std	Z+1, r25	; 0x01
    18c8:	80 83       	st	Z, r24
    18ca:	de 01       	movw	r26, r28
    18cc:	a4 55       	subi	r26, 0x54	; 84
    18ce:	bf 4f       	sbci	r27, 0xFF	; 255
    18d0:	fe 01       	movw	r30, r28
    18d2:	e0 55       	subi	r30, 0x50	; 80
    18d4:	ff 4f       	sbci	r31, 0xFF	; 255
    18d6:	80 81       	ld	r24, Z
    18d8:	91 81       	ldd	r25, Z+1	; 0x01
    18da:	11 96       	adiw	r26, 0x01	; 1
    18dc:	9c 93       	st	X, r25
    18de:	8e 93       	st	-X, r24
    18e0:	fe 01       	movw	r30, r28
    18e2:	e4 55       	subi	r30, 0x54	; 84
    18e4:	ff 4f       	sbci	r31, 0xFF	; 255
    18e6:	80 81       	ld	r24, Z
    18e8:	91 81       	ldd	r25, Z+1	; 0x01
    18ea:	01 97       	sbiw	r24, 0x01	; 1
    18ec:	f1 f7       	brne	.-4      	; 0x18ea <main+0x7d6>
    18ee:	fe 01       	movw	r30, r28
    18f0:	e4 55       	subi	r30, 0x54	; 84
    18f2:	ff 4f       	sbci	r31, 0xFF	; 255
    18f4:	91 83       	std	Z+1, r25	; 0x01
    18f6:	80 83       	st	Z, r24
    18f8:	22 c0       	rjmp	.+68     	; 0x193e <main+0x82a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    18fa:	8e 01       	movw	r16, r28
    18fc:	06 54       	subi	r16, 0x46	; 70
    18fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1900:	fe 01       	movw	r30, r28
    1902:	e5 54       	subi	r30, 0x45	; 69
    1904:	ff 4f       	sbci	r31, 0xFF	; 255
    1906:	60 81       	ld	r22, Z
    1908:	71 81       	ldd	r23, Z+1	; 0x01
    190a:	82 81       	ldd	r24, Z+2	; 0x02
    190c:	93 81       	ldd	r25, Z+3	; 0x03
    190e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1912:	dc 01       	movw	r26, r24
    1914:	cb 01       	movw	r24, r22
    1916:	f8 01       	movw	r30, r16
    1918:	80 83       	st	Z, r24
    191a:	de 01       	movw	r26, r28
    191c:	a5 55       	subi	r26, 0x55	; 85
    191e:	bf 4f       	sbci	r27, 0xFF	; 255
    1920:	fe 01       	movw	r30, r28
    1922:	e6 54       	subi	r30, 0x46	; 70
    1924:	ff 4f       	sbci	r31, 0xFF	; 255
    1926:	80 81       	ld	r24, Z
    1928:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    192a:	fe 01       	movw	r30, r28
    192c:	e5 55       	subi	r30, 0x55	; 85
    192e:	ff 4f       	sbci	r31, 0xFF	; 255
    1930:	80 81       	ld	r24, Z
    1932:	8a 95       	dec	r24
    1934:	f1 f7       	brne	.-4      	; 0x1932 <main+0x81e>
    1936:	fe 01       	movw	r30, r28
    1938:	e5 55       	subi	r30, 0x55	; 85
    193a:	ff 4f       	sbci	r31, 0xFF	; 255
    193c:	80 83       	st	Z, r24
		_delay_us(20);	 // wait for 20 us
		PORTA =(PORTA &(0XC0)) | (1<<2);    // enable fourth 7 segment
    193e:	ab e3       	ldi	r26, 0x3B	; 59
    1940:	b0 e0       	ldi	r27, 0x00	; 0
    1942:	eb e3       	ldi	r30, 0x3B	; 59
    1944:	f0 e0       	ldi	r31, 0x00	; 0
    1946:	80 81       	ld	r24, Z
    1948:	80 7c       	andi	r24, 0xC0	; 192
    194a:	84 60       	ori	r24, 0x04	; 4
    194c:	8c 93       	st	X, r24
		PORTC = (PORTC &(0XF0)) |min/10;	 // Display fourth digit of seconds
    194e:	a5 e3       	ldi	r26, 0x35	; 53
    1950:	b0 e0       	ldi	r27, 0x00	; 0
    1952:	e5 e3       	ldi	r30, 0x35	; 53
    1954:	f0 e0       	ldi	r31, 0x00	; 0
    1956:	80 81       	ld	r24, Z
    1958:	28 2f       	mov	r18, r24
    195a:	20 7f       	andi	r18, 0xF0	; 240
    195c:	80 91 6b 00 	lds	r24, 0x006B
    1960:	9a e0       	ldi	r25, 0x0A	; 10
    1962:	69 2f       	mov	r22, r25
    1964:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__udivmodqi4>
    1968:	82 2b       	or	r24, r18
    196a:	8c 93       	st	X, r24
    196c:	fe 01       	movw	r30, r28
    196e:	e9 55       	subi	r30, 0x59	; 89
    1970:	ff 4f       	sbci	r31, 0xFF	; 255
    1972:	80 e0       	ldi	r24, 0x00	; 0
    1974:	90 e0       	ldi	r25, 0x00	; 0
    1976:	a0 ea       	ldi	r26, 0xA0	; 160
    1978:	b1 e4       	ldi	r27, 0x41	; 65
    197a:	80 83       	st	Z, r24
    197c:	91 83       	std	Z+1, r25	; 0x01
    197e:	a2 83       	std	Z+2, r26	; 0x02
    1980:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1982:	8e 01       	movw	r16, r28
    1984:	0d 55       	subi	r16, 0x5D	; 93
    1986:	1f 4f       	sbci	r17, 0xFF	; 255
    1988:	fe 01       	movw	r30, r28
    198a:	e9 55       	subi	r30, 0x59	; 89
    198c:	ff 4f       	sbci	r31, 0xFF	; 255
    198e:	60 81       	ld	r22, Z
    1990:	71 81       	ldd	r23, Z+1	; 0x01
    1992:	82 81       	ldd	r24, Z+2	; 0x02
    1994:	93 81       	ldd	r25, Z+3	; 0x03
    1996:	2b ea       	ldi	r18, 0xAB	; 171
    1998:	3a ea       	ldi	r19, 0xAA	; 170
    199a:	4a ea       	ldi	r20, 0xAA	; 170
    199c:	50 e4       	ldi	r21, 0x40	; 64
    199e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19a2:	dc 01       	movw	r26, r24
    19a4:	cb 01       	movw	r24, r22
    19a6:	f8 01       	movw	r30, r16
    19a8:	80 83       	st	Z, r24
    19aa:	91 83       	std	Z+1, r25	; 0x01
    19ac:	a2 83       	std	Z+2, r26	; 0x02
    19ae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19b0:	fe 01       	movw	r30, r28
    19b2:	ed 55       	subi	r30, 0x5D	; 93
    19b4:	ff 4f       	sbci	r31, 0xFF	; 255
    19b6:	60 81       	ld	r22, Z
    19b8:	71 81       	ldd	r23, Z+1	; 0x01
    19ba:	82 81       	ldd	r24, Z+2	; 0x02
    19bc:	93 81       	ldd	r25, Z+3	; 0x03
    19be:	20 e0       	ldi	r18, 0x00	; 0
    19c0:	30 e0       	ldi	r19, 0x00	; 0
    19c2:	40 e8       	ldi	r20, 0x80	; 128
    19c4:	5f e3       	ldi	r21, 0x3F	; 63
    19c6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    19ca:	88 23       	and	r24, r24
    19cc:	34 f4       	brge	.+12     	; 0x19da <main+0x8c6>
		__ticks = 1;
    19ce:	fe 01       	movw	r30, r28
    19d0:	ee 55       	subi	r30, 0x5E	; 94
    19d2:	ff 4f       	sbci	r31, 0xFF	; 255
    19d4:	81 e0       	ldi	r24, 0x01	; 1
    19d6:	80 83       	st	Z, r24
    19d8:	e0 c0       	rjmp	.+448    	; 0x1b9a <main+0xa86>
	else if (__tmp > 255)
    19da:	fe 01       	movw	r30, r28
    19dc:	ed 55       	subi	r30, 0x5D	; 93
    19de:	ff 4f       	sbci	r31, 0xFF	; 255
    19e0:	60 81       	ld	r22, Z
    19e2:	71 81       	ldd	r23, Z+1	; 0x01
    19e4:	82 81       	ldd	r24, Z+2	; 0x02
    19e6:	93 81       	ldd	r25, Z+3	; 0x03
    19e8:	20 e0       	ldi	r18, 0x00	; 0
    19ea:	30 e0       	ldi	r19, 0x00	; 0
    19ec:	4f e7       	ldi	r20, 0x7F	; 127
    19ee:	53 e4       	ldi	r21, 0x43	; 67
    19f0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    19f4:	18 16       	cp	r1, r24
    19f6:	0c f0       	brlt	.+2      	; 0x19fa <main+0x8e6>
    19f8:	c0 c0       	rjmp	.+384    	; 0x1b7a <main+0xa66>
	{
		_delay_ms(__us / 1000.0);
    19fa:	fe 01       	movw	r30, r28
    19fc:	e9 55       	subi	r30, 0x59	; 89
    19fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1a00:	60 81       	ld	r22, Z
    1a02:	71 81       	ldd	r23, Z+1	; 0x01
    1a04:	82 81       	ldd	r24, Z+2	; 0x02
    1a06:	93 81       	ldd	r25, Z+3	; 0x03
    1a08:	20 e0       	ldi	r18, 0x00	; 0
    1a0a:	30 e0       	ldi	r19, 0x00	; 0
    1a0c:	4a e7       	ldi	r20, 0x7A	; 122
    1a0e:	54 e4       	ldi	r21, 0x44	; 68
    1a10:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1a14:	dc 01       	movw	r26, r24
    1a16:	cb 01       	movw	r24, r22
    1a18:	fe 01       	movw	r30, r28
    1a1a:	e2 56       	subi	r30, 0x62	; 98
    1a1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a1e:	80 83       	st	Z, r24
    1a20:	91 83       	std	Z+1, r25	; 0x01
    1a22:	a2 83       	std	Z+2, r26	; 0x02
    1a24:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a26:	8e 01       	movw	r16, r28
    1a28:	06 56       	subi	r16, 0x66	; 102
    1a2a:	1f 4f       	sbci	r17, 0xFF	; 255
    1a2c:	fe 01       	movw	r30, r28
    1a2e:	e2 56       	subi	r30, 0x62	; 98
    1a30:	ff 4f       	sbci	r31, 0xFF	; 255
    1a32:	60 81       	ld	r22, Z
    1a34:	71 81       	ldd	r23, Z+1	; 0x01
    1a36:	82 81       	ldd	r24, Z+2	; 0x02
    1a38:	93 81       	ldd	r25, Z+3	; 0x03
    1a3a:	20 e0       	ldi	r18, 0x00	; 0
    1a3c:	30 e0       	ldi	r19, 0x00	; 0
    1a3e:	4a e7       	ldi	r20, 0x7A	; 122
    1a40:	55 e4       	ldi	r21, 0x45	; 69
    1a42:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a46:	dc 01       	movw	r26, r24
    1a48:	cb 01       	movw	r24, r22
    1a4a:	f8 01       	movw	r30, r16
    1a4c:	80 83       	st	Z, r24
    1a4e:	91 83       	std	Z+1, r25	; 0x01
    1a50:	a2 83       	std	Z+2, r26	; 0x02
    1a52:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a54:	fe 01       	movw	r30, r28
    1a56:	e6 56       	subi	r30, 0x66	; 102
    1a58:	ff 4f       	sbci	r31, 0xFF	; 255
    1a5a:	60 81       	ld	r22, Z
    1a5c:	71 81       	ldd	r23, Z+1	; 0x01
    1a5e:	82 81       	ldd	r24, Z+2	; 0x02
    1a60:	93 81       	ldd	r25, Z+3	; 0x03
    1a62:	20 e0       	ldi	r18, 0x00	; 0
    1a64:	30 e0       	ldi	r19, 0x00	; 0
    1a66:	40 e8       	ldi	r20, 0x80	; 128
    1a68:	5f e3       	ldi	r21, 0x3F	; 63
    1a6a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1a6e:	88 23       	and	r24, r24
    1a70:	44 f4       	brge	.+16     	; 0x1a82 <main+0x96e>
		__ticks = 1;
    1a72:	fe 01       	movw	r30, r28
    1a74:	e8 56       	subi	r30, 0x68	; 104
    1a76:	ff 4f       	sbci	r31, 0xFF	; 255
    1a78:	81 e0       	ldi	r24, 0x01	; 1
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	91 83       	std	Z+1, r25	; 0x01
    1a7e:	80 83       	st	Z, r24
    1a80:	64 c0       	rjmp	.+200    	; 0x1b4a <main+0xa36>
	else if (__tmp > 65535)
    1a82:	fe 01       	movw	r30, r28
    1a84:	e6 56       	subi	r30, 0x66	; 102
    1a86:	ff 4f       	sbci	r31, 0xFF	; 255
    1a88:	60 81       	ld	r22, Z
    1a8a:	71 81       	ldd	r23, Z+1	; 0x01
    1a8c:	82 81       	ldd	r24, Z+2	; 0x02
    1a8e:	93 81       	ldd	r25, Z+3	; 0x03
    1a90:	20 e0       	ldi	r18, 0x00	; 0
    1a92:	3f ef       	ldi	r19, 0xFF	; 255
    1a94:	4f e7       	ldi	r20, 0x7F	; 127
    1a96:	57 e4       	ldi	r21, 0x47	; 71
    1a98:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1a9c:	18 16       	cp	r1, r24
    1a9e:	0c f0       	brlt	.+2      	; 0x1aa2 <main+0x98e>
    1aa0:	43 c0       	rjmp	.+134    	; 0x1b28 <main+0xa14>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1aa2:	fe 01       	movw	r30, r28
    1aa4:	e2 56       	subi	r30, 0x62	; 98
    1aa6:	ff 4f       	sbci	r31, 0xFF	; 255
    1aa8:	60 81       	ld	r22, Z
    1aaa:	71 81       	ldd	r23, Z+1	; 0x01
    1aac:	82 81       	ldd	r24, Z+2	; 0x02
    1aae:	93 81       	ldd	r25, Z+3	; 0x03
    1ab0:	20 e0       	ldi	r18, 0x00	; 0
    1ab2:	30 e0       	ldi	r19, 0x00	; 0
    1ab4:	40 e2       	ldi	r20, 0x20	; 32
    1ab6:	51 e4       	ldi	r21, 0x41	; 65
    1ab8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1abc:	dc 01       	movw	r26, r24
    1abe:	cb 01       	movw	r24, r22
    1ac0:	8e 01       	movw	r16, r28
    1ac2:	08 56       	subi	r16, 0x68	; 104
    1ac4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ac6:	bc 01       	movw	r22, r24
    1ac8:	cd 01       	movw	r24, r26
    1aca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ace:	dc 01       	movw	r26, r24
    1ad0:	cb 01       	movw	r24, r22
    1ad2:	f8 01       	movw	r30, r16
    1ad4:	91 83       	std	Z+1, r25	; 0x01
    1ad6:	80 83       	st	Z, r24
    1ad8:	1f c0       	rjmp	.+62     	; 0x1b18 <main+0xa04>
    1ada:	fe 01       	movw	r30, r28
    1adc:	ea 56       	subi	r30, 0x6A	; 106
    1ade:	ff 4f       	sbci	r31, 0xFF	; 255
    1ae0:	80 e9       	ldi	r24, 0x90	; 144
    1ae2:	91 e0       	ldi	r25, 0x01	; 1
    1ae4:	91 83       	std	Z+1, r25	; 0x01
    1ae6:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1ae8:	fe 01       	movw	r30, r28
    1aea:	ea 56       	subi	r30, 0x6A	; 106
    1aec:	ff 4f       	sbci	r31, 0xFF	; 255
    1aee:	80 81       	ld	r24, Z
    1af0:	91 81       	ldd	r25, Z+1	; 0x01
    1af2:	01 97       	sbiw	r24, 0x01	; 1
    1af4:	f1 f7       	brne	.-4      	; 0x1af2 <main+0x9de>
    1af6:	fe 01       	movw	r30, r28
    1af8:	ea 56       	subi	r30, 0x6A	; 106
    1afa:	ff 4f       	sbci	r31, 0xFF	; 255
    1afc:	91 83       	std	Z+1, r25	; 0x01
    1afe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b00:	de 01       	movw	r26, r28
    1b02:	a8 56       	subi	r26, 0x68	; 104
    1b04:	bf 4f       	sbci	r27, 0xFF	; 255
    1b06:	fe 01       	movw	r30, r28
    1b08:	e8 56       	subi	r30, 0x68	; 104
    1b0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b0c:	80 81       	ld	r24, Z
    1b0e:	91 81       	ldd	r25, Z+1	; 0x01
    1b10:	01 97       	sbiw	r24, 0x01	; 1
    1b12:	11 96       	adiw	r26, 0x01	; 1
    1b14:	9c 93       	st	X, r25
    1b16:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b18:	fe 01       	movw	r30, r28
    1b1a:	e8 56       	subi	r30, 0x68	; 104
    1b1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b1e:	80 81       	ld	r24, Z
    1b20:	91 81       	ldd	r25, Z+1	; 0x01
    1b22:	00 97       	sbiw	r24, 0x00	; 0
    1b24:	d1 f6       	brne	.-76     	; 0x1ada <main+0x9c6>
    1b26:	4b c0       	rjmp	.+150    	; 0x1bbe <main+0xaaa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b28:	8e 01       	movw	r16, r28
    1b2a:	08 56       	subi	r16, 0x68	; 104
    1b2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b2e:	fe 01       	movw	r30, r28
    1b30:	e6 56       	subi	r30, 0x66	; 102
    1b32:	ff 4f       	sbci	r31, 0xFF	; 255
    1b34:	60 81       	ld	r22, Z
    1b36:	71 81       	ldd	r23, Z+1	; 0x01
    1b38:	82 81       	ldd	r24, Z+2	; 0x02
    1b3a:	93 81       	ldd	r25, Z+3	; 0x03
    1b3c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b40:	dc 01       	movw	r26, r24
    1b42:	cb 01       	movw	r24, r22
    1b44:	f8 01       	movw	r30, r16
    1b46:	91 83       	std	Z+1, r25	; 0x01
    1b48:	80 83       	st	Z, r24
    1b4a:	de 01       	movw	r26, r28
    1b4c:	ac 56       	subi	r26, 0x6C	; 108
    1b4e:	bf 4f       	sbci	r27, 0xFF	; 255
    1b50:	fe 01       	movw	r30, r28
    1b52:	e8 56       	subi	r30, 0x68	; 104
    1b54:	ff 4f       	sbci	r31, 0xFF	; 255
    1b56:	80 81       	ld	r24, Z
    1b58:	91 81       	ldd	r25, Z+1	; 0x01
    1b5a:	11 96       	adiw	r26, 0x01	; 1
    1b5c:	9c 93       	st	X, r25
    1b5e:	8e 93       	st	-X, r24
    1b60:	fe 01       	movw	r30, r28
    1b62:	ec 56       	subi	r30, 0x6C	; 108
    1b64:	ff 4f       	sbci	r31, 0xFF	; 255
    1b66:	80 81       	ld	r24, Z
    1b68:	91 81       	ldd	r25, Z+1	; 0x01
    1b6a:	01 97       	sbiw	r24, 0x01	; 1
    1b6c:	f1 f7       	brne	.-4      	; 0x1b6a <main+0xa56>
    1b6e:	fe 01       	movw	r30, r28
    1b70:	ec 56       	subi	r30, 0x6C	; 108
    1b72:	ff 4f       	sbci	r31, 0xFF	; 255
    1b74:	91 83       	std	Z+1, r25	; 0x01
    1b76:	80 83       	st	Z, r24
    1b78:	22 c0       	rjmp	.+68     	; 0x1bbe <main+0xaaa>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1b7a:	8e 01       	movw	r16, r28
    1b7c:	0e 55       	subi	r16, 0x5E	; 94
    1b7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1b80:	fe 01       	movw	r30, r28
    1b82:	ed 55       	subi	r30, 0x5D	; 93
    1b84:	ff 4f       	sbci	r31, 0xFF	; 255
    1b86:	60 81       	ld	r22, Z
    1b88:	71 81       	ldd	r23, Z+1	; 0x01
    1b8a:	82 81       	ldd	r24, Z+2	; 0x02
    1b8c:	93 81       	ldd	r25, Z+3	; 0x03
    1b8e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b92:	dc 01       	movw	r26, r24
    1b94:	cb 01       	movw	r24, r22
    1b96:	f8 01       	movw	r30, r16
    1b98:	80 83       	st	Z, r24
    1b9a:	de 01       	movw	r26, r28
    1b9c:	ad 56       	subi	r26, 0x6D	; 109
    1b9e:	bf 4f       	sbci	r27, 0xFF	; 255
    1ba0:	fe 01       	movw	r30, r28
    1ba2:	ee 55       	subi	r30, 0x5E	; 94
    1ba4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba6:	80 81       	ld	r24, Z
    1ba8:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1baa:	fe 01       	movw	r30, r28
    1bac:	ed 56       	subi	r30, 0x6D	; 109
    1bae:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb0:	80 81       	ld	r24, Z
    1bb2:	8a 95       	dec	r24
    1bb4:	f1 f7       	brne	.-4      	; 0x1bb2 <main+0xa9e>
    1bb6:	fe 01       	movw	r30, r28
    1bb8:	ed 56       	subi	r30, 0x6D	; 109
    1bba:	ff 4f       	sbci	r31, 0xFF	; 255
    1bbc:	80 83       	st	Z, r24
		_delay_us(20);	 // wait for 20 us
		PORTA =(PORTA &(0XC0)) | (1<<1);    // enable fifth 7 segment
    1bbe:	ab e3       	ldi	r26, 0x3B	; 59
    1bc0:	b0 e0       	ldi	r27, 0x00	; 0
    1bc2:	eb e3       	ldi	r30, 0x3B	; 59
    1bc4:	f0 e0       	ldi	r31, 0x00	; 0
    1bc6:	80 81       	ld	r24, Z
    1bc8:	80 7c       	andi	r24, 0xC0	; 192
    1bca:	82 60       	ori	r24, 0x02	; 2
    1bcc:	8c 93       	st	X, r24
		PORTC =(PORTC &(0XF0)) | hour%10;	 // Display fifth digit of seconds
    1bce:	a5 e3       	ldi	r26, 0x35	; 53
    1bd0:	b0 e0       	ldi	r27, 0x00	; 0
    1bd2:	e5 e3       	ldi	r30, 0x35	; 53
    1bd4:	f0 e0       	ldi	r31, 0x00	; 0
    1bd6:	80 81       	ld	r24, Z
    1bd8:	28 2f       	mov	r18, r24
    1bda:	20 7f       	andi	r18, 0xF0	; 240
    1bdc:	80 91 6c 00 	lds	r24, 0x006C
    1be0:	9a e0       	ldi	r25, 0x0A	; 10
    1be2:	69 2f       	mov	r22, r25
    1be4:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__udivmodqi4>
    1be8:	89 2f       	mov	r24, r25
    1bea:	82 2b       	or	r24, r18
    1bec:	8c 93       	st	X, r24
    1bee:	fe 01       	movw	r30, r28
    1bf0:	e1 57       	subi	r30, 0x71	; 113
    1bf2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf4:	80 e0       	ldi	r24, 0x00	; 0
    1bf6:	90 e0       	ldi	r25, 0x00	; 0
    1bf8:	a0 ea       	ldi	r26, 0xA0	; 160
    1bfa:	b1 e4       	ldi	r27, 0x41	; 65
    1bfc:	80 83       	st	Z, r24
    1bfe:	91 83       	std	Z+1, r25	; 0x01
    1c00:	a2 83       	std	Z+2, r26	; 0x02
    1c02:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1c04:	8e 01       	movw	r16, r28
    1c06:	05 57       	subi	r16, 0x75	; 117
    1c08:	1f 4f       	sbci	r17, 0xFF	; 255
    1c0a:	fe 01       	movw	r30, r28
    1c0c:	e1 57       	subi	r30, 0x71	; 113
    1c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c10:	60 81       	ld	r22, Z
    1c12:	71 81       	ldd	r23, Z+1	; 0x01
    1c14:	82 81       	ldd	r24, Z+2	; 0x02
    1c16:	93 81       	ldd	r25, Z+3	; 0x03
    1c18:	2b ea       	ldi	r18, 0xAB	; 171
    1c1a:	3a ea       	ldi	r19, 0xAA	; 170
    1c1c:	4a ea       	ldi	r20, 0xAA	; 170
    1c1e:	50 e4       	ldi	r21, 0x40	; 64
    1c20:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c24:	dc 01       	movw	r26, r24
    1c26:	cb 01       	movw	r24, r22
    1c28:	f8 01       	movw	r30, r16
    1c2a:	80 83       	st	Z, r24
    1c2c:	91 83       	std	Z+1, r25	; 0x01
    1c2e:	a2 83       	std	Z+2, r26	; 0x02
    1c30:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c32:	fe 01       	movw	r30, r28
    1c34:	e5 57       	subi	r30, 0x75	; 117
    1c36:	ff 4f       	sbci	r31, 0xFF	; 255
    1c38:	60 81       	ld	r22, Z
    1c3a:	71 81       	ldd	r23, Z+1	; 0x01
    1c3c:	82 81       	ldd	r24, Z+2	; 0x02
    1c3e:	93 81       	ldd	r25, Z+3	; 0x03
    1c40:	20 e0       	ldi	r18, 0x00	; 0
    1c42:	30 e0       	ldi	r19, 0x00	; 0
    1c44:	40 e8       	ldi	r20, 0x80	; 128
    1c46:	5f e3       	ldi	r21, 0x3F	; 63
    1c48:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1c4c:	88 23       	and	r24, r24
    1c4e:	34 f4       	brge	.+12     	; 0x1c5c <main+0xb48>
		__ticks = 1;
    1c50:	fe 01       	movw	r30, r28
    1c52:	e6 57       	subi	r30, 0x76	; 118
    1c54:	ff 4f       	sbci	r31, 0xFF	; 255
    1c56:	81 e0       	ldi	r24, 0x01	; 1
    1c58:	80 83       	st	Z, r24
    1c5a:	e0 c0       	rjmp	.+448    	; 0x1e1c <main+0xd08>
	else if (__tmp > 255)
    1c5c:	fe 01       	movw	r30, r28
    1c5e:	e5 57       	subi	r30, 0x75	; 117
    1c60:	ff 4f       	sbci	r31, 0xFF	; 255
    1c62:	60 81       	ld	r22, Z
    1c64:	71 81       	ldd	r23, Z+1	; 0x01
    1c66:	82 81       	ldd	r24, Z+2	; 0x02
    1c68:	93 81       	ldd	r25, Z+3	; 0x03
    1c6a:	20 e0       	ldi	r18, 0x00	; 0
    1c6c:	30 e0       	ldi	r19, 0x00	; 0
    1c6e:	4f e7       	ldi	r20, 0x7F	; 127
    1c70:	53 e4       	ldi	r21, 0x43	; 67
    1c72:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1c76:	18 16       	cp	r1, r24
    1c78:	0c f0       	brlt	.+2      	; 0x1c7c <main+0xb68>
    1c7a:	c0 c0       	rjmp	.+384    	; 0x1dfc <main+0xce8>
	{
		_delay_ms(__us / 1000.0);
    1c7c:	fe 01       	movw	r30, r28
    1c7e:	e1 57       	subi	r30, 0x71	; 113
    1c80:	ff 4f       	sbci	r31, 0xFF	; 255
    1c82:	60 81       	ld	r22, Z
    1c84:	71 81       	ldd	r23, Z+1	; 0x01
    1c86:	82 81       	ldd	r24, Z+2	; 0x02
    1c88:	93 81       	ldd	r25, Z+3	; 0x03
    1c8a:	20 e0       	ldi	r18, 0x00	; 0
    1c8c:	30 e0       	ldi	r19, 0x00	; 0
    1c8e:	4a e7       	ldi	r20, 0x7A	; 122
    1c90:	54 e4       	ldi	r21, 0x44	; 68
    1c92:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1c96:	dc 01       	movw	r26, r24
    1c98:	cb 01       	movw	r24, r22
    1c9a:	fe 01       	movw	r30, r28
    1c9c:	ea 57       	subi	r30, 0x7A	; 122
    1c9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1ca0:	80 83       	st	Z, r24
    1ca2:	91 83       	std	Z+1, r25	; 0x01
    1ca4:	a2 83       	std	Z+2, r26	; 0x02
    1ca6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ca8:	8e 01       	movw	r16, r28
    1caa:	0e 57       	subi	r16, 0x7E	; 126
    1cac:	1f 4f       	sbci	r17, 0xFF	; 255
    1cae:	fe 01       	movw	r30, r28
    1cb0:	ea 57       	subi	r30, 0x7A	; 122
    1cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb4:	60 81       	ld	r22, Z
    1cb6:	71 81       	ldd	r23, Z+1	; 0x01
    1cb8:	82 81       	ldd	r24, Z+2	; 0x02
    1cba:	93 81       	ldd	r25, Z+3	; 0x03
    1cbc:	20 e0       	ldi	r18, 0x00	; 0
    1cbe:	30 e0       	ldi	r19, 0x00	; 0
    1cc0:	4a e7       	ldi	r20, 0x7A	; 122
    1cc2:	55 e4       	ldi	r21, 0x45	; 69
    1cc4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cc8:	dc 01       	movw	r26, r24
    1cca:	cb 01       	movw	r24, r22
    1ccc:	f8 01       	movw	r30, r16
    1cce:	80 83       	st	Z, r24
    1cd0:	91 83       	std	Z+1, r25	; 0x01
    1cd2:	a2 83       	std	Z+2, r26	; 0x02
    1cd4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1cd6:	fe 01       	movw	r30, r28
    1cd8:	ee 57       	subi	r30, 0x7E	; 126
    1cda:	ff 4f       	sbci	r31, 0xFF	; 255
    1cdc:	60 81       	ld	r22, Z
    1cde:	71 81       	ldd	r23, Z+1	; 0x01
    1ce0:	82 81       	ldd	r24, Z+2	; 0x02
    1ce2:	93 81       	ldd	r25, Z+3	; 0x03
    1ce4:	20 e0       	ldi	r18, 0x00	; 0
    1ce6:	30 e0       	ldi	r19, 0x00	; 0
    1ce8:	40 e8       	ldi	r20, 0x80	; 128
    1cea:	5f e3       	ldi	r21, 0x3F	; 63
    1cec:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1cf0:	88 23       	and	r24, r24
    1cf2:	44 f4       	brge	.+16     	; 0x1d04 <main+0xbf0>
		__ticks = 1;
    1cf4:	fe 01       	movw	r30, r28
    1cf6:	e0 58       	subi	r30, 0x80	; 128
    1cf8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cfa:	81 e0       	ldi	r24, 0x01	; 1
    1cfc:	90 e0       	ldi	r25, 0x00	; 0
    1cfe:	91 83       	std	Z+1, r25	; 0x01
    1d00:	80 83       	st	Z, r24
    1d02:	64 c0       	rjmp	.+200    	; 0x1dcc <main+0xcb8>
	else if (__tmp > 65535)
    1d04:	fe 01       	movw	r30, r28
    1d06:	ee 57       	subi	r30, 0x7E	; 126
    1d08:	ff 4f       	sbci	r31, 0xFF	; 255
    1d0a:	60 81       	ld	r22, Z
    1d0c:	71 81       	ldd	r23, Z+1	; 0x01
    1d0e:	82 81       	ldd	r24, Z+2	; 0x02
    1d10:	93 81       	ldd	r25, Z+3	; 0x03
    1d12:	20 e0       	ldi	r18, 0x00	; 0
    1d14:	3f ef       	ldi	r19, 0xFF	; 255
    1d16:	4f e7       	ldi	r20, 0x7F	; 127
    1d18:	57 e4       	ldi	r21, 0x47	; 71
    1d1a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1d1e:	18 16       	cp	r1, r24
    1d20:	0c f0       	brlt	.+2      	; 0x1d24 <main+0xc10>
    1d22:	43 c0       	rjmp	.+134    	; 0x1daa <main+0xc96>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d24:	fe 01       	movw	r30, r28
    1d26:	ea 57       	subi	r30, 0x7A	; 122
    1d28:	ff 4f       	sbci	r31, 0xFF	; 255
    1d2a:	60 81       	ld	r22, Z
    1d2c:	71 81       	ldd	r23, Z+1	; 0x01
    1d2e:	82 81       	ldd	r24, Z+2	; 0x02
    1d30:	93 81       	ldd	r25, Z+3	; 0x03
    1d32:	20 e0       	ldi	r18, 0x00	; 0
    1d34:	30 e0       	ldi	r19, 0x00	; 0
    1d36:	40 e2       	ldi	r20, 0x20	; 32
    1d38:	51 e4       	ldi	r21, 0x41	; 65
    1d3a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d3e:	dc 01       	movw	r26, r24
    1d40:	cb 01       	movw	r24, r22
    1d42:	8e 01       	movw	r16, r28
    1d44:	00 58       	subi	r16, 0x80	; 128
    1d46:	1f 4f       	sbci	r17, 0xFF	; 255
    1d48:	bc 01       	movw	r22, r24
    1d4a:	cd 01       	movw	r24, r26
    1d4c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d50:	dc 01       	movw	r26, r24
    1d52:	cb 01       	movw	r24, r22
    1d54:	f8 01       	movw	r30, r16
    1d56:	91 83       	std	Z+1, r25	; 0x01
    1d58:	80 83       	st	Z, r24
    1d5a:	1f c0       	rjmp	.+62     	; 0x1d9a <main+0xc86>
    1d5c:	fe 01       	movw	r30, r28
    1d5e:	e2 58       	subi	r30, 0x82	; 130
    1d60:	ff 4f       	sbci	r31, 0xFF	; 255
    1d62:	80 e9       	ldi	r24, 0x90	; 144
    1d64:	91 e0       	ldi	r25, 0x01	; 1
    1d66:	91 83       	std	Z+1, r25	; 0x01
    1d68:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1d6a:	fe 01       	movw	r30, r28
    1d6c:	e2 58       	subi	r30, 0x82	; 130
    1d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d70:	80 81       	ld	r24, Z
    1d72:	91 81       	ldd	r25, Z+1	; 0x01
    1d74:	01 97       	sbiw	r24, 0x01	; 1
    1d76:	f1 f7       	brne	.-4      	; 0x1d74 <main+0xc60>
    1d78:	fe 01       	movw	r30, r28
    1d7a:	e2 58       	subi	r30, 0x82	; 130
    1d7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7e:	91 83       	std	Z+1, r25	; 0x01
    1d80:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d82:	de 01       	movw	r26, r28
    1d84:	a0 58       	subi	r26, 0x80	; 128
    1d86:	bf 4f       	sbci	r27, 0xFF	; 255
    1d88:	fe 01       	movw	r30, r28
    1d8a:	e0 58       	subi	r30, 0x80	; 128
    1d8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d8e:	80 81       	ld	r24, Z
    1d90:	91 81       	ldd	r25, Z+1	; 0x01
    1d92:	01 97       	sbiw	r24, 0x01	; 1
    1d94:	11 96       	adiw	r26, 0x01	; 1
    1d96:	9c 93       	st	X, r25
    1d98:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d9a:	fe 01       	movw	r30, r28
    1d9c:	e0 58       	subi	r30, 0x80	; 128
    1d9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1da0:	80 81       	ld	r24, Z
    1da2:	91 81       	ldd	r25, Z+1	; 0x01
    1da4:	00 97       	sbiw	r24, 0x00	; 0
    1da6:	d1 f6       	brne	.-76     	; 0x1d5c <main+0xc48>
    1da8:	4b c0       	rjmp	.+150    	; 0x1e40 <main+0xd2c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1daa:	8e 01       	movw	r16, r28
    1dac:	00 58       	subi	r16, 0x80	; 128
    1dae:	1f 4f       	sbci	r17, 0xFF	; 255
    1db0:	fe 01       	movw	r30, r28
    1db2:	ee 57       	subi	r30, 0x7E	; 126
    1db4:	ff 4f       	sbci	r31, 0xFF	; 255
    1db6:	60 81       	ld	r22, Z
    1db8:	71 81       	ldd	r23, Z+1	; 0x01
    1dba:	82 81       	ldd	r24, Z+2	; 0x02
    1dbc:	93 81       	ldd	r25, Z+3	; 0x03
    1dbe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1dc2:	dc 01       	movw	r26, r24
    1dc4:	cb 01       	movw	r24, r22
    1dc6:	f8 01       	movw	r30, r16
    1dc8:	91 83       	std	Z+1, r25	; 0x01
    1dca:	80 83       	st	Z, r24
    1dcc:	de 01       	movw	r26, r28
    1dce:	a4 58       	subi	r26, 0x84	; 132
    1dd0:	bf 4f       	sbci	r27, 0xFF	; 255
    1dd2:	fe 01       	movw	r30, r28
    1dd4:	e0 58       	subi	r30, 0x80	; 128
    1dd6:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd8:	80 81       	ld	r24, Z
    1dda:	91 81       	ldd	r25, Z+1	; 0x01
    1ddc:	11 96       	adiw	r26, 0x01	; 1
    1dde:	9c 93       	st	X, r25
    1de0:	8e 93       	st	-X, r24
    1de2:	fe 01       	movw	r30, r28
    1de4:	e4 58       	subi	r30, 0x84	; 132
    1de6:	ff 4f       	sbci	r31, 0xFF	; 255
    1de8:	80 81       	ld	r24, Z
    1dea:	91 81       	ldd	r25, Z+1	; 0x01
    1dec:	01 97       	sbiw	r24, 0x01	; 1
    1dee:	f1 f7       	brne	.-4      	; 0x1dec <main+0xcd8>
    1df0:	fe 01       	movw	r30, r28
    1df2:	e4 58       	subi	r30, 0x84	; 132
    1df4:	ff 4f       	sbci	r31, 0xFF	; 255
    1df6:	91 83       	std	Z+1, r25	; 0x01
    1df8:	80 83       	st	Z, r24
    1dfa:	22 c0       	rjmp	.+68     	; 0x1e40 <main+0xd2c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1dfc:	8e 01       	movw	r16, r28
    1dfe:	06 57       	subi	r16, 0x76	; 118
    1e00:	1f 4f       	sbci	r17, 0xFF	; 255
    1e02:	fe 01       	movw	r30, r28
    1e04:	e5 57       	subi	r30, 0x75	; 117
    1e06:	ff 4f       	sbci	r31, 0xFF	; 255
    1e08:	60 81       	ld	r22, Z
    1e0a:	71 81       	ldd	r23, Z+1	; 0x01
    1e0c:	82 81       	ldd	r24, Z+2	; 0x02
    1e0e:	93 81       	ldd	r25, Z+3	; 0x03
    1e10:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e14:	dc 01       	movw	r26, r24
    1e16:	cb 01       	movw	r24, r22
    1e18:	f8 01       	movw	r30, r16
    1e1a:	80 83       	st	Z, r24
    1e1c:	de 01       	movw	r26, r28
    1e1e:	a5 58       	subi	r26, 0x85	; 133
    1e20:	bf 4f       	sbci	r27, 0xFF	; 255
    1e22:	fe 01       	movw	r30, r28
    1e24:	e6 57       	subi	r30, 0x76	; 118
    1e26:	ff 4f       	sbci	r31, 0xFF	; 255
    1e28:	80 81       	ld	r24, Z
    1e2a:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1e2c:	fe 01       	movw	r30, r28
    1e2e:	e5 58       	subi	r30, 0x85	; 133
    1e30:	ff 4f       	sbci	r31, 0xFF	; 255
    1e32:	80 81       	ld	r24, Z
    1e34:	8a 95       	dec	r24
    1e36:	f1 f7       	brne	.-4      	; 0x1e34 <main+0xd20>
    1e38:	fe 01       	movw	r30, r28
    1e3a:	e5 58       	subi	r30, 0x85	; 133
    1e3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e3e:	80 83       	st	Z, r24
		_delay_us(20);	 // wait for 20 us
		PORTA =(PORTA &(0XC0)) | (1<<0);    // enable sixth 7 segment
    1e40:	ab e3       	ldi	r26, 0x3B	; 59
    1e42:	b0 e0       	ldi	r27, 0x00	; 0
    1e44:	eb e3       	ldi	r30, 0x3B	; 59
    1e46:	f0 e0       	ldi	r31, 0x00	; 0
    1e48:	80 81       	ld	r24, Z
    1e4a:	80 7c       	andi	r24, 0xC0	; 192
    1e4c:	81 60       	ori	r24, 0x01	; 1
    1e4e:	8c 93       	st	X, r24
		PORTC = (PORTC &(0XF0)) |hour/10;	 // Display sixth digit of seconds
    1e50:	a5 e3       	ldi	r26, 0x35	; 53
    1e52:	b0 e0       	ldi	r27, 0x00	; 0
    1e54:	e5 e3       	ldi	r30, 0x35	; 53
    1e56:	f0 e0       	ldi	r31, 0x00	; 0
    1e58:	80 81       	ld	r24, Z
    1e5a:	28 2f       	mov	r18, r24
    1e5c:	20 7f       	andi	r18, 0xF0	; 240
    1e5e:	80 91 6c 00 	lds	r24, 0x006C
    1e62:	9a e0       	ldi	r25, 0x0A	; 10
    1e64:	69 2f       	mov	r22, r25
    1e66:	0e 94 dd 14 	call	0x29ba	; 0x29ba <__udivmodqi4>
    1e6a:	82 2b       	or	r24, r18
    1e6c:	8c 93       	st	X, r24
    1e6e:	fe 01       	movw	r30, r28
    1e70:	e9 58       	subi	r30, 0x89	; 137
    1e72:	ff 4f       	sbci	r31, 0xFF	; 255
    1e74:	80 e0       	ldi	r24, 0x00	; 0
    1e76:	90 e0       	ldi	r25, 0x00	; 0
    1e78:	a0 ea       	ldi	r26, 0xA0	; 160
    1e7a:	b1 e4       	ldi	r27, 0x41	; 65
    1e7c:	80 83       	st	Z, r24
    1e7e:	91 83       	std	Z+1, r25	; 0x01
    1e80:	a2 83       	std	Z+2, r26	; 0x02
    1e82:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1e84:	8e 01       	movw	r16, r28
    1e86:	0d 58       	subi	r16, 0x8D	; 141
    1e88:	1f 4f       	sbci	r17, 0xFF	; 255
    1e8a:	fe 01       	movw	r30, r28
    1e8c:	e9 58       	subi	r30, 0x89	; 137
    1e8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e90:	60 81       	ld	r22, Z
    1e92:	71 81       	ldd	r23, Z+1	; 0x01
    1e94:	82 81       	ldd	r24, Z+2	; 0x02
    1e96:	93 81       	ldd	r25, Z+3	; 0x03
    1e98:	2b ea       	ldi	r18, 0xAB	; 171
    1e9a:	3a ea       	ldi	r19, 0xAA	; 170
    1e9c:	4a ea       	ldi	r20, 0xAA	; 170
    1e9e:	50 e4       	ldi	r21, 0x40	; 64
    1ea0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ea4:	dc 01       	movw	r26, r24
    1ea6:	cb 01       	movw	r24, r22
    1ea8:	f8 01       	movw	r30, r16
    1eaa:	80 83       	st	Z, r24
    1eac:	91 83       	std	Z+1, r25	; 0x01
    1eae:	a2 83       	std	Z+2, r26	; 0x02
    1eb0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1eb2:	fe 01       	movw	r30, r28
    1eb4:	ed 58       	subi	r30, 0x8D	; 141
    1eb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb8:	60 81       	ld	r22, Z
    1eba:	71 81       	ldd	r23, Z+1	; 0x01
    1ebc:	82 81       	ldd	r24, Z+2	; 0x02
    1ebe:	93 81       	ldd	r25, Z+3	; 0x03
    1ec0:	20 e0       	ldi	r18, 0x00	; 0
    1ec2:	30 e0       	ldi	r19, 0x00	; 0
    1ec4:	40 e8       	ldi	r20, 0x80	; 128
    1ec6:	5f e3       	ldi	r21, 0x3F	; 63
    1ec8:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1ecc:	88 23       	and	r24, r24
    1ece:	34 f4       	brge	.+12     	; 0x1edc <main+0xdc8>
		__ticks = 1;
    1ed0:	fe 01       	movw	r30, r28
    1ed2:	ee 58       	subi	r30, 0x8E	; 142
    1ed4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed6:	81 e0       	ldi	r24, 0x01	; 1
    1ed8:	80 83       	st	Z, r24
    1eda:	e0 c0       	rjmp	.+448    	; 0x209c <main+0xf88>
	else if (__tmp > 255)
    1edc:	fe 01       	movw	r30, r28
    1ede:	ed 58       	subi	r30, 0x8D	; 141
    1ee0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee2:	60 81       	ld	r22, Z
    1ee4:	71 81       	ldd	r23, Z+1	; 0x01
    1ee6:	82 81       	ldd	r24, Z+2	; 0x02
    1ee8:	93 81       	ldd	r25, Z+3	; 0x03
    1eea:	20 e0       	ldi	r18, 0x00	; 0
    1eec:	30 e0       	ldi	r19, 0x00	; 0
    1eee:	4f e7       	ldi	r20, 0x7F	; 127
    1ef0:	53 e4       	ldi	r21, 0x43	; 67
    1ef2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1ef6:	18 16       	cp	r1, r24
    1ef8:	0c f0       	brlt	.+2      	; 0x1efc <main+0xde8>
    1efa:	c0 c0       	rjmp	.+384    	; 0x207c <main+0xf68>
	{
		_delay_ms(__us / 1000.0);
    1efc:	fe 01       	movw	r30, r28
    1efe:	e9 58       	subi	r30, 0x89	; 137
    1f00:	ff 4f       	sbci	r31, 0xFF	; 255
    1f02:	60 81       	ld	r22, Z
    1f04:	71 81       	ldd	r23, Z+1	; 0x01
    1f06:	82 81       	ldd	r24, Z+2	; 0x02
    1f08:	93 81       	ldd	r25, Z+3	; 0x03
    1f0a:	20 e0       	ldi	r18, 0x00	; 0
    1f0c:	30 e0       	ldi	r19, 0x00	; 0
    1f0e:	4a e7       	ldi	r20, 0x7A	; 122
    1f10:	54 e4       	ldi	r21, 0x44	; 68
    1f12:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1f16:	dc 01       	movw	r26, r24
    1f18:	cb 01       	movw	r24, r22
    1f1a:	fe 01       	movw	r30, r28
    1f1c:	e2 59       	subi	r30, 0x92	; 146
    1f1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f20:	80 83       	st	Z, r24
    1f22:	91 83       	std	Z+1, r25	; 0x01
    1f24:	a2 83       	std	Z+2, r26	; 0x02
    1f26:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f28:	8e 01       	movw	r16, r28
    1f2a:	06 59       	subi	r16, 0x96	; 150
    1f2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f2e:	fe 01       	movw	r30, r28
    1f30:	e2 59       	subi	r30, 0x92	; 146
    1f32:	ff 4f       	sbci	r31, 0xFF	; 255
    1f34:	60 81       	ld	r22, Z
    1f36:	71 81       	ldd	r23, Z+1	; 0x01
    1f38:	82 81       	ldd	r24, Z+2	; 0x02
    1f3a:	93 81       	ldd	r25, Z+3	; 0x03
    1f3c:	20 e0       	ldi	r18, 0x00	; 0
    1f3e:	30 e0       	ldi	r19, 0x00	; 0
    1f40:	4a e7       	ldi	r20, 0x7A	; 122
    1f42:	55 e4       	ldi	r21, 0x45	; 69
    1f44:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f48:	dc 01       	movw	r26, r24
    1f4a:	cb 01       	movw	r24, r22
    1f4c:	f8 01       	movw	r30, r16
    1f4e:	80 83       	st	Z, r24
    1f50:	91 83       	std	Z+1, r25	; 0x01
    1f52:	a2 83       	std	Z+2, r26	; 0x02
    1f54:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f56:	fe 01       	movw	r30, r28
    1f58:	e6 59       	subi	r30, 0x96	; 150
    1f5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5c:	60 81       	ld	r22, Z
    1f5e:	71 81       	ldd	r23, Z+1	; 0x01
    1f60:	82 81       	ldd	r24, Z+2	; 0x02
    1f62:	93 81       	ldd	r25, Z+3	; 0x03
    1f64:	20 e0       	ldi	r18, 0x00	; 0
    1f66:	30 e0       	ldi	r19, 0x00	; 0
    1f68:	40 e8       	ldi	r20, 0x80	; 128
    1f6a:	5f e3       	ldi	r21, 0x3F	; 63
    1f6c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1f70:	88 23       	and	r24, r24
    1f72:	44 f4       	brge	.+16     	; 0x1f84 <main+0xe70>
		__ticks = 1;
    1f74:	fe 01       	movw	r30, r28
    1f76:	e8 59       	subi	r30, 0x98	; 152
    1f78:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7a:	81 e0       	ldi	r24, 0x01	; 1
    1f7c:	90 e0       	ldi	r25, 0x00	; 0
    1f7e:	91 83       	std	Z+1, r25	; 0x01
    1f80:	80 83       	st	Z, r24
    1f82:	64 c0       	rjmp	.+200    	; 0x204c <main+0xf38>
	else if (__tmp > 65535)
    1f84:	fe 01       	movw	r30, r28
    1f86:	e6 59       	subi	r30, 0x96	; 150
    1f88:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8a:	60 81       	ld	r22, Z
    1f8c:	71 81       	ldd	r23, Z+1	; 0x01
    1f8e:	82 81       	ldd	r24, Z+2	; 0x02
    1f90:	93 81       	ldd	r25, Z+3	; 0x03
    1f92:	20 e0       	ldi	r18, 0x00	; 0
    1f94:	3f ef       	ldi	r19, 0xFF	; 255
    1f96:	4f e7       	ldi	r20, 0x7F	; 127
    1f98:	57 e4       	ldi	r21, 0x47	; 71
    1f9a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1f9e:	18 16       	cp	r1, r24
    1fa0:	0c f0       	brlt	.+2      	; 0x1fa4 <main+0xe90>
    1fa2:	43 c0       	rjmp	.+134    	; 0x202a <main+0xf16>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fa4:	fe 01       	movw	r30, r28
    1fa6:	e2 59       	subi	r30, 0x92	; 146
    1fa8:	ff 4f       	sbci	r31, 0xFF	; 255
    1faa:	60 81       	ld	r22, Z
    1fac:	71 81       	ldd	r23, Z+1	; 0x01
    1fae:	82 81       	ldd	r24, Z+2	; 0x02
    1fb0:	93 81       	ldd	r25, Z+3	; 0x03
    1fb2:	20 e0       	ldi	r18, 0x00	; 0
    1fb4:	30 e0       	ldi	r19, 0x00	; 0
    1fb6:	40 e2       	ldi	r20, 0x20	; 32
    1fb8:	51 e4       	ldi	r21, 0x41	; 65
    1fba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1fbe:	dc 01       	movw	r26, r24
    1fc0:	cb 01       	movw	r24, r22
    1fc2:	8e 01       	movw	r16, r28
    1fc4:	08 59       	subi	r16, 0x98	; 152
    1fc6:	1f 4f       	sbci	r17, 0xFF	; 255
    1fc8:	bc 01       	movw	r22, r24
    1fca:	cd 01       	movw	r24, r26
    1fcc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fd0:	dc 01       	movw	r26, r24
    1fd2:	cb 01       	movw	r24, r22
    1fd4:	f8 01       	movw	r30, r16
    1fd6:	91 83       	std	Z+1, r25	; 0x01
    1fd8:	80 83       	st	Z, r24
    1fda:	1f c0       	rjmp	.+62     	; 0x201a <main+0xf06>
    1fdc:	fe 01       	movw	r30, r28
    1fde:	ea 59       	subi	r30, 0x9A	; 154
    1fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe2:	80 e9       	ldi	r24, 0x90	; 144
    1fe4:	91 e0       	ldi	r25, 0x01	; 1
    1fe6:	91 83       	std	Z+1, r25	; 0x01
    1fe8:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1fea:	fe 01       	movw	r30, r28
    1fec:	ea 59       	subi	r30, 0x9A	; 154
    1fee:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff0:	80 81       	ld	r24, Z
    1ff2:	91 81       	ldd	r25, Z+1	; 0x01
    1ff4:	01 97       	sbiw	r24, 0x01	; 1
    1ff6:	f1 f7       	brne	.-4      	; 0x1ff4 <main+0xee0>
    1ff8:	fe 01       	movw	r30, r28
    1ffa:	ea 59       	subi	r30, 0x9A	; 154
    1ffc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ffe:	91 83       	std	Z+1, r25	; 0x01
    2000:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2002:	de 01       	movw	r26, r28
    2004:	a8 59       	subi	r26, 0x98	; 152
    2006:	bf 4f       	sbci	r27, 0xFF	; 255
    2008:	fe 01       	movw	r30, r28
    200a:	e8 59       	subi	r30, 0x98	; 152
    200c:	ff 4f       	sbci	r31, 0xFF	; 255
    200e:	80 81       	ld	r24, Z
    2010:	91 81       	ldd	r25, Z+1	; 0x01
    2012:	01 97       	sbiw	r24, 0x01	; 1
    2014:	11 96       	adiw	r26, 0x01	; 1
    2016:	9c 93       	st	X, r25
    2018:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    201a:	fe 01       	movw	r30, r28
    201c:	e8 59       	subi	r30, 0x98	; 152
    201e:	ff 4f       	sbci	r31, 0xFF	; 255
    2020:	80 81       	ld	r24, Z
    2022:	91 81       	ldd	r25, Z+1	; 0x01
    2024:	00 97       	sbiw	r24, 0x00	; 0
    2026:	d1 f6       	brne	.-76     	; 0x1fdc <main+0xec8>
    2028:	4b c0       	rjmp	.+150    	; 0x20c0 <main+0xfac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    202a:	8e 01       	movw	r16, r28
    202c:	08 59       	subi	r16, 0x98	; 152
    202e:	1f 4f       	sbci	r17, 0xFF	; 255
    2030:	fe 01       	movw	r30, r28
    2032:	e6 59       	subi	r30, 0x96	; 150
    2034:	ff 4f       	sbci	r31, 0xFF	; 255
    2036:	60 81       	ld	r22, Z
    2038:	71 81       	ldd	r23, Z+1	; 0x01
    203a:	82 81       	ldd	r24, Z+2	; 0x02
    203c:	93 81       	ldd	r25, Z+3	; 0x03
    203e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2042:	dc 01       	movw	r26, r24
    2044:	cb 01       	movw	r24, r22
    2046:	f8 01       	movw	r30, r16
    2048:	91 83       	std	Z+1, r25	; 0x01
    204a:	80 83       	st	Z, r24
    204c:	de 01       	movw	r26, r28
    204e:	ac 59       	subi	r26, 0x9C	; 156
    2050:	bf 4f       	sbci	r27, 0xFF	; 255
    2052:	fe 01       	movw	r30, r28
    2054:	e8 59       	subi	r30, 0x98	; 152
    2056:	ff 4f       	sbci	r31, 0xFF	; 255
    2058:	80 81       	ld	r24, Z
    205a:	91 81       	ldd	r25, Z+1	; 0x01
    205c:	11 96       	adiw	r26, 0x01	; 1
    205e:	9c 93       	st	X, r25
    2060:	8e 93       	st	-X, r24
    2062:	fe 01       	movw	r30, r28
    2064:	ec 59       	subi	r30, 0x9C	; 156
    2066:	ff 4f       	sbci	r31, 0xFF	; 255
    2068:	80 81       	ld	r24, Z
    206a:	91 81       	ldd	r25, Z+1	; 0x01
    206c:	01 97       	sbiw	r24, 0x01	; 1
    206e:	f1 f7       	brne	.-4      	; 0x206c <main+0xf58>
    2070:	fe 01       	movw	r30, r28
    2072:	ec 59       	subi	r30, 0x9C	; 156
    2074:	ff 4f       	sbci	r31, 0xFF	; 255
    2076:	91 83       	std	Z+1, r25	; 0x01
    2078:	80 83       	st	Z, r24
    207a:	22 c0       	rjmp	.+68     	; 0x20c0 <main+0xfac>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    207c:	8e 01       	movw	r16, r28
    207e:	0e 58       	subi	r16, 0x8E	; 142
    2080:	1f 4f       	sbci	r17, 0xFF	; 255
    2082:	fe 01       	movw	r30, r28
    2084:	ed 58       	subi	r30, 0x8D	; 141
    2086:	ff 4f       	sbci	r31, 0xFF	; 255
    2088:	60 81       	ld	r22, Z
    208a:	71 81       	ldd	r23, Z+1	; 0x01
    208c:	82 81       	ldd	r24, Z+2	; 0x02
    208e:	93 81       	ldd	r25, Z+3	; 0x03
    2090:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2094:	dc 01       	movw	r26, r24
    2096:	cb 01       	movw	r24, r22
    2098:	f8 01       	movw	r30, r16
    209a:	80 83       	st	Z, r24
    209c:	de 01       	movw	r26, r28
    209e:	ad 59       	subi	r26, 0x9D	; 157
    20a0:	bf 4f       	sbci	r27, 0xFF	; 255
    20a2:	fe 01       	movw	r30, r28
    20a4:	ee 58       	subi	r30, 0x8E	; 142
    20a6:	ff 4f       	sbci	r31, 0xFF	; 255
    20a8:	80 81       	ld	r24, Z
    20aa:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    20ac:	fe 01       	movw	r30, r28
    20ae:	ed 59       	subi	r30, 0x9D	; 157
    20b0:	ff 4f       	sbci	r31, 0xFF	; 255
    20b2:	80 81       	ld	r24, Z
    20b4:	8a 95       	dec	r24
    20b6:	f1 f7       	brne	.-4      	; 0x20b4 <main+0xfa0>
    20b8:	fe 01       	movw	r30, r28
    20ba:	ed 59       	subi	r30, 0x9D	; 157
    20bc:	ff 4f       	sbci	r31, 0xFF	; 255
    20be:	80 83       	st	Z, r24
		_delay_us(20);	 // wait for 20 us
		if(!(PINB & (1<<7))) // check if the push button  is pressed or not
    20c0:	e6 e3       	ldi	r30, 0x36	; 54
    20c2:	f0 e0       	ldi	r31, 0x00	; 0
    20c4:	80 81       	ld	r24, Z
    20c6:	88 23       	and	r24, r24
    20c8:	0c f4       	brge	.+2      	; 0x20cc <main+0xfb8>
    20ca:	bb c0       	rjmp	.+374    	; 0x2242 <main+0x112e>
    20cc:	fe 01       	movw	r30, r28
    20ce:	e1 5a       	subi	r30, 0xA1	; 161
    20d0:	ff 4f       	sbci	r31, 0xFF	; 255
    20d2:	80 e0       	ldi	r24, 0x00	; 0
    20d4:	90 e0       	ldi	r25, 0x00	; 0
    20d6:	a0 ea       	ldi	r26, 0xA0	; 160
    20d8:	b1 e4       	ldi	r27, 0x41	; 65
    20da:	80 83       	st	Z, r24
    20dc:	91 83       	std	Z+1, r25	; 0x01
    20de:	a2 83       	std	Z+2, r26	; 0x02
    20e0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20e2:	8e 01       	movw	r16, r28
    20e4:	05 5a       	subi	r16, 0xA5	; 165
    20e6:	1f 4f       	sbci	r17, 0xFF	; 255
    20e8:	fe 01       	movw	r30, r28
    20ea:	e1 5a       	subi	r30, 0xA1	; 161
    20ec:	ff 4f       	sbci	r31, 0xFF	; 255
    20ee:	60 81       	ld	r22, Z
    20f0:	71 81       	ldd	r23, Z+1	; 0x01
    20f2:	82 81       	ldd	r24, Z+2	; 0x02
    20f4:	93 81       	ldd	r25, Z+3	; 0x03
    20f6:	20 e0       	ldi	r18, 0x00	; 0
    20f8:	30 e0       	ldi	r19, 0x00	; 0
    20fa:	4a e7       	ldi	r20, 0x7A	; 122
    20fc:	55 e4       	ldi	r21, 0x45	; 69
    20fe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2102:	dc 01       	movw	r26, r24
    2104:	cb 01       	movw	r24, r22
    2106:	f8 01       	movw	r30, r16
    2108:	80 83       	st	Z, r24
    210a:	91 83       	std	Z+1, r25	; 0x01
    210c:	a2 83       	std	Z+2, r26	; 0x02
    210e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2110:	fe 01       	movw	r30, r28
    2112:	e5 5a       	subi	r30, 0xA5	; 165
    2114:	ff 4f       	sbci	r31, 0xFF	; 255
    2116:	60 81       	ld	r22, Z
    2118:	71 81       	ldd	r23, Z+1	; 0x01
    211a:	82 81       	ldd	r24, Z+2	; 0x02
    211c:	93 81       	ldd	r25, Z+3	; 0x03
    211e:	20 e0       	ldi	r18, 0x00	; 0
    2120:	30 e0       	ldi	r19, 0x00	; 0
    2122:	40 e8       	ldi	r20, 0x80	; 128
    2124:	5f e3       	ldi	r21, 0x3F	; 63
    2126:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    212a:	88 23       	and	r24, r24
    212c:	44 f4       	brge	.+16     	; 0x213e <main+0x102a>
		__ticks = 1;
    212e:	fe 01       	movw	r30, r28
    2130:	e7 5a       	subi	r30, 0xA7	; 167
    2132:	ff 4f       	sbci	r31, 0xFF	; 255
    2134:	81 e0       	ldi	r24, 0x01	; 1
    2136:	90 e0       	ldi	r25, 0x00	; 0
    2138:	91 83       	std	Z+1, r25	; 0x01
    213a:	80 83       	st	Z, r24
    213c:	64 c0       	rjmp	.+200    	; 0x2206 <main+0x10f2>
	else if (__tmp > 65535)
    213e:	fe 01       	movw	r30, r28
    2140:	e5 5a       	subi	r30, 0xA5	; 165
    2142:	ff 4f       	sbci	r31, 0xFF	; 255
    2144:	60 81       	ld	r22, Z
    2146:	71 81       	ldd	r23, Z+1	; 0x01
    2148:	82 81       	ldd	r24, Z+2	; 0x02
    214a:	93 81       	ldd	r25, Z+3	; 0x03
    214c:	20 e0       	ldi	r18, 0x00	; 0
    214e:	3f ef       	ldi	r19, 0xFF	; 255
    2150:	4f e7       	ldi	r20, 0x7F	; 127
    2152:	57 e4       	ldi	r21, 0x47	; 71
    2154:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2158:	18 16       	cp	r1, r24
    215a:	0c f0       	brlt	.+2      	; 0x215e <main+0x104a>
    215c:	43 c0       	rjmp	.+134    	; 0x21e4 <main+0x10d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    215e:	fe 01       	movw	r30, r28
    2160:	e1 5a       	subi	r30, 0xA1	; 161
    2162:	ff 4f       	sbci	r31, 0xFF	; 255
    2164:	60 81       	ld	r22, Z
    2166:	71 81       	ldd	r23, Z+1	; 0x01
    2168:	82 81       	ldd	r24, Z+2	; 0x02
    216a:	93 81       	ldd	r25, Z+3	; 0x03
    216c:	20 e0       	ldi	r18, 0x00	; 0
    216e:	30 e0       	ldi	r19, 0x00	; 0
    2170:	40 e2       	ldi	r20, 0x20	; 32
    2172:	51 e4       	ldi	r21, 0x41	; 65
    2174:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2178:	dc 01       	movw	r26, r24
    217a:	cb 01       	movw	r24, r22
    217c:	8e 01       	movw	r16, r28
    217e:	07 5a       	subi	r16, 0xA7	; 167
    2180:	1f 4f       	sbci	r17, 0xFF	; 255
    2182:	bc 01       	movw	r22, r24
    2184:	cd 01       	movw	r24, r26
    2186:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    218a:	dc 01       	movw	r26, r24
    218c:	cb 01       	movw	r24, r22
    218e:	f8 01       	movw	r30, r16
    2190:	91 83       	std	Z+1, r25	; 0x01
    2192:	80 83       	st	Z, r24
    2194:	1f c0       	rjmp	.+62     	; 0x21d4 <main+0x10c0>
    2196:	fe 01       	movw	r30, r28
    2198:	e9 5a       	subi	r30, 0xA9	; 169
    219a:	ff 4f       	sbci	r31, 0xFF	; 255
    219c:	80 e9       	ldi	r24, 0x90	; 144
    219e:	91 e0       	ldi	r25, 0x01	; 1
    21a0:	91 83       	std	Z+1, r25	; 0x01
    21a2:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    21a4:	fe 01       	movw	r30, r28
    21a6:	e9 5a       	subi	r30, 0xA9	; 169
    21a8:	ff 4f       	sbci	r31, 0xFF	; 255
    21aa:	80 81       	ld	r24, Z
    21ac:	91 81       	ldd	r25, Z+1	; 0x01
    21ae:	01 97       	sbiw	r24, 0x01	; 1
    21b0:	f1 f7       	brne	.-4      	; 0x21ae <main+0x109a>
    21b2:	fe 01       	movw	r30, r28
    21b4:	e9 5a       	subi	r30, 0xA9	; 169
    21b6:	ff 4f       	sbci	r31, 0xFF	; 255
    21b8:	91 83       	std	Z+1, r25	; 0x01
    21ba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21bc:	de 01       	movw	r26, r28
    21be:	a7 5a       	subi	r26, 0xA7	; 167
    21c0:	bf 4f       	sbci	r27, 0xFF	; 255
    21c2:	fe 01       	movw	r30, r28
    21c4:	e7 5a       	subi	r30, 0xA7	; 167
    21c6:	ff 4f       	sbci	r31, 0xFF	; 255
    21c8:	80 81       	ld	r24, Z
    21ca:	91 81       	ldd	r25, Z+1	; 0x01
    21cc:	01 97       	sbiw	r24, 0x01	; 1
    21ce:	11 96       	adiw	r26, 0x01	; 1
    21d0:	9c 93       	st	X, r25
    21d2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21d4:	fe 01       	movw	r30, r28
    21d6:	e7 5a       	subi	r30, 0xA7	; 167
    21d8:	ff 4f       	sbci	r31, 0xFF	; 255
    21da:	80 81       	ld	r24, Z
    21dc:	91 81       	ldd	r25, Z+1	; 0x01
    21de:	00 97       	sbiw	r24, 0x00	; 0
    21e0:	d1 f6       	brne	.-76     	; 0x2196 <main+0x1082>
    21e2:	28 c0       	rjmp	.+80     	; 0x2234 <main+0x1120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21e4:	8e 01       	movw	r16, r28
    21e6:	07 5a       	subi	r16, 0xA7	; 167
    21e8:	1f 4f       	sbci	r17, 0xFF	; 255
    21ea:	fe 01       	movw	r30, r28
    21ec:	e5 5a       	subi	r30, 0xA5	; 165
    21ee:	ff 4f       	sbci	r31, 0xFF	; 255
    21f0:	60 81       	ld	r22, Z
    21f2:	71 81       	ldd	r23, Z+1	; 0x01
    21f4:	82 81       	ldd	r24, Z+2	; 0x02
    21f6:	93 81       	ldd	r25, Z+3	; 0x03
    21f8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    21fc:	dc 01       	movw	r26, r24
    21fe:	cb 01       	movw	r24, r22
    2200:	f8 01       	movw	r30, r16
    2202:	91 83       	std	Z+1, r25	; 0x01
    2204:	80 83       	st	Z, r24
    2206:	de 01       	movw	r26, r28
    2208:	ab 5a       	subi	r26, 0xAB	; 171
    220a:	bf 4f       	sbci	r27, 0xFF	; 255
    220c:	fe 01       	movw	r30, r28
    220e:	e7 5a       	subi	r30, 0xA7	; 167
    2210:	ff 4f       	sbci	r31, 0xFF	; 255
    2212:	80 81       	ld	r24, Z
    2214:	91 81       	ldd	r25, Z+1	; 0x01
    2216:	11 96       	adiw	r26, 0x01	; 1
    2218:	9c 93       	st	X, r25
    221a:	8e 93       	st	-X, r24
    221c:	fe 01       	movw	r30, r28
    221e:	eb 5a       	subi	r30, 0xAB	; 171
    2220:	ff 4f       	sbci	r31, 0xFF	; 255
    2222:	80 81       	ld	r24, Z
    2224:	91 81       	ldd	r25, Z+1	; 0x01
    2226:	01 97       	sbiw	r24, 0x01	; 1
    2228:	f1 f7       	brne	.-4      	; 0x2226 <main+0x1112>
    222a:	fe 01       	movw	r30, r28
    222c:	eb 5a       	subi	r30, 0xAB	; 171
    222e:	ff 4f       	sbci	r31, 0xFF	; 255
    2230:	91 83       	std	Z+1, r25	; 0x01
    2232:	80 83       	st	Z, r24
		{
			_delay_ms(20);
			if(!(PINB & (1<<7))) //second check due to switch de-bouncing
    2234:	e6 e3       	ldi	r30, 0x36	; 54
    2236:	f0 e0       	ldi	r31, 0x00	; 0
    2238:	80 81       	ld	r24, Z
    223a:	88 23       	and	r24, r24
    223c:	14 f0       	brlt	.+4      	; 0x2242 <main+0x112e>
			{
				Count_Toggle();
    223e:	0e 94 4a 07 	call	0xe94	; 0xe94 <Count_Toggle>
			}
		}
		while( !(PINB & (1<<7)) ){} // wait until switch is released
    2242:	e6 e3       	ldi	r30, 0x36	; 54
    2244:	f0 e0       	ldi	r31, 0x00	; 0
    2246:	80 81       	ld	r24, Z
    2248:	88 23       	and	r24, r24
    224a:	dc f7       	brge	.-10     	; 0x2242 <main+0x112e>
		if(!(PINB & (1<<1)))
    224c:	e6 e3       	ldi	r30, 0x36	; 54
    224e:	f0 e0       	ldi	r31, 0x00	; 0
    2250:	80 81       	ld	r24, Z
    2252:	88 2f       	mov	r24, r24
    2254:	90 e0       	ldi	r25, 0x00	; 0
    2256:	82 70       	andi	r24, 0x02	; 2
    2258:	90 70       	andi	r25, 0x00	; 0
    225a:	00 97       	sbiw	r24, 0x00	; 0
    225c:	09 f0       	breq	.+2      	; 0x2260 <main+0x114c>
    225e:	bf c0       	rjmp	.+382    	; 0x23de <main+0x12ca>
    2260:	fe 01       	movw	r30, r28
    2262:	ef 5a       	subi	r30, 0xAF	; 175
    2264:	ff 4f       	sbci	r31, 0xFF	; 255
    2266:	80 e0       	ldi	r24, 0x00	; 0
    2268:	90 e0       	ldi	r25, 0x00	; 0
    226a:	a0 ea       	ldi	r26, 0xA0	; 160
    226c:	b1 e4       	ldi	r27, 0x41	; 65
    226e:	80 83       	st	Z, r24
    2270:	91 83       	std	Z+1, r25	; 0x01
    2272:	a2 83       	std	Z+2, r26	; 0x02
    2274:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2276:	8e 01       	movw	r16, r28
    2278:	03 5b       	subi	r16, 0xB3	; 179
    227a:	1f 4f       	sbci	r17, 0xFF	; 255
    227c:	fe 01       	movw	r30, r28
    227e:	ef 5a       	subi	r30, 0xAF	; 175
    2280:	ff 4f       	sbci	r31, 0xFF	; 255
    2282:	60 81       	ld	r22, Z
    2284:	71 81       	ldd	r23, Z+1	; 0x01
    2286:	82 81       	ldd	r24, Z+2	; 0x02
    2288:	93 81       	ldd	r25, Z+3	; 0x03
    228a:	20 e0       	ldi	r18, 0x00	; 0
    228c:	30 e0       	ldi	r19, 0x00	; 0
    228e:	4a e7       	ldi	r20, 0x7A	; 122
    2290:	55 e4       	ldi	r21, 0x45	; 69
    2292:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2296:	dc 01       	movw	r26, r24
    2298:	cb 01       	movw	r24, r22
    229a:	f8 01       	movw	r30, r16
    229c:	80 83       	st	Z, r24
    229e:	91 83       	std	Z+1, r25	; 0x01
    22a0:	a2 83       	std	Z+2, r26	; 0x02
    22a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22a4:	fe 01       	movw	r30, r28
    22a6:	e3 5b       	subi	r30, 0xB3	; 179
    22a8:	ff 4f       	sbci	r31, 0xFF	; 255
    22aa:	60 81       	ld	r22, Z
    22ac:	71 81       	ldd	r23, Z+1	; 0x01
    22ae:	82 81       	ldd	r24, Z+2	; 0x02
    22b0:	93 81       	ldd	r25, Z+3	; 0x03
    22b2:	20 e0       	ldi	r18, 0x00	; 0
    22b4:	30 e0       	ldi	r19, 0x00	; 0
    22b6:	40 e8       	ldi	r20, 0x80	; 128
    22b8:	5f e3       	ldi	r21, 0x3F	; 63
    22ba:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    22be:	88 23       	and	r24, r24
    22c0:	44 f4       	brge	.+16     	; 0x22d2 <main+0x11be>
		__ticks = 1;
    22c2:	fe 01       	movw	r30, r28
    22c4:	e5 5b       	subi	r30, 0xB5	; 181
    22c6:	ff 4f       	sbci	r31, 0xFF	; 255
    22c8:	81 e0       	ldi	r24, 0x01	; 1
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	91 83       	std	Z+1, r25	; 0x01
    22ce:	80 83       	st	Z, r24
    22d0:	64 c0       	rjmp	.+200    	; 0x239a <main+0x1286>
	else if (__tmp > 65535)
    22d2:	fe 01       	movw	r30, r28
    22d4:	e3 5b       	subi	r30, 0xB3	; 179
    22d6:	ff 4f       	sbci	r31, 0xFF	; 255
    22d8:	60 81       	ld	r22, Z
    22da:	71 81       	ldd	r23, Z+1	; 0x01
    22dc:	82 81       	ldd	r24, Z+2	; 0x02
    22de:	93 81       	ldd	r25, Z+3	; 0x03
    22e0:	20 e0       	ldi	r18, 0x00	; 0
    22e2:	3f ef       	ldi	r19, 0xFF	; 255
    22e4:	4f e7       	ldi	r20, 0x7F	; 127
    22e6:	57 e4       	ldi	r21, 0x47	; 71
    22e8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    22ec:	18 16       	cp	r1, r24
    22ee:	0c f0       	brlt	.+2      	; 0x22f2 <main+0x11de>
    22f0:	43 c0       	rjmp	.+134    	; 0x2378 <main+0x1264>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22f2:	fe 01       	movw	r30, r28
    22f4:	ef 5a       	subi	r30, 0xAF	; 175
    22f6:	ff 4f       	sbci	r31, 0xFF	; 255
    22f8:	60 81       	ld	r22, Z
    22fa:	71 81       	ldd	r23, Z+1	; 0x01
    22fc:	82 81       	ldd	r24, Z+2	; 0x02
    22fe:	93 81       	ldd	r25, Z+3	; 0x03
    2300:	20 e0       	ldi	r18, 0x00	; 0
    2302:	30 e0       	ldi	r19, 0x00	; 0
    2304:	40 e2       	ldi	r20, 0x20	; 32
    2306:	51 e4       	ldi	r21, 0x41	; 65
    2308:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    230c:	dc 01       	movw	r26, r24
    230e:	cb 01       	movw	r24, r22
    2310:	8e 01       	movw	r16, r28
    2312:	05 5b       	subi	r16, 0xB5	; 181
    2314:	1f 4f       	sbci	r17, 0xFF	; 255
    2316:	bc 01       	movw	r22, r24
    2318:	cd 01       	movw	r24, r26
    231a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    231e:	dc 01       	movw	r26, r24
    2320:	cb 01       	movw	r24, r22
    2322:	f8 01       	movw	r30, r16
    2324:	91 83       	std	Z+1, r25	; 0x01
    2326:	80 83       	st	Z, r24
    2328:	1f c0       	rjmp	.+62     	; 0x2368 <main+0x1254>
    232a:	fe 01       	movw	r30, r28
    232c:	e7 5b       	subi	r30, 0xB7	; 183
    232e:	ff 4f       	sbci	r31, 0xFF	; 255
    2330:	80 e9       	ldi	r24, 0x90	; 144
    2332:	91 e0       	ldi	r25, 0x01	; 1
    2334:	91 83       	std	Z+1, r25	; 0x01
    2336:	80 83       	st	Z, r24
    2338:	fe 01       	movw	r30, r28
    233a:	e7 5b       	subi	r30, 0xB7	; 183
    233c:	ff 4f       	sbci	r31, 0xFF	; 255
    233e:	80 81       	ld	r24, Z
    2340:	91 81       	ldd	r25, Z+1	; 0x01
    2342:	01 97       	sbiw	r24, 0x01	; 1
    2344:	f1 f7       	brne	.-4      	; 0x2342 <main+0x122e>
    2346:	fe 01       	movw	r30, r28
    2348:	e7 5b       	subi	r30, 0xB7	; 183
    234a:	ff 4f       	sbci	r31, 0xFF	; 255
    234c:	91 83       	std	Z+1, r25	; 0x01
    234e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2350:	de 01       	movw	r26, r28
    2352:	a5 5b       	subi	r26, 0xB5	; 181
    2354:	bf 4f       	sbci	r27, 0xFF	; 255
    2356:	fe 01       	movw	r30, r28
    2358:	e5 5b       	subi	r30, 0xB5	; 181
    235a:	ff 4f       	sbci	r31, 0xFF	; 255
    235c:	80 81       	ld	r24, Z
    235e:	91 81       	ldd	r25, Z+1	; 0x01
    2360:	01 97       	sbiw	r24, 0x01	; 1
    2362:	11 96       	adiw	r26, 0x01	; 1
    2364:	9c 93       	st	X, r25
    2366:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2368:	fe 01       	movw	r30, r28
    236a:	e5 5b       	subi	r30, 0xB5	; 181
    236c:	ff 4f       	sbci	r31, 0xFF	; 255
    236e:	80 81       	ld	r24, Z
    2370:	91 81       	ldd	r25, Z+1	; 0x01
    2372:	00 97       	sbiw	r24, 0x00	; 0
    2374:	d1 f6       	brne	.-76     	; 0x232a <main+0x1216>
    2376:	28 c0       	rjmp	.+80     	; 0x23c8 <main+0x12b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2378:	8e 01       	movw	r16, r28
    237a:	05 5b       	subi	r16, 0xB5	; 181
    237c:	1f 4f       	sbci	r17, 0xFF	; 255
    237e:	fe 01       	movw	r30, r28
    2380:	e3 5b       	subi	r30, 0xB3	; 179
    2382:	ff 4f       	sbci	r31, 0xFF	; 255
    2384:	60 81       	ld	r22, Z
    2386:	71 81       	ldd	r23, Z+1	; 0x01
    2388:	82 81       	ldd	r24, Z+2	; 0x02
    238a:	93 81       	ldd	r25, Z+3	; 0x03
    238c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2390:	dc 01       	movw	r26, r24
    2392:	cb 01       	movw	r24, r22
    2394:	f8 01       	movw	r30, r16
    2396:	91 83       	std	Z+1, r25	; 0x01
    2398:	80 83       	st	Z, r24
    239a:	de 01       	movw	r26, r28
    239c:	a9 5b       	subi	r26, 0xB9	; 185
    239e:	bf 4f       	sbci	r27, 0xFF	; 255
    23a0:	fe 01       	movw	r30, r28
    23a2:	e5 5b       	subi	r30, 0xB5	; 181
    23a4:	ff 4f       	sbci	r31, 0xFF	; 255
    23a6:	80 81       	ld	r24, Z
    23a8:	91 81       	ldd	r25, Z+1	; 0x01
    23aa:	11 96       	adiw	r26, 0x01	; 1
    23ac:	9c 93       	st	X, r25
    23ae:	8e 93       	st	-X, r24
    23b0:	fe 01       	movw	r30, r28
    23b2:	e9 5b       	subi	r30, 0xB9	; 185
    23b4:	ff 4f       	sbci	r31, 0xFF	; 255
    23b6:	80 81       	ld	r24, Z
    23b8:	91 81       	ldd	r25, Z+1	; 0x01
    23ba:	01 97       	sbiw	r24, 0x01	; 1
    23bc:	f1 f7       	brne	.-4      	; 0x23ba <main+0x12a6>
    23be:	fe 01       	movw	r30, r28
    23c0:	e9 5b       	subi	r30, 0xB9	; 185
    23c2:	ff 4f       	sbci	r31, 0xFF	; 255
    23c4:	91 83       	std	Z+1, r25	; 0x01
    23c6:	80 83       	st	Z, r24
		{
			_delay_ms(20);
			if(!(PINB & (1<<1)))
    23c8:	e6 e3       	ldi	r30, 0x36	; 54
    23ca:	f0 e0       	ldi	r31, 0x00	; 0
    23cc:	80 81       	ld	r24, Z
    23ce:	88 2f       	mov	r24, r24
    23d0:	90 e0       	ldi	r25, 0x00	; 0
    23d2:	82 70       	andi	r24, 0x02	; 2
    23d4:	90 70       	andi	r25, 0x00	; 0
    23d6:	00 97       	sbiw	r24, 0x00	; 0
    23d8:	11 f4       	brne	.+4      	; 0x23de <main+0x12ca>
			{
				Hourse_Increment();
    23da:	0e 94 c9 06 	call	0xd92	; 0xd92 <Hourse_Increment>
			}
		}
		while( !(PINB & (1<<1)) ){}
    23de:	e6 e3       	ldi	r30, 0x36	; 54
    23e0:	f0 e0       	ldi	r31, 0x00	; 0
    23e2:	80 81       	ld	r24, Z
    23e4:	88 2f       	mov	r24, r24
    23e6:	90 e0       	ldi	r25, 0x00	; 0
    23e8:	82 70       	andi	r24, 0x02	; 2
    23ea:	90 70       	andi	r25, 0x00	; 0
    23ec:	00 97       	sbiw	r24, 0x00	; 0
    23ee:	b9 f3       	breq	.-18     	; 0x23de <main+0x12ca>
		if(!(PINB & (1<<0)))
    23f0:	e6 e3       	ldi	r30, 0x36	; 54
    23f2:	f0 e0       	ldi	r31, 0x00	; 0
    23f4:	80 81       	ld	r24, Z
    23f6:	88 2f       	mov	r24, r24
    23f8:	90 e0       	ldi	r25, 0x00	; 0
    23fa:	81 70       	andi	r24, 0x01	; 1
    23fc:	90 70       	andi	r25, 0x00	; 0
    23fe:	00 97       	sbiw	r24, 0x00	; 0
    2400:	09 f0       	breq	.+2      	; 0x2404 <main+0x12f0>
    2402:	90 c0       	rjmp	.+288    	; 0x2524 <main+0x1410>
    2404:	fe 01       	movw	r30, r28
    2406:	ed 5b       	subi	r30, 0xBD	; 189
    2408:	ff 4f       	sbci	r31, 0xFF	; 255
    240a:	80 e0       	ldi	r24, 0x00	; 0
    240c:	90 e0       	ldi	r25, 0x00	; 0
    240e:	a0 ea       	ldi	r26, 0xA0	; 160
    2410:	b1 e4       	ldi	r27, 0x41	; 65
    2412:	80 83       	st	Z, r24
    2414:	91 83       	std	Z+1, r25	; 0x01
    2416:	a2 83       	std	Z+2, r26	; 0x02
    2418:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    241a:	8e 01       	movw	r16, r28
    241c:	01 5c       	subi	r16, 0xC1	; 193
    241e:	1f 4f       	sbci	r17, 0xFF	; 255
    2420:	fe 01       	movw	r30, r28
    2422:	ed 5b       	subi	r30, 0xBD	; 189
    2424:	ff 4f       	sbci	r31, 0xFF	; 255
    2426:	60 81       	ld	r22, Z
    2428:	71 81       	ldd	r23, Z+1	; 0x01
    242a:	82 81       	ldd	r24, Z+2	; 0x02
    242c:	93 81       	ldd	r25, Z+3	; 0x03
    242e:	20 e0       	ldi	r18, 0x00	; 0
    2430:	30 e0       	ldi	r19, 0x00	; 0
    2432:	4a e7       	ldi	r20, 0x7A	; 122
    2434:	55 e4       	ldi	r21, 0x45	; 69
    2436:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    243a:	dc 01       	movw	r26, r24
    243c:	cb 01       	movw	r24, r22
    243e:	f8 01       	movw	r30, r16
    2440:	80 83       	st	Z, r24
    2442:	91 83       	std	Z+1, r25	; 0x01
    2444:	a2 83       	std	Z+2, r26	; 0x02
    2446:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2448:	fe 01       	movw	r30, r28
    244a:	ff 96       	adiw	r30, 0x3f	; 63
    244c:	60 81       	ld	r22, Z
    244e:	71 81       	ldd	r23, Z+1	; 0x01
    2450:	82 81       	ldd	r24, Z+2	; 0x02
    2452:	93 81       	ldd	r25, Z+3	; 0x03
    2454:	20 e0       	ldi	r18, 0x00	; 0
    2456:	30 e0       	ldi	r19, 0x00	; 0
    2458:	40 e8       	ldi	r20, 0x80	; 128
    245a:	5f e3       	ldi	r21, 0x3F	; 63
    245c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2460:	88 23       	and	r24, r24
    2462:	2c f4       	brge	.+10     	; 0x246e <main+0x135a>
		__ticks = 1;
    2464:	81 e0       	ldi	r24, 0x01	; 1
    2466:	90 e0       	ldi	r25, 0x00	; 0
    2468:	9e af       	std	Y+62, r25	; 0x3e
    246a:	8d af       	std	Y+61, r24	; 0x3d
    246c:	46 c0       	rjmp	.+140    	; 0x24fa <main+0x13e6>
	else if (__tmp > 65535)
    246e:	fe 01       	movw	r30, r28
    2470:	ff 96       	adiw	r30, 0x3f	; 63
    2472:	60 81       	ld	r22, Z
    2474:	71 81       	ldd	r23, Z+1	; 0x01
    2476:	82 81       	ldd	r24, Z+2	; 0x02
    2478:	93 81       	ldd	r25, Z+3	; 0x03
    247a:	20 e0       	ldi	r18, 0x00	; 0
    247c:	3f ef       	ldi	r19, 0xFF	; 255
    247e:	4f e7       	ldi	r20, 0x7F	; 127
    2480:	57 e4       	ldi	r21, 0x47	; 71
    2482:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2486:	18 16       	cp	r1, r24
    2488:	64 f5       	brge	.+88     	; 0x24e2 <main+0x13ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    248a:	fe 01       	movw	r30, r28
    248c:	ed 5b       	subi	r30, 0xBD	; 189
    248e:	ff 4f       	sbci	r31, 0xFF	; 255
    2490:	60 81       	ld	r22, Z
    2492:	71 81       	ldd	r23, Z+1	; 0x01
    2494:	82 81       	ldd	r24, Z+2	; 0x02
    2496:	93 81       	ldd	r25, Z+3	; 0x03
    2498:	20 e0       	ldi	r18, 0x00	; 0
    249a:	30 e0       	ldi	r19, 0x00	; 0
    249c:	40 e2       	ldi	r20, 0x20	; 32
    249e:	51 e4       	ldi	r21, 0x41	; 65
    24a0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24a4:	dc 01       	movw	r26, r24
    24a6:	cb 01       	movw	r24, r22
    24a8:	bc 01       	movw	r22, r24
    24aa:	cd 01       	movw	r24, r26
    24ac:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24b0:	dc 01       	movw	r26, r24
    24b2:	cb 01       	movw	r24, r22
    24b4:	9e af       	std	Y+62, r25	; 0x3e
    24b6:	8d af       	std	Y+61, r24	; 0x3d
    24b8:	0f c0       	rjmp	.+30     	; 0x24d8 <main+0x13c4>
    24ba:	80 e9       	ldi	r24, 0x90	; 144
    24bc:	91 e0       	ldi	r25, 0x01	; 1
    24be:	9c af       	std	Y+60, r25	; 0x3c
    24c0:	8b af       	std	Y+59, r24	; 0x3b
    24c2:	8b ad       	ldd	r24, Y+59	; 0x3b
    24c4:	9c ad       	ldd	r25, Y+60	; 0x3c
    24c6:	01 97       	sbiw	r24, 0x01	; 1
    24c8:	f1 f7       	brne	.-4      	; 0x24c6 <main+0x13b2>
    24ca:	9c af       	std	Y+60, r25	; 0x3c
    24cc:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24ce:	8d ad       	ldd	r24, Y+61	; 0x3d
    24d0:	9e ad       	ldd	r25, Y+62	; 0x3e
    24d2:	01 97       	sbiw	r24, 0x01	; 1
    24d4:	9e af       	std	Y+62, r25	; 0x3e
    24d6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24d8:	8d ad       	ldd	r24, Y+61	; 0x3d
    24da:	9e ad       	ldd	r25, Y+62	; 0x3e
    24dc:	00 97       	sbiw	r24, 0x00	; 0
    24de:	69 f7       	brne	.-38     	; 0x24ba <main+0x13a6>
    24e0:	16 c0       	rjmp	.+44     	; 0x250e <main+0x13fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24e2:	fe 01       	movw	r30, r28
    24e4:	ff 96       	adiw	r30, 0x3f	; 63
    24e6:	60 81       	ld	r22, Z
    24e8:	71 81       	ldd	r23, Z+1	; 0x01
    24ea:	82 81       	ldd	r24, Z+2	; 0x02
    24ec:	93 81       	ldd	r25, Z+3	; 0x03
    24ee:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24f2:	dc 01       	movw	r26, r24
    24f4:	cb 01       	movw	r24, r22
    24f6:	9e af       	std	Y+62, r25	; 0x3e
    24f8:	8d af       	std	Y+61, r24	; 0x3d
    24fa:	8d ad       	ldd	r24, Y+61	; 0x3d
    24fc:	9e ad       	ldd	r25, Y+62	; 0x3e
    24fe:	9a af       	std	Y+58, r25	; 0x3a
    2500:	89 af       	std	Y+57, r24	; 0x39
    2502:	89 ad       	ldd	r24, Y+57	; 0x39
    2504:	9a ad       	ldd	r25, Y+58	; 0x3a
    2506:	01 97       	sbiw	r24, 0x01	; 1
    2508:	f1 f7       	brne	.-4      	; 0x2506 <main+0x13f2>
    250a:	9a af       	std	Y+58, r25	; 0x3a
    250c:	89 af       	std	Y+57, r24	; 0x39
		{
			_delay_ms(20);
			if(!(PINB & (1<<0)))
    250e:	e6 e3       	ldi	r30, 0x36	; 54
    2510:	f0 e0       	ldi	r31, 0x00	; 0
    2512:	80 81       	ld	r24, Z
    2514:	88 2f       	mov	r24, r24
    2516:	90 e0       	ldi	r25, 0x00	; 0
    2518:	81 70       	andi	r24, 0x01	; 1
    251a:	90 70       	andi	r25, 0x00	; 0
    251c:	00 97       	sbiw	r24, 0x00	; 0
    251e:	11 f4       	brne	.+4      	; 0x2524 <main+0x1410>
			{
				Hourse_Decrement();
    2520:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <Hourse_Decrement>
			}
		}
		while( !(PINB & (1<<0)) ){}
    2524:	e6 e3       	ldi	r30, 0x36	; 54
    2526:	f0 e0       	ldi	r31, 0x00	; 0
    2528:	80 81       	ld	r24, Z
    252a:	88 2f       	mov	r24, r24
    252c:	90 e0       	ldi	r25, 0x00	; 0
    252e:	81 70       	andi	r24, 0x01	; 1
    2530:	90 70       	andi	r25, 0x00	; 0
    2532:	00 97       	sbiw	r24, 0x00	; 0
    2534:	b9 f3       	breq	.-18     	; 0x2524 <main+0x1410>
		if(!(PINB & (1<<4)))
    2536:	e6 e3       	ldi	r30, 0x36	; 54
    2538:	f0 e0       	ldi	r31, 0x00	; 0
    253a:	80 81       	ld	r24, Z
    253c:	88 2f       	mov	r24, r24
    253e:	90 e0       	ldi	r25, 0x00	; 0
    2540:	80 71       	andi	r24, 0x10	; 16
    2542:	90 70       	andi	r25, 0x00	; 0
    2544:	00 97       	sbiw	r24, 0x00	; 0
    2546:	09 f0       	breq	.+2      	; 0x254a <main+0x1436>
    2548:	7d c0       	rjmp	.+250    	; 0x2644 <main+0x1530>
    254a:	80 e0       	ldi	r24, 0x00	; 0
    254c:	90 e0       	ldi	r25, 0x00	; 0
    254e:	a0 ea       	ldi	r26, 0xA0	; 160
    2550:	b1 e4       	ldi	r27, 0x41	; 65
    2552:	8d ab       	std	Y+53, r24	; 0x35
    2554:	9e ab       	std	Y+54, r25	; 0x36
    2556:	af ab       	std	Y+55, r26	; 0x37
    2558:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    255a:	6d a9       	ldd	r22, Y+53	; 0x35
    255c:	7e a9       	ldd	r23, Y+54	; 0x36
    255e:	8f a9       	ldd	r24, Y+55	; 0x37
    2560:	98 ad       	ldd	r25, Y+56	; 0x38
    2562:	20 e0       	ldi	r18, 0x00	; 0
    2564:	30 e0       	ldi	r19, 0x00	; 0
    2566:	4a e7       	ldi	r20, 0x7A	; 122
    2568:	55 e4       	ldi	r21, 0x45	; 69
    256a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    256e:	dc 01       	movw	r26, r24
    2570:	cb 01       	movw	r24, r22
    2572:	89 ab       	std	Y+49, r24	; 0x31
    2574:	9a ab       	std	Y+50, r25	; 0x32
    2576:	ab ab       	std	Y+51, r26	; 0x33
    2578:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    257a:	69 a9       	ldd	r22, Y+49	; 0x31
    257c:	7a a9       	ldd	r23, Y+50	; 0x32
    257e:	8b a9       	ldd	r24, Y+51	; 0x33
    2580:	9c a9       	ldd	r25, Y+52	; 0x34
    2582:	20 e0       	ldi	r18, 0x00	; 0
    2584:	30 e0       	ldi	r19, 0x00	; 0
    2586:	40 e8       	ldi	r20, 0x80	; 128
    2588:	5f e3       	ldi	r21, 0x3F	; 63
    258a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    258e:	88 23       	and	r24, r24
    2590:	2c f4       	brge	.+10     	; 0x259c <main+0x1488>
		__ticks = 1;
    2592:	81 e0       	ldi	r24, 0x01	; 1
    2594:	90 e0       	ldi	r25, 0x00	; 0
    2596:	98 ab       	std	Y+48, r25	; 0x30
    2598:	8f a7       	std	Y+47, r24	; 0x2f
    259a:	3f c0       	rjmp	.+126    	; 0x261a <main+0x1506>
	else if (__tmp > 65535)
    259c:	69 a9       	ldd	r22, Y+49	; 0x31
    259e:	7a a9       	ldd	r23, Y+50	; 0x32
    25a0:	8b a9       	ldd	r24, Y+51	; 0x33
    25a2:	9c a9       	ldd	r25, Y+52	; 0x34
    25a4:	20 e0       	ldi	r18, 0x00	; 0
    25a6:	3f ef       	ldi	r19, 0xFF	; 255
    25a8:	4f e7       	ldi	r20, 0x7F	; 127
    25aa:	57 e4       	ldi	r21, 0x47	; 71
    25ac:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    25b0:	18 16       	cp	r1, r24
    25b2:	4c f5       	brge	.+82     	; 0x2606 <main+0x14f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25b4:	6d a9       	ldd	r22, Y+53	; 0x35
    25b6:	7e a9       	ldd	r23, Y+54	; 0x36
    25b8:	8f a9       	ldd	r24, Y+55	; 0x37
    25ba:	98 ad       	ldd	r25, Y+56	; 0x38
    25bc:	20 e0       	ldi	r18, 0x00	; 0
    25be:	30 e0       	ldi	r19, 0x00	; 0
    25c0:	40 e2       	ldi	r20, 0x20	; 32
    25c2:	51 e4       	ldi	r21, 0x41	; 65
    25c4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    25c8:	dc 01       	movw	r26, r24
    25ca:	cb 01       	movw	r24, r22
    25cc:	bc 01       	movw	r22, r24
    25ce:	cd 01       	movw	r24, r26
    25d0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    25d4:	dc 01       	movw	r26, r24
    25d6:	cb 01       	movw	r24, r22
    25d8:	98 ab       	std	Y+48, r25	; 0x30
    25da:	8f a7       	std	Y+47, r24	; 0x2f
    25dc:	0f c0       	rjmp	.+30     	; 0x25fc <main+0x14e8>
    25de:	80 e9       	ldi	r24, 0x90	; 144
    25e0:	91 e0       	ldi	r25, 0x01	; 1
    25e2:	9e a7       	std	Y+46, r25	; 0x2e
    25e4:	8d a7       	std	Y+45, r24	; 0x2d
    25e6:	8d a5       	ldd	r24, Y+45	; 0x2d
    25e8:	9e a5       	ldd	r25, Y+46	; 0x2e
    25ea:	01 97       	sbiw	r24, 0x01	; 1
    25ec:	f1 f7       	brne	.-4      	; 0x25ea <main+0x14d6>
    25ee:	9e a7       	std	Y+46, r25	; 0x2e
    25f0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25f2:	8f a5       	ldd	r24, Y+47	; 0x2f
    25f4:	98 a9       	ldd	r25, Y+48	; 0x30
    25f6:	01 97       	sbiw	r24, 0x01	; 1
    25f8:	98 ab       	std	Y+48, r25	; 0x30
    25fa:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25fc:	8f a5       	ldd	r24, Y+47	; 0x2f
    25fe:	98 a9       	ldd	r25, Y+48	; 0x30
    2600:	00 97       	sbiw	r24, 0x00	; 0
    2602:	69 f7       	brne	.-38     	; 0x25de <main+0x14ca>
    2604:	14 c0       	rjmp	.+40     	; 0x262e <main+0x151a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2606:	69 a9       	ldd	r22, Y+49	; 0x31
    2608:	7a a9       	ldd	r23, Y+50	; 0x32
    260a:	8b a9       	ldd	r24, Y+51	; 0x33
    260c:	9c a9       	ldd	r25, Y+52	; 0x34
    260e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2612:	dc 01       	movw	r26, r24
    2614:	cb 01       	movw	r24, r22
    2616:	98 ab       	std	Y+48, r25	; 0x30
    2618:	8f a7       	std	Y+47, r24	; 0x2f
    261a:	8f a5       	ldd	r24, Y+47	; 0x2f
    261c:	98 a9       	ldd	r25, Y+48	; 0x30
    261e:	9c a7       	std	Y+44, r25	; 0x2c
    2620:	8b a7       	std	Y+43, r24	; 0x2b
    2622:	8b a5       	ldd	r24, Y+43	; 0x2b
    2624:	9c a5       	ldd	r25, Y+44	; 0x2c
    2626:	01 97       	sbiw	r24, 0x01	; 1
    2628:	f1 f7       	brne	.-4      	; 0x2626 <main+0x1512>
    262a:	9c a7       	std	Y+44, r25	; 0x2c
    262c:	8b a7       	std	Y+43, r24	; 0x2b
		{
			_delay_ms(20);
			if(!(PINB & (1<<4)))
    262e:	e6 e3       	ldi	r30, 0x36	; 54
    2630:	f0 e0       	ldi	r31, 0x00	; 0
    2632:	80 81       	ld	r24, Z
    2634:	88 2f       	mov	r24, r24
    2636:	90 e0       	ldi	r25, 0x00	; 0
    2638:	80 71       	andi	r24, 0x10	; 16
    263a:	90 70       	andi	r25, 0x00	; 0
    263c:	00 97       	sbiw	r24, 0x00	; 0
    263e:	11 f4       	brne	.+4      	; 0x2644 <main+0x1530>
			{
				Minutes_Increment();
    2640:	0e 94 f4 06 	call	0xde8	; 0xde8 <Minutes_Increment>
			}
		}
		while( !(PINB & (1<<4)) ){}
    2644:	e6 e3       	ldi	r30, 0x36	; 54
    2646:	f0 e0       	ldi	r31, 0x00	; 0
    2648:	80 81       	ld	r24, Z
    264a:	88 2f       	mov	r24, r24
    264c:	90 e0       	ldi	r25, 0x00	; 0
    264e:	80 71       	andi	r24, 0x10	; 16
    2650:	90 70       	andi	r25, 0x00	; 0
    2652:	00 97       	sbiw	r24, 0x00	; 0
    2654:	b9 f3       	breq	.-18     	; 0x2644 <main+0x1530>
		if(!(PINB & (1<<3)))
    2656:	e6 e3       	ldi	r30, 0x36	; 54
    2658:	f0 e0       	ldi	r31, 0x00	; 0
    265a:	80 81       	ld	r24, Z
    265c:	88 2f       	mov	r24, r24
    265e:	90 e0       	ldi	r25, 0x00	; 0
    2660:	88 70       	andi	r24, 0x08	; 8
    2662:	90 70       	andi	r25, 0x00	; 0
    2664:	00 97       	sbiw	r24, 0x00	; 0
    2666:	09 f0       	breq	.+2      	; 0x266a <main+0x1556>
    2668:	7d c0       	rjmp	.+250    	; 0x2764 <main+0x1650>
    266a:	80 e0       	ldi	r24, 0x00	; 0
    266c:	90 e0       	ldi	r25, 0x00	; 0
    266e:	a0 ea       	ldi	r26, 0xA0	; 160
    2670:	b1 e4       	ldi	r27, 0x41	; 65
    2672:	8f a3       	std	Y+39, r24	; 0x27
    2674:	98 a7       	std	Y+40, r25	; 0x28
    2676:	a9 a7       	std	Y+41, r26	; 0x29
    2678:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    267a:	6f a1       	ldd	r22, Y+39	; 0x27
    267c:	78 a5       	ldd	r23, Y+40	; 0x28
    267e:	89 a5       	ldd	r24, Y+41	; 0x29
    2680:	9a a5       	ldd	r25, Y+42	; 0x2a
    2682:	20 e0       	ldi	r18, 0x00	; 0
    2684:	30 e0       	ldi	r19, 0x00	; 0
    2686:	4a e7       	ldi	r20, 0x7A	; 122
    2688:	55 e4       	ldi	r21, 0x45	; 69
    268a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    268e:	dc 01       	movw	r26, r24
    2690:	cb 01       	movw	r24, r22
    2692:	8b a3       	std	Y+35, r24	; 0x23
    2694:	9c a3       	std	Y+36, r25	; 0x24
    2696:	ad a3       	std	Y+37, r26	; 0x25
    2698:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    269a:	6b a1       	ldd	r22, Y+35	; 0x23
    269c:	7c a1       	ldd	r23, Y+36	; 0x24
    269e:	8d a1       	ldd	r24, Y+37	; 0x25
    26a0:	9e a1       	ldd	r25, Y+38	; 0x26
    26a2:	20 e0       	ldi	r18, 0x00	; 0
    26a4:	30 e0       	ldi	r19, 0x00	; 0
    26a6:	40 e8       	ldi	r20, 0x80	; 128
    26a8:	5f e3       	ldi	r21, 0x3F	; 63
    26aa:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    26ae:	88 23       	and	r24, r24
    26b0:	2c f4       	brge	.+10     	; 0x26bc <main+0x15a8>
		__ticks = 1;
    26b2:	81 e0       	ldi	r24, 0x01	; 1
    26b4:	90 e0       	ldi	r25, 0x00	; 0
    26b6:	9a a3       	std	Y+34, r25	; 0x22
    26b8:	89 a3       	std	Y+33, r24	; 0x21
    26ba:	3f c0       	rjmp	.+126    	; 0x273a <main+0x1626>
	else if (__tmp > 65535)
    26bc:	6b a1       	ldd	r22, Y+35	; 0x23
    26be:	7c a1       	ldd	r23, Y+36	; 0x24
    26c0:	8d a1       	ldd	r24, Y+37	; 0x25
    26c2:	9e a1       	ldd	r25, Y+38	; 0x26
    26c4:	20 e0       	ldi	r18, 0x00	; 0
    26c6:	3f ef       	ldi	r19, 0xFF	; 255
    26c8:	4f e7       	ldi	r20, 0x7F	; 127
    26ca:	57 e4       	ldi	r21, 0x47	; 71
    26cc:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    26d0:	18 16       	cp	r1, r24
    26d2:	4c f5       	brge	.+82     	; 0x2726 <main+0x1612>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26d4:	6f a1       	ldd	r22, Y+39	; 0x27
    26d6:	78 a5       	ldd	r23, Y+40	; 0x28
    26d8:	89 a5       	ldd	r24, Y+41	; 0x29
    26da:	9a a5       	ldd	r25, Y+42	; 0x2a
    26dc:	20 e0       	ldi	r18, 0x00	; 0
    26de:	30 e0       	ldi	r19, 0x00	; 0
    26e0:	40 e2       	ldi	r20, 0x20	; 32
    26e2:	51 e4       	ldi	r21, 0x41	; 65
    26e4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    26e8:	dc 01       	movw	r26, r24
    26ea:	cb 01       	movw	r24, r22
    26ec:	bc 01       	movw	r22, r24
    26ee:	cd 01       	movw	r24, r26
    26f0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26f4:	dc 01       	movw	r26, r24
    26f6:	cb 01       	movw	r24, r22
    26f8:	9a a3       	std	Y+34, r25	; 0x22
    26fa:	89 a3       	std	Y+33, r24	; 0x21
    26fc:	0f c0       	rjmp	.+30     	; 0x271c <main+0x1608>
    26fe:	80 e9       	ldi	r24, 0x90	; 144
    2700:	91 e0       	ldi	r25, 0x01	; 1
    2702:	98 a3       	std	Y+32, r25	; 0x20
    2704:	8f 8f       	std	Y+31, r24	; 0x1f
    2706:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2708:	98 a1       	ldd	r25, Y+32	; 0x20
    270a:	01 97       	sbiw	r24, 0x01	; 1
    270c:	f1 f7       	brne	.-4      	; 0x270a <main+0x15f6>
    270e:	98 a3       	std	Y+32, r25	; 0x20
    2710:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2712:	89 a1       	ldd	r24, Y+33	; 0x21
    2714:	9a a1       	ldd	r25, Y+34	; 0x22
    2716:	01 97       	sbiw	r24, 0x01	; 1
    2718:	9a a3       	std	Y+34, r25	; 0x22
    271a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    271c:	89 a1       	ldd	r24, Y+33	; 0x21
    271e:	9a a1       	ldd	r25, Y+34	; 0x22
    2720:	00 97       	sbiw	r24, 0x00	; 0
    2722:	69 f7       	brne	.-38     	; 0x26fe <main+0x15ea>
    2724:	14 c0       	rjmp	.+40     	; 0x274e <main+0x163a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2726:	6b a1       	ldd	r22, Y+35	; 0x23
    2728:	7c a1       	ldd	r23, Y+36	; 0x24
    272a:	8d a1       	ldd	r24, Y+37	; 0x25
    272c:	9e a1       	ldd	r25, Y+38	; 0x26
    272e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2732:	dc 01       	movw	r26, r24
    2734:	cb 01       	movw	r24, r22
    2736:	9a a3       	std	Y+34, r25	; 0x22
    2738:	89 a3       	std	Y+33, r24	; 0x21
    273a:	89 a1       	ldd	r24, Y+33	; 0x21
    273c:	9a a1       	ldd	r25, Y+34	; 0x22
    273e:	9e 8f       	std	Y+30, r25	; 0x1e
    2740:	8d 8f       	std	Y+29, r24	; 0x1d
    2742:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2744:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2746:	01 97       	sbiw	r24, 0x01	; 1
    2748:	f1 f7       	brne	.-4      	; 0x2746 <main+0x1632>
    274a:	9e 8f       	std	Y+30, r25	; 0x1e
    274c:	8d 8f       	std	Y+29, r24	; 0x1d
		{
			_delay_ms(20);
			if(!(PINB & (1<<3)))
    274e:	e6 e3       	ldi	r30, 0x36	; 54
    2750:	f0 e0       	ldi	r31, 0x00	; 0
    2752:	80 81       	ld	r24, Z
    2754:	88 2f       	mov	r24, r24
    2756:	90 e0       	ldi	r25, 0x00	; 0
    2758:	88 70       	andi	r24, 0x08	; 8
    275a:	90 70       	andi	r25, 0x00	; 0
    275c:	00 97       	sbiw	r24, 0x00	; 0
    275e:	11 f4       	brne	.+4      	; 0x2764 <main+0x1650>
			{
				Minutes_Decrementt();
    2760:	0e 94 0d 07 	call	0xe1a	; 0xe1a <Minutes_Decrementt>
			}
		}
		while( !(PINB & (1<<3)) ){}
    2764:	e6 e3       	ldi	r30, 0x36	; 54
    2766:	f0 e0       	ldi	r31, 0x00	; 0
    2768:	80 81       	ld	r24, Z
    276a:	88 2f       	mov	r24, r24
    276c:	90 e0       	ldi	r25, 0x00	; 0
    276e:	88 70       	andi	r24, 0x08	; 8
    2770:	90 70       	andi	r25, 0x00	; 0
    2772:	00 97       	sbiw	r24, 0x00	; 0
    2774:	b9 f3       	breq	.-18     	; 0x2764 <main+0x1650>
		if(!(PINB & (1<<6)))
    2776:	e6 e3       	ldi	r30, 0x36	; 54
    2778:	f0 e0       	ldi	r31, 0x00	; 0
    277a:	80 81       	ld	r24, Z
    277c:	88 2f       	mov	r24, r24
    277e:	90 e0       	ldi	r25, 0x00	; 0
    2780:	80 74       	andi	r24, 0x40	; 64
    2782:	90 70       	andi	r25, 0x00	; 0
    2784:	00 97       	sbiw	r24, 0x00	; 0
    2786:	09 f0       	breq	.+2      	; 0x278a <main+0x1676>
    2788:	7d c0       	rjmp	.+250    	; 0x2884 <main+0x1770>
    278a:	80 e0       	ldi	r24, 0x00	; 0
    278c:	90 e0       	ldi	r25, 0x00	; 0
    278e:	a0 ea       	ldi	r26, 0xA0	; 160
    2790:	b1 e4       	ldi	r27, 0x41	; 65
    2792:	89 8f       	std	Y+25, r24	; 0x19
    2794:	9a 8f       	std	Y+26, r25	; 0x1a
    2796:	ab 8f       	std	Y+27, r26	; 0x1b
    2798:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    279a:	69 8d       	ldd	r22, Y+25	; 0x19
    279c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    279e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    27a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    27a2:	20 e0       	ldi	r18, 0x00	; 0
    27a4:	30 e0       	ldi	r19, 0x00	; 0
    27a6:	4a e7       	ldi	r20, 0x7A	; 122
    27a8:	55 e4       	ldi	r21, 0x45	; 69
    27aa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    27ae:	dc 01       	movw	r26, r24
    27b0:	cb 01       	movw	r24, r22
    27b2:	8d 8b       	std	Y+21, r24	; 0x15
    27b4:	9e 8b       	std	Y+22, r25	; 0x16
    27b6:	af 8b       	std	Y+23, r26	; 0x17
    27b8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    27ba:	6d 89       	ldd	r22, Y+21	; 0x15
    27bc:	7e 89       	ldd	r23, Y+22	; 0x16
    27be:	8f 89       	ldd	r24, Y+23	; 0x17
    27c0:	98 8d       	ldd	r25, Y+24	; 0x18
    27c2:	20 e0       	ldi	r18, 0x00	; 0
    27c4:	30 e0       	ldi	r19, 0x00	; 0
    27c6:	40 e8       	ldi	r20, 0x80	; 128
    27c8:	5f e3       	ldi	r21, 0x3F	; 63
    27ca:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    27ce:	88 23       	and	r24, r24
    27d0:	2c f4       	brge	.+10     	; 0x27dc <main+0x16c8>
		__ticks = 1;
    27d2:	81 e0       	ldi	r24, 0x01	; 1
    27d4:	90 e0       	ldi	r25, 0x00	; 0
    27d6:	9c 8b       	std	Y+20, r25	; 0x14
    27d8:	8b 8b       	std	Y+19, r24	; 0x13
    27da:	3f c0       	rjmp	.+126    	; 0x285a <main+0x1746>
	else if (__tmp > 65535)
    27dc:	6d 89       	ldd	r22, Y+21	; 0x15
    27de:	7e 89       	ldd	r23, Y+22	; 0x16
    27e0:	8f 89       	ldd	r24, Y+23	; 0x17
    27e2:	98 8d       	ldd	r25, Y+24	; 0x18
    27e4:	20 e0       	ldi	r18, 0x00	; 0
    27e6:	3f ef       	ldi	r19, 0xFF	; 255
    27e8:	4f e7       	ldi	r20, 0x7F	; 127
    27ea:	57 e4       	ldi	r21, 0x47	; 71
    27ec:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    27f0:	18 16       	cp	r1, r24
    27f2:	4c f5       	brge	.+82     	; 0x2846 <main+0x1732>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27f4:	69 8d       	ldd	r22, Y+25	; 0x19
    27f6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    27f8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    27fa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    27fc:	20 e0       	ldi	r18, 0x00	; 0
    27fe:	30 e0       	ldi	r19, 0x00	; 0
    2800:	40 e2       	ldi	r20, 0x20	; 32
    2802:	51 e4       	ldi	r21, 0x41	; 65
    2804:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2808:	dc 01       	movw	r26, r24
    280a:	cb 01       	movw	r24, r22
    280c:	bc 01       	movw	r22, r24
    280e:	cd 01       	movw	r24, r26
    2810:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2814:	dc 01       	movw	r26, r24
    2816:	cb 01       	movw	r24, r22
    2818:	9c 8b       	std	Y+20, r25	; 0x14
    281a:	8b 8b       	std	Y+19, r24	; 0x13
    281c:	0f c0       	rjmp	.+30     	; 0x283c <main+0x1728>
    281e:	80 e9       	ldi	r24, 0x90	; 144
    2820:	91 e0       	ldi	r25, 0x01	; 1
    2822:	9a 8b       	std	Y+18, r25	; 0x12
    2824:	89 8b       	std	Y+17, r24	; 0x11
    2826:	89 89       	ldd	r24, Y+17	; 0x11
    2828:	9a 89       	ldd	r25, Y+18	; 0x12
    282a:	01 97       	sbiw	r24, 0x01	; 1
    282c:	f1 f7       	brne	.-4      	; 0x282a <main+0x1716>
    282e:	9a 8b       	std	Y+18, r25	; 0x12
    2830:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2832:	8b 89       	ldd	r24, Y+19	; 0x13
    2834:	9c 89       	ldd	r25, Y+20	; 0x14
    2836:	01 97       	sbiw	r24, 0x01	; 1
    2838:	9c 8b       	std	Y+20, r25	; 0x14
    283a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    283c:	8b 89       	ldd	r24, Y+19	; 0x13
    283e:	9c 89       	ldd	r25, Y+20	; 0x14
    2840:	00 97       	sbiw	r24, 0x00	; 0
    2842:	69 f7       	brne	.-38     	; 0x281e <main+0x170a>
    2844:	14 c0       	rjmp	.+40     	; 0x286e <main+0x175a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2846:	6d 89       	ldd	r22, Y+21	; 0x15
    2848:	7e 89       	ldd	r23, Y+22	; 0x16
    284a:	8f 89       	ldd	r24, Y+23	; 0x17
    284c:	98 8d       	ldd	r25, Y+24	; 0x18
    284e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2852:	dc 01       	movw	r26, r24
    2854:	cb 01       	movw	r24, r22
    2856:	9c 8b       	std	Y+20, r25	; 0x14
    2858:	8b 8b       	std	Y+19, r24	; 0x13
    285a:	8b 89       	ldd	r24, Y+19	; 0x13
    285c:	9c 89       	ldd	r25, Y+20	; 0x14
    285e:	98 8b       	std	Y+16, r25	; 0x10
    2860:	8f 87       	std	Y+15, r24	; 0x0f
    2862:	8f 85       	ldd	r24, Y+15	; 0x0f
    2864:	98 89       	ldd	r25, Y+16	; 0x10
    2866:	01 97       	sbiw	r24, 0x01	; 1
    2868:	f1 f7       	brne	.-4      	; 0x2866 <main+0x1752>
    286a:	98 8b       	std	Y+16, r25	; 0x10
    286c:	8f 87       	std	Y+15, r24	; 0x0f
		{
			_delay_ms(20);
			if(!(PINB & (1<<6)))
    286e:	e6 e3       	ldi	r30, 0x36	; 54
    2870:	f0 e0       	ldi	r31, 0x00	; 0
    2872:	80 81       	ld	r24, Z
    2874:	88 2f       	mov	r24, r24
    2876:	90 e0       	ldi	r25, 0x00	; 0
    2878:	80 74       	andi	r24, 0x40	; 64
    287a:	90 70       	andi	r25, 0x00	; 0
    287c:	00 97       	sbiw	r24, 0x00	; 0
    287e:	11 f4       	brne	.+4      	; 0x2884 <main+0x1770>
			{
				Seconds_Increment();
    2880:	0e 94 1f 07 	call	0xe3e	; 0xe3e <Seconds_Increment>
			}
		}
		while( !(PINB & (1<<6)) ){}
    2884:	e6 e3       	ldi	r30, 0x36	; 54
    2886:	f0 e0       	ldi	r31, 0x00	; 0
    2888:	80 81       	ld	r24, Z
    288a:	88 2f       	mov	r24, r24
    288c:	90 e0       	ldi	r25, 0x00	; 0
    288e:	80 74       	andi	r24, 0x40	; 64
    2890:	90 70       	andi	r25, 0x00	; 0
    2892:	00 97       	sbiw	r24, 0x00	; 0
    2894:	b9 f3       	breq	.-18     	; 0x2884 <main+0x1770>
		if(!(PINB & (1<<5)))
    2896:	e6 e3       	ldi	r30, 0x36	; 54
    2898:	f0 e0       	ldi	r31, 0x00	; 0
    289a:	80 81       	ld	r24, Z
    289c:	88 2f       	mov	r24, r24
    289e:	90 e0       	ldi	r25, 0x00	; 0
    28a0:	80 72       	andi	r24, 0x20	; 32
    28a2:	90 70       	andi	r25, 0x00	; 0
    28a4:	00 97       	sbiw	r24, 0x00	; 0
    28a6:	09 f0       	breq	.+2      	; 0x28aa <main+0x1796>
    28a8:	7d c0       	rjmp	.+250    	; 0x29a4 <main+0x1890>
    28aa:	80 e0       	ldi	r24, 0x00	; 0
    28ac:	90 e0       	ldi	r25, 0x00	; 0
    28ae:	a0 ea       	ldi	r26, 0xA0	; 160
    28b0:	b1 e4       	ldi	r27, 0x41	; 65
    28b2:	8b 87       	std	Y+11, r24	; 0x0b
    28b4:	9c 87       	std	Y+12, r25	; 0x0c
    28b6:	ad 87       	std	Y+13, r26	; 0x0d
    28b8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    28bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    28be:	8d 85       	ldd	r24, Y+13	; 0x0d
    28c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    28c2:	20 e0       	ldi	r18, 0x00	; 0
    28c4:	30 e0       	ldi	r19, 0x00	; 0
    28c6:	4a e7       	ldi	r20, 0x7A	; 122
    28c8:	55 e4       	ldi	r21, 0x45	; 69
    28ca:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    28ce:	dc 01       	movw	r26, r24
    28d0:	cb 01       	movw	r24, r22
    28d2:	8f 83       	std	Y+7, r24	; 0x07
    28d4:	98 87       	std	Y+8, r25	; 0x08
    28d6:	a9 87       	std	Y+9, r26	; 0x09
    28d8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    28da:	6f 81       	ldd	r22, Y+7	; 0x07
    28dc:	78 85       	ldd	r23, Y+8	; 0x08
    28de:	89 85       	ldd	r24, Y+9	; 0x09
    28e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    28e2:	20 e0       	ldi	r18, 0x00	; 0
    28e4:	30 e0       	ldi	r19, 0x00	; 0
    28e6:	40 e8       	ldi	r20, 0x80	; 128
    28e8:	5f e3       	ldi	r21, 0x3F	; 63
    28ea:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    28ee:	88 23       	and	r24, r24
    28f0:	2c f4       	brge	.+10     	; 0x28fc <main+0x17e8>
		__ticks = 1;
    28f2:	81 e0       	ldi	r24, 0x01	; 1
    28f4:	90 e0       	ldi	r25, 0x00	; 0
    28f6:	9e 83       	std	Y+6, r25	; 0x06
    28f8:	8d 83       	std	Y+5, r24	; 0x05
    28fa:	3f c0       	rjmp	.+126    	; 0x297a <main+0x1866>
	else if (__tmp > 65535)
    28fc:	6f 81       	ldd	r22, Y+7	; 0x07
    28fe:	78 85       	ldd	r23, Y+8	; 0x08
    2900:	89 85       	ldd	r24, Y+9	; 0x09
    2902:	9a 85       	ldd	r25, Y+10	; 0x0a
    2904:	20 e0       	ldi	r18, 0x00	; 0
    2906:	3f ef       	ldi	r19, 0xFF	; 255
    2908:	4f e7       	ldi	r20, 0x7F	; 127
    290a:	57 e4       	ldi	r21, 0x47	; 71
    290c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2910:	18 16       	cp	r1, r24
    2912:	4c f5       	brge	.+82     	; 0x2966 <main+0x1852>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2914:	6b 85       	ldd	r22, Y+11	; 0x0b
    2916:	7c 85       	ldd	r23, Y+12	; 0x0c
    2918:	8d 85       	ldd	r24, Y+13	; 0x0d
    291a:	9e 85       	ldd	r25, Y+14	; 0x0e
    291c:	20 e0       	ldi	r18, 0x00	; 0
    291e:	30 e0       	ldi	r19, 0x00	; 0
    2920:	40 e2       	ldi	r20, 0x20	; 32
    2922:	51 e4       	ldi	r21, 0x41	; 65
    2924:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2928:	dc 01       	movw	r26, r24
    292a:	cb 01       	movw	r24, r22
    292c:	bc 01       	movw	r22, r24
    292e:	cd 01       	movw	r24, r26
    2930:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2934:	dc 01       	movw	r26, r24
    2936:	cb 01       	movw	r24, r22
    2938:	9e 83       	std	Y+6, r25	; 0x06
    293a:	8d 83       	std	Y+5, r24	; 0x05
    293c:	0f c0       	rjmp	.+30     	; 0x295c <main+0x1848>
    293e:	80 e9       	ldi	r24, 0x90	; 144
    2940:	91 e0       	ldi	r25, 0x01	; 1
    2942:	9c 83       	std	Y+4, r25	; 0x04
    2944:	8b 83       	std	Y+3, r24	; 0x03
    2946:	8b 81       	ldd	r24, Y+3	; 0x03
    2948:	9c 81       	ldd	r25, Y+4	; 0x04
    294a:	01 97       	sbiw	r24, 0x01	; 1
    294c:	f1 f7       	brne	.-4      	; 0x294a <main+0x1836>
    294e:	9c 83       	std	Y+4, r25	; 0x04
    2950:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2952:	8d 81       	ldd	r24, Y+5	; 0x05
    2954:	9e 81       	ldd	r25, Y+6	; 0x06
    2956:	01 97       	sbiw	r24, 0x01	; 1
    2958:	9e 83       	std	Y+6, r25	; 0x06
    295a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    295c:	8d 81       	ldd	r24, Y+5	; 0x05
    295e:	9e 81       	ldd	r25, Y+6	; 0x06
    2960:	00 97       	sbiw	r24, 0x00	; 0
    2962:	69 f7       	brne	.-38     	; 0x293e <main+0x182a>
    2964:	14 c0       	rjmp	.+40     	; 0x298e <main+0x187a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2966:	6f 81       	ldd	r22, Y+7	; 0x07
    2968:	78 85       	ldd	r23, Y+8	; 0x08
    296a:	89 85       	ldd	r24, Y+9	; 0x09
    296c:	9a 85       	ldd	r25, Y+10	; 0x0a
    296e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2972:	dc 01       	movw	r26, r24
    2974:	cb 01       	movw	r24, r22
    2976:	9e 83       	std	Y+6, r25	; 0x06
    2978:	8d 83       	std	Y+5, r24	; 0x05
    297a:	8d 81       	ldd	r24, Y+5	; 0x05
    297c:	9e 81       	ldd	r25, Y+6	; 0x06
    297e:	9a 83       	std	Y+2, r25	; 0x02
    2980:	89 83       	std	Y+1, r24	; 0x01
    2982:	89 81       	ldd	r24, Y+1	; 0x01
    2984:	9a 81       	ldd	r25, Y+2	; 0x02
    2986:	01 97       	sbiw	r24, 0x01	; 1
    2988:	f1 f7       	brne	.-4      	; 0x2986 <main+0x1872>
    298a:	9a 83       	std	Y+2, r25	; 0x02
    298c:	89 83       	std	Y+1, r24	; 0x01
		{
			_delay_ms(20);
			if(!(PINB & (1<<5)))
    298e:	e6 e3       	ldi	r30, 0x36	; 54
    2990:	f0 e0       	ldi	r31, 0x00	; 0
    2992:	80 81       	ld	r24, Z
    2994:	88 2f       	mov	r24, r24
    2996:	90 e0       	ldi	r25, 0x00	; 0
    2998:	80 72       	andi	r24, 0x20	; 32
    299a:	90 70       	andi	r25, 0x00	; 0
    299c:	00 97       	sbiw	r24, 0x00	; 0
    299e:	11 f4       	brne	.+4      	; 0x29a4 <main+0x1890>
			{
				Seconds_Decrement();
    29a0:	0e 94 38 07 	call	0xe70	; 0xe70 <Seconds_Decrement>
			}
		}
		while( !(PINB & (1<<5)) ){}
    29a4:	e6 e3       	ldi	r30, 0x36	; 54
    29a6:	f0 e0       	ldi	r31, 0x00	; 0
    29a8:	80 81       	ld	r24, Z
    29aa:	88 2f       	mov	r24, r24
    29ac:	90 e0       	ldi	r25, 0x00	; 0
    29ae:	80 72       	andi	r24, 0x20	; 32
    29b0:	90 70       	andi	r25, 0x00	; 0
    29b2:	00 97       	sbiw	r24, 0x00	; 0
    29b4:	b9 f3       	breq	.-18     	; 0x29a4 <main+0x1890>
    29b6:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <main+0xa6>

000029ba <__udivmodqi4>:
    29ba:	99 1b       	sub	r25, r25
    29bc:	79 e0       	ldi	r23, 0x09	; 9
    29be:	04 c0       	rjmp	.+8      	; 0x29c8 <__udivmodqi4_ep>

000029c0 <__udivmodqi4_loop>:
    29c0:	99 1f       	adc	r25, r25
    29c2:	96 17       	cp	r25, r22
    29c4:	08 f0       	brcs	.+2      	; 0x29c8 <__udivmodqi4_ep>
    29c6:	96 1b       	sub	r25, r22

000029c8 <__udivmodqi4_ep>:
    29c8:	88 1f       	adc	r24, r24
    29ca:	7a 95       	dec	r23
    29cc:	c9 f7       	brne	.-14     	; 0x29c0 <__udivmodqi4_loop>
    29ce:	80 95       	com	r24
    29d0:	08 95       	ret

000029d2 <__prologue_saves__>:
    29d2:	2f 92       	push	r2
    29d4:	3f 92       	push	r3
    29d6:	4f 92       	push	r4
    29d8:	5f 92       	push	r5
    29da:	6f 92       	push	r6
    29dc:	7f 92       	push	r7
    29de:	8f 92       	push	r8
    29e0:	9f 92       	push	r9
    29e2:	af 92       	push	r10
    29e4:	bf 92       	push	r11
    29e6:	cf 92       	push	r12
    29e8:	df 92       	push	r13
    29ea:	ef 92       	push	r14
    29ec:	ff 92       	push	r15
    29ee:	0f 93       	push	r16
    29f0:	1f 93       	push	r17
    29f2:	cf 93       	push	r28
    29f4:	df 93       	push	r29
    29f6:	cd b7       	in	r28, 0x3d	; 61
    29f8:	de b7       	in	r29, 0x3e	; 62
    29fa:	ca 1b       	sub	r28, r26
    29fc:	db 0b       	sbc	r29, r27
    29fe:	0f b6       	in	r0, 0x3f	; 63
    2a00:	f8 94       	cli
    2a02:	de bf       	out	0x3e, r29	; 62
    2a04:	0f be       	out	0x3f, r0	; 63
    2a06:	cd bf       	out	0x3d, r28	; 61
    2a08:	09 94       	ijmp

00002a0a <__epilogue_restores__>:
    2a0a:	2a 88       	ldd	r2, Y+18	; 0x12
    2a0c:	39 88       	ldd	r3, Y+17	; 0x11
    2a0e:	48 88       	ldd	r4, Y+16	; 0x10
    2a10:	5f 84       	ldd	r5, Y+15	; 0x0f
    2a12:	6e 84       	ldd	r6, Y+14	; 0x0e
    2a14:	7d 84       	ldd	r7, Y+13	; 0x0d
    2a16:	8c 84       	ldd	r8, Y+12	; 0x0c
    2a18:	9b 84       	ldd	r9, Y+11	; 0x0b
    2a1a:	aa 84       	ldd	r10, Y+10	; 0x0a
    2a1c:	b9 84       	ldd	r11, Y+9	; 0x09
    2a1e:	c8 84       	ldd	r12, Y+8	; 0x08
    2a20:	df 80       	ldd	r13, Y+7	; 0x07
    2a22:	ee 80       	ldd	r14, Y+6	; 0x06
    2a24:	fd 80       	ldd	r15, Y+5	; 0x05
    2a26:	0c 81       	ldd	r16, Y+4	; 0x04
    2a28:	1b 81       	ldd	r17, Y+3	; 0x03
    2a2a:	aa 81       	ldd	r26, Y+2	; 0x02
    2a2c:	b9 81       	ldd	r27, Y+1	; 0x01
    2a2e:	ce 0f       	add	r28, r30
    2a30:	d1 1d       	adc	r29, r1
    2a32:	0f b6       	in	r0, 0x3f	; 63
    2a34:	f8 94       	cli
    2a36:	de bf       	out	0x3e, r29	; 62
    2a38:	0f be       	out	0x3f, r0	; 63
    2a3a:	cd bf       	out	0x3d, r28	; 61
    2a3c:	ed 01       	movw	r28, r26
    2a3e:	08 95       	ret

00002a40 <_exit>:
    2a40:	f8 94       	cli

00002a42 <__stop_program>:
    2a42:	ff cf       	rjmp	.-2      	; 0x2a42 <__stop_program>
